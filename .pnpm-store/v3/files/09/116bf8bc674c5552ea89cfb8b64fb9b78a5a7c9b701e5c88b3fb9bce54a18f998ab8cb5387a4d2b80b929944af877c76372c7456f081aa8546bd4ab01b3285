import { PressEvents } from "../primitives";
import { LongPressEvents } from "../primitives/create-long-press/types";
export interface PressableOptions extends PressEvents, LongPressEvents {
    /** Whether the pressable is disabled. */
    isDisabled?: boolean;
    /** Whether the pressable should not receive focus on press. */
    preventFocusOnPress?: boolean;
    /**
     * Whether press events should be canceled when the pointer leaves the pressable while pressed.
     *
     * By default, this is `false`, which means if the pointer returns over the pressable while
     * still pressed, onPressStart will be fired again.
     *
     * If set to `true`, the press is canceled when the pointer leaves the pressable and
     * onPressStart will not be fired if the pointer returns.
     */
    cancelOnPointerExit?: boolean;
    /** Whether text selection should be enabled on the pressable. */
    allowTextSelectionOnPress?: boolean;
    /** The amount of time in milliseconds to wait before triggering a long press. */
    threshold?: number;
}
/**
 * `Pressable` handles press and long press interactions across mouse, touch, keyboard, and screen readers.
 * Supports a customizable time threshold, normalizes behavior across browsers and platforms,
 * and handles many nuances of dealing with pointer and keyboard events.
 * It renders a `<button>` by default.
 */
export declare const Pressable: import("@kobalte/utils").PolymorphicComponent<"button", PressableOptions>;
