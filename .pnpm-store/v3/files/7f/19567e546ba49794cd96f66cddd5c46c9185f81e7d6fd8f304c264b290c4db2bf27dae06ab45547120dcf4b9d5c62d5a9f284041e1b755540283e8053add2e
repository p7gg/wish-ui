'use strict';

var utils = require('@solid-primitives/utils');
var solidJs = require('solid-js');

// src/eventListener.ts
function makeEventListener(target, type, handler, options) {
  target.addEventListener(type, handler, options);
  return utils.onRootCleanup(target.removeEventListener.bind(target, type, handler, options));
}
function createEventListener(targets, type, handler, options) {
  return;
}
function createEventSignal(target, type, options) {
  {
    return () => void 0;
  }
}
exports.eventListener = (target, props) => {
  solidJs.createEffect(() => {
    const [type, handler, options] = props();
    makeEventListener(target, type, handler, options);
  });
};
function createEventListenerMap(targets, handlersMap, options) {
  {
    return;
  }
}
exports.WindowEventListener = (props) => {
  return null;
};
exports.DocumentEventListener = (props) => {
  return null;
};
function makeEventListenerStack(target, options) {
  {
    return [() => () => void 0, () => void 0];
  }
}

// src/callbackWrappers.ts
exports.preventDefault = (callback) => (e) => {
  e.preventDefault();
  callback(e);
};
exports.stopPropagation = (callback) => (e) => {
  e.stopPropagation();
  callback(e);
};
exports.stopImmediatePropagation = (callback) => (e) => {
  e.stopImmediatePropagation();
  callback(e);
};

exports.createEventListener = createEventListener;
exports.createEventListenerMap = createEventListenerMap;
exports.createEventSignal = createEventSignal;
exports.makeEventListener = makeEventListener;
exports.makeEventListenerStack = makeEventListenerStack;
