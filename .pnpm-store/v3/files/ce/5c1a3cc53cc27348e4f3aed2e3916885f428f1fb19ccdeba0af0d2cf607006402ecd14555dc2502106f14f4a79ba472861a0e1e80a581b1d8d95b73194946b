/**
 * lucide-solid v0.108.0 - ISC
 */

import { spread, insert, createComponent, Dynamic, mergeProps, effect, setAttribute, template } from 'solid-js/web';
import { splitProps, For } from 'solid-js';

const defaultAttributes = {
  xmlns: 'http://www.w3.org/2000/svg',
  width: 24,
  height: 24,
  viewBox: '0 0 24 24',
  fill: 'none',
  stroke: 'currentColor',
  'stroke-width': 2,
  'stroke-linecap': 'round',
  'stroke-linejoin': 'round'
};
var defaultAttributes$1 = defaultAttributes;

const _tmpl$ = /*#__PURE__*/template(`<svg></svg>`, 2);
/**
 * Converts string to KebabCase
 * Copied from scripts/helper. If anyone knows how to properly import it here
 * then please fix it.
 *
 * @param {string} string
 * @returns {string} A kebabized string
 */
const toKebabCase = string => string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();
const Icon = props => {
  const [localProps, rest] = splitProps(props, ['color', 'size', 'strokeWidth', 'children', 'class', 'name', 'iconNode']);
  return (() => {
    const _el$ = _tmpl$.cloneNode(true);
    spread(_el$, defaultAttributes$1, true, true);
    spread(_el$, rest, true, true);
    insert(_el$, createComponent(For, {
      get each() {
        return localProps.iconNode;
      },
      children: ([elementName, attrs]) => {
        return createComponent(Dynamic, mergeProps({
          component: elementName
        }, attrs));
      }
    }));
    effect(_p$ => {
      const _v$ = localProps.size ?? defaultAttributes$1.width,
        _v$2 = localProps.size ?? defaultAttributes$1.height,
        _v$3 = localProps.color ?? defaultAttributes$1.stroke,
        _v$4 = localProps.strokeWidth ?? defaultAttributes$1['stroke-width'],
        _v$5 = `lucide lucide-${toKebabCase(localProps?.name ?? 'icon')} ${localProps.class != null ? localProps.class : ''}`;
      _v$ !== _p$._v$ && setAttribute(_el$, "width", _p$._v$ = _v$);
      _v$2 !== _p$._v$2 && setAttribute(_el$, "height", _p$._v$2 = _v$2);
      _v$3 !== _p$._v$3 && setAttribute(_el$, "stroke", _p$._v$3 = _v$3);
      _v$4 !== _p$._v$4 && setAttribute(_el$, "stroke-width", _p$._v$4 = _v$4);
      _v$5 !== _p$._v$5 && setAttribute(_el$, "class", _p$._v$5 = _v$5);
      return _p$;
    }, {
      _v$: undefined,
      _v$2: undefined,
      _v$3: undefined,
      _v$4: undefined,
      _v$5: undefined
    });
    return _el$;
  })();
};
var Icon$1 = Icon;

const iconNode$dI = [['circle', {
  cx: '16',
  cy: '4',
  r: '1',
  key: '1grugj'
}], ['path', {
  d: 'm18 19 1-7-5.87.94',
  key: '16gztd'
}], ['path', {
  d: 'm5 8 3-3 5.5 3-2.21 3.1',
  key: '133gd0'
}], ['path', {
  d: 'M4.24 14.48c-.19.58-.27 1.2-.23 1.84a5 5 0 0 0 5.31 4.67c.65-.04 1.25-.2 1.8-.46',
  key: '12oo9p'
}], ['path', {
  d: 'M13.76 17.52c.19-.58.27-1.2.23-1.84a5 5 0 0 0-5.31-4.67c-.65.04-1.25.2-1.8.46',
  key: '15si8q'
}]];
const Accessibility = props => createComponent(Icon$1, mergeProps(props, {
  name: "Accessibility",
  iconNode: iconNode$dI
}));
var Accessibility$1 = Accessibility;

const iconNode$dH = [['polyline', {
  points: '22 12 18 12 15 21 9 3 6 12 2 12',
  key: 'xez52g'
}]];
const Activity = props => createComponent(Icon$1, mergeProps(props, {
  name: "Activity",
  iconNode: iconNode$dH
}));
var Activity$1 = Activity;

const iconNode$dG = [['path', {
  d: 'M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2',
  key: 'larmp2'
}], ['path', {
  d: 'M6 8h12',
  key: '6g4wlu'
}], ['path', {
  d: 'M18.3 17.7a2.5 2.5 0 0 1-3.16 3.83 2.53 2.53 0 0 1-1.14-2V12',
  key: '1bo8pg'
}], ['path', {
  d: 'M6.6 15.6A2 2 0 1 0 10 17v-5',
  key: 't9h90c'
}]];
const AirVent = props => createComponent(Icon$1, mergeProps(props, {
  name: "AirVent",
  iconNode: iconNode$dG
}));
var AirVent$1 = AirVent;

const iconNode$dF = [['path', {
  d: 'M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1',
  key: 'ns4c3b'
}], ['polygon', {
  points: '12 15 17 21 7 21 12 15',
  key: '1sy95i'
}]];
const Airplay = props => createComponent(Icon$1, mergeProps(props, {
  name: "Airplay",
  iconNode: iconNode$dF
}));
var Airplay$1 = Airplay;

const iconNode$dE = [['path', {
  d: 'M12 21a8 8 0 1 0 0-16 8 8 0 0 0 0 16z',
  key: '1dr9l2'
}], ['path', {
  d: 'M5 3 2 6',
  key: '18tl5t'
}], ['path', {
  d: 'm22 6-3-3',
  key: '1opdir'
}], ['path', {
  d: 'm6 19-2 2',
  key: '1ek6nb'
}], ['path', {
  d: 'm18 19 2 2',
  key: 'lw9i'
}], ['path', {
  d: 'm9 13 2 2 4-4',
  key: '6343dt'
}]];
const AlarmCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlarmCheck",
  iconNode: iconNode$dE
}));
var AlarmCheck$1 = AlarmCheck;

const iconNode$dD = [['path', {
  d: 'M6.87 6.87a8 8 0 1 0 11.26 11.26',
  key: '3on8tj'
}], ['path', {
  d: 'M19.9 14.25A7.44 7.44 0 0 0 20 13a8 8 0 0 0-8-8 7.44 7.44 0 0 0-1.25.1',
  key: 'nxzvge'
}], ['path', {
  d: 'm22 6-3-3',
  key: '1opdir'
}], ['path', {
  d: 'm6 19-2 2',
  key: '1ek6nb'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}], ['path', {
  d: 'M4 4 2 6',
  key: '1ycko6'
}]];
const AlarmClockOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlarmClockOff",
  iconNode: iconNode$dD
}));
var AlarmClockOff$1 = AlarmClockOff;

const iconNode$dC = [['circle', {
  cx: '12',
  cy: '13',
  r: '8',
  key: '3y4lt7'
}], ['path', {
  d: 'M12 9v4l2 2',
  key: '1c63tq'
}], ['path', {
  d: 'M5 3 2 6',
  key: '18tl5t'
}], ['path', {
  d: 'm22 6-3-3',
  key: '1opdir'
}], ['path', {
  d: 'm6 19-2 2',
  key: '1ek6nb'
}], ['path', {
  d: 'm18 19 2 2',
  key: 'lw9i'
}]];
const AlarmClock = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlarmClock",
  iconNode: iconNode$dC
}));
var AlarmClock$1 = AlarmClock;

const iconNode$dB = [['path', {
  d: 'M12 21a8 8 0 1 0 0-16 8 8 0 0 0 0 16z',
  key: '1dr9l2'
}], ['path', {
  d: 'M5 3 2 6',
  key: '18tl5t'
}], ['path', {
  d: 'm22 6-3-3',
  key: '1opdir'
}], ['path', {
  d: 'm6 19-2 2',
  key: '1ek6nb'
}], ['path', {
  d: 'm18 19 2 2',
  key: 'lw9i'
}], ['path', {
  d: 'M9 13h6',
  key: '1uhe8q'
}]];
const AlarmMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlarmMinus",
  iconNode: iconNode$dB
}));
var AlarmMinus$1 = AlarmMinus;

const iconNode$dA = [['path', {
  d: 'M12 21a8 8 0 1 0 0-16 8 8 0 0 0 0 16z',
  key: '1dr9l2'
}], ['path', {
  d: 'M5 3 2 6',
  key: '18tl5t'
}], ['path', {
  d: 'm22 6-3-3',
  key: '1opdir'
}], ['path', {
  d: 'm6 19-2 2',
  key: '1ek6nb'
}], ['path', {
  d: 'm18 19 2 2',
  key: 'lw9i'
}], ['path', {
  d: 'M12 10v6',
  key: '1bos4e'
}], ['path', {
  d: 'M9 13h6',
  key: '1uhe8q'
}]];
const AlarmPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlarmPlus",
  iconNode: iconNode$dA
}));
var AlarmPlus$1 = AlarmPlus;

const iconNode$dz = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['polyline', {
  points: '11 3 11 11 14 8 17 11 17 3',
  key: '1wcwz3'
}]];
const Album = props => createComponent(Icon$1, mergeProps(props, {
  name: "Album",
  iconNode: iconNode$dz
}));
var Album$1 = Album;

const iconNode$dy = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '12',
  key: '1grbh0'
}], ['line', {
  x1: '12',
  y1: '16',
  x2: '12.01',
  y2: '16',
  key: '1w440g'
}]];
const AlertCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlertCircle",
  iconNode: iconNode$dy
}));
var AlertCircle$1 = AlertCircle;

const iconNode$dx = [['polygon', {
  points: '7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2',
  key: 'h1p8hx'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '12',
  key: '1grbh0'
}], ['line', {
  x1: '12',
  y1: '16',
  x2: '12.01',
  y2: '16',
  key: '1w440g'
}]];
const AlertOctagon = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlertOctagon",
  iconNode: iconNode$dx
}));
var AlertOctagon$1 = AlertOctagon;

const iconNode$dw = [['path', {
  d: 'm21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z',
  key: 'c3ski4'
}], ['line', {
  x1: '12',
  y1: '9',
  x2: '12',
  y2: '13',
  key: 'mb7vjk'
}], ['line', {
  x1: '12',
  y1: '17',
  x2: '12.01',
  y2: '17',
  key: 'kdstpg'
}]];
const AlertTriangle = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlertTriangle",
  iconNode: iconNode$dw
}));
var AlertTriangle$1 = AlertTriangle;

const iconNode$dv = [['path', {
  d: 'M2 12h20',
  key: '9i4pu4'
}], ['path', {
  d: 'M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4',
  key: '11f1s0'
}], ['path', {
  d: 'M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4',
  key: 't14dx9'
}], ['path', {
  d: 'M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1',
  key: '1w07xs'
}], ['path', {
  d: 'M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1',
  key: '1apec2'
}]];
const AlignCenterHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignCenterHorizontal",
  iconNode: iconNode$dv
}));
var AlignCenterHorizontal$1 = AlignCenterHorizontal;

const iconNode$du = [['path', {
  d: 'M12 2v20',
  key: 't6zp3m'
}], ['path', {
  d: 'M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4',
  key: '14d6g8'
}], ['path', {
  d: 'M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4',
  key: '1e2lrw'
}], ['path', {
  d: 'M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1',
  key: '1fkdwx'
}], ['path', {
  d: 'M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1',
  key: '1euafb'
}]];
const AlignCenterVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignCenterVertical",
  iconNode: iconNode$du
}));
var AlignCenterVertical$1 = AlignCenterVertical;

const iconNode$dt = [['line', {
  x1: '21',
  y1: '6',
  x2: '3',
  y2: '6',
  key: '1e448z'
}], ['line', {
  x1: '17',
  y1: '12',
  x2: '7',
  y2: '12',
  key: 'driibe'
}], ['line', {
  x1: '19',
  y1: '18',
  x2: '5',
  y2: '18',
  key: '1i3xdx'
}]];
const AlignCenter = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignCenter",
  iconNode: iconNode$dt
}));
var AlignCenter$1 = AlignCenter;

const iconNode$ds = [['rect', {
  x: '4',
  y: '2',
  width: '6',
  height: '16',
  rx: '2',
  key: 'xp5u6c'
}], ['rect', {
  x: '14',
  y: '9',
  width: '6',
  height: '9',
  rx: '2',
  key: '1e039c'
}], ['path', {
  d: 'M22 22H2',
  key: '19qnx5'
}]];
const AlignEndHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignEndHorizontal",
  iconNode: iconNode$ds
}));
var AlignEndHorizontal$1 = AlignEndHorizontal;

const iconNode$dr = [['rect', {
  x: '2',
  y: '4',
  width: '16',
  height: '6',
  rx: '2',
  key: '1j7b8s'
}], ['rect', {
  x: '9',
  y: '14',
  width: '9',
  height: '6',
  rx: '2',
  key: 'b2t4yo'
}], ['path', {
  d: 'M22 22V2',
  key: '12ipfv'
}]];
const AlignEndVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignEndVertical",
  iconNode: iconNode$dr
}));
var AlignEndVertical$1 = AlignEndVertical;

const iconNode$dq = [['rect', {
  x: '4',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: 'ric6yp'
}], ['rect', {
  x: '14',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '1mr5t1'
}], ['path', {
  d: 'M17 22v-5',
  key: '4b6g73'
}], ['path', {
  d: 'M17 7V2',
  key: 'hnrr36'
}], ['path', {
  d: 'M7 22v-3',
  key: '1r4jpn'
}], ['path', {
  d: 'M7 5V2',
  key: 'liy1u9'
}]];
const AlignHorizontalDistributeCenter = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalDistributeCenter",
  iconNode: iconNode$dq
}));
var AlignHorizontalDistributeCenter$1 = AlignHorizontalDistributeCenter;

const iconNode$dp = [['rect', {
  x: '4',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: 'ric6yp'
}], ['rect', {
  x: '14',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '1mr5t1'
}], ['path', {
  d: 'M10 2v20',
  key: 'uyc634'
}], ['path', {
  d: 'M20 2v20',
  key: '1tx262'
}]];
const AlignHorizontalDistributeEnd = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalDistributeEnd",
  iconNode: iconNode$dp
}));
var AlignHorizontalDistributeEnd$1 = AlignHorizontalDistributeEnd;

const iconNode$do = [['rect', {
  x: '4',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: 'ric6yp'
}], ['rect', {
  x: '14',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '1mr5t1'
}], ['path', {
  d: 'M4 2v20',
  key: 'gtpd5x'
}], ['path', {
  d: 'M14 2v20',
  key: 'tg6bpw'
}]];
const AlignHorizontalDistributeStart = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalDistributeStart",
  iconNode: iconNode$do
}));
var AlignHorizontalDistributeStart$1 = AlignHorizontalDistributeStart;

const iconNode$dn = [['rect', {
  x: '2',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: '15angl'
}], ['rect', {
  x: '16',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '1di99g'
}], ['path', {
  d: 'M12 2v20',
  key: 't6zp3m'
}]];
const AlignHorizontalJustifyCenter = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalJustifyCenter",
  iconNode: iconNode$dn
}));
var AlignHorizontalJustifyCenter$1 = AlignHorizontalJustifyCenter;

const iconNode$dm = [['rect', {
  x: '2',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: '15angl'
}], ['rect', {
  x: '12',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '150rwc'
}], ['path', {
  d: 'M22 2v20',
  key: '40qfg1'
}]];
const AlignHorizontalJustifyEnd = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalJustifyEnd",
  iconNode: iconNode$dm
}));
var AlignHorizontalJustifyEnd$1 = AlignHorizontalJustifyEnd;

const iconNode$dl = [['rect', {
  x: '6',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: '1mezge'
}], ['rect', {
  x: '16',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '1di99g'
}], ['path', {
  d: 'M2 2v20',
  key: '1ivd8o'
}]];
const AlignHorizontalJustifyStart = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalJustifyStart",
  iconNode: iconNode$dl
}));
var AlignHorizontalJustifyStart$1 = AlignHorizontalJustifyStart;

const iconNode$dk = [['rect', {
  x: '9',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '7k3bt6'
}], ['path', {
  d: 'M4 22V2',
  key: 'tsjzd3'
}], ['path', {
  d: 'M20 22V2',
  key: '1bnhr8'
}]];
const AlignHorizontalSpaceAround = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalSpaceAround",
  iconNode: iconNode$dk
}));
var AlignHorizontalSpaceAround$1 = AlignHorizontalSpaceAround;

const iconNode$dj = [['rect', {
  x: '3',
  y: '5',
  width: '6',
  height: '14',
  rx: '2',
  key: 'iybqme'
}], ['rect', {
  x: '15',
  y: '7',
  width: '6',
  height: '10',
  rx: '2',
  key: '11q98m'
}], ['path', {
  d: 'M3 2v20',
  key: '1d2pfg'
}], ['path', {
  d: 'M21 2v20',
  key: 'p059bm'
}]];
const AlignHorizontalSpaceBetween = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignHorizontalSpaceBetween",
  iconNode: iconNode$dj
}));
var AlignHorizontalSpaceBetween$1 = AlignHorizontalSpaceBetween;

const iconNode$di = [['line', {
  x1: '3',
  y1: '6',
  x2: '21',
  y2: '6',
  key: '1tp2lp'
}], ['line', {
  x1: '3',
  y1: '12',
  x2: '21',
  y2: '12',
  key: '1aui40'
}], ['line', {
  x1: '3',
  y1: '18',
  x2: '21',
  y2: '18',
  key: '1sxo76'
}]];
const AlignJustify = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignJustify",
  iconNode: iconNode$di
}));
var AlignJustify$1 = AlignJustify;

const iconNode$dh = [['line', {
  x1: '21',
  y1: '6',
  x2: '3',
  y2: '6',
  key: '1e448z'
}], ['line', {
  x1: '15',
  y1: '12',
  x2: '3',
  y2: '12',
  key: '80e4vw'
}], ['line', {
  x1: '17',
  y1: '18',
  x2: '3',
  y2: '18',
  key: '1771gn'
}]];
const AlignLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignLeft",
  iconNode: iconNode$dh
}));
var AlignLeft$1 = AlignLeft;

const iconNode$dg = [['line', {
  x1: '21',
  y1: '6',
  x2: '3',
  y2: '6',
  key: '1e448z'
}], ['line', {
  x1: '21',
  y1: '12',
  x2: '9',
  y2: '12',
  key: '1stwgr'
}], ['line', {
  x1: '21',
  y1: '18',
  x2: '7',
  y2: '18',
  key: '1hion3'
}]];
const AlignRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignRight",
  iconNode: iconNode$dg
}));
var AlignRight$1 = AlignRight;

const iconNode$df = [['rect', {
  x: '4',
  y: '6',
  width: '6',
  height: '16',
  rx: '2',
  key: '1l8oni'
}], ['rect', {
  x: '14',
  y: '6',
  width: '6',
  height: '9',
  rx: '2',
  key: '16r6cq'
}], ['path', {
  d: 'M22 2H2',
  key: 'fhrpnj'
}]];
const AlignStartHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignStartHorizontal",
  iconNode: iconNode$df
}));
var AlignStartHorizontal$1 = AlignStartHorizontal;

const iconNode$de = [['rect', {
  x: '6',
  y: '14',
  width: '9',
  height: '6',
  rx: '2',
  key: 'pvftf3'
}], ['rect', {
  x: '6',
  y: '4',
  width: '16',
  height: '6',
  rx: '2',
  key: '1aj6m8'
}], ['path', {
  d: 'M2 2v20',
  key: '1ivd8o'
}]];
const AlignStartVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignStartVertical",
  iconNode: iconNode$de
}));
var AlignStartVertical$1 = AlignStartVertical;

const iconNode$dd = [['rect', {
  x: '5',
  y: '14',
  width: '14',
  height: '6',
  rx: '2',
  key: '1qrzuf'
}], ['rect', {
  x: '7',
  y: '4',
  width: '10',
  height: '6',
  rx: '2',
  key: 'we8e9z'
}], ['path', {
  d: 'M22 7h-5',
  key: 'o2endc'
}], ['path', {
  d: 'M7 7H1',
  key: '105l6j'
}], ['path', {
  d: 'M22 17h-3',
  key: '1lwga1'
}], ['path', {
  d: 'M5 17H2',
  key: '1gx9xc'
}]];
const AlignVerticalDistributeCenter = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalDistributeCenter",
  iconNode: iconNode$dd
}));
var AlignVerticalDistributeCenter$1 = AlignVerticalDistributeCenter;

const iconNode$dc = [['rect', {
  x: '5',
  y: '14',
  width: '14',
  height: '6',
  rx: '2',
  key: '1qrzuf'
}], ['rect', {
  x: '7',
  y: '4',
  width: '10',
  height: '6',
  rx: '2',
  key: 'we8e9z'
}], ['path', {
  d: 'M2 20h20',
  key: 'owomy5'
}], ['path', {
  d: 'M2 10h20',
  key: '1ir3d8'
}]];
const AlignVerticalDistributeEnd = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalDistributeEnd",
  iconNode: iconNode$dc
}));
var AlignVerticalDistributeEnd$1 = AlignVerticalDistributeEnd;

const iconNode$db = [['rect', {
  x: '5',
  y: '14',
  width: '14',
  height: '6',
  rx: '2',
  key: '1qrzuf'
}], ['rect', {
  x: '7',
  y: '4',
  width: '10',
  height: '6',
  rx: '2',
  key: 'we8e9z'
}], ['path', {
  d: 'M2 14h20',
  key: 'myj16y'
}], ['path', {
  d: 'M2 4h20',
  key: 'mda7wb'
}]];
const AlignVerticalDistributeStart = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalDistributeStart",
  iconNode: iconNode$db
}));
var AlignVerticalDistributeStart$1 = AlignVerticalDistributeStart;

const iconNode$da = [['rect', {
  x: '5',
  y: '16',
  width: '14',
  height: '6',
  rx: '2',
  key: '1xmr5l'
}], ['rect', {
  x: '7',
  y: '2',
  width: '10',
  height: '6',
  rx: '2',
  key: '1dm79a'
}], ['path', {
  d: 'M2 12h20',
  key: '9i4pu4'
}]];
const AlignVerticalJustifyCenter = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalJustifyCenter",
  iconNode: iconNode$da
}));
var AlignVerticalJustifyCenter$1 = AlignVerticalJustifyCenter;

const iconNode$d9 = [['rect', {
  x: '5',
  y: '12',
  width: '14',
  height: '6',
  rx: '2',
  key: '12nflp'
}], ['rect', {
  x: '7',
  y: '2',
  width: '10',
  height: '6',
  rx: '2',
  key: '1dm79a'
}], ['path', {
  d: 'M2 22h20',
  key: '272qi7'
}]];
const AlignVerticalJustifyEnd = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalJustifyEnd",
  iconNode: iconNode$d9
}));
var AlignVerticalJustifyEnd$1 = AlignVerticalJustifyEnd;

const iconNode$d8 = [['rect', {
  x: '5',
  y: '16',
  width: '14',
  height: '6',
  rx: '2',
  key: '1xmr5l'
}], ['rect', {
  x: '7',
  y: '6',
  width: '10',
  height: '6',
  rx: '2',
  key: 'q2ofyd'
}], ['path', {
  d: 'M2 2h20',
  key: '1ennik'
}]];
const AlignVerticalJustifyStart = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalJustifyStart",
  iconNode: iconNode$d8
}));
var AlignVerticalJustifyStart$1 = AlignVerticalJustifyStart;

const iconNode$d7 = [['rect', {
  x: '7',
  y: '9',
  width: '10',
  height: '6',
  rx: '2',
  key: '1iy9tl'
}], ['path', {
  d: 'M22 20H2',
  key: '1p1f7z'
}], ['path', {
  d: 'M22 4H2',
  key: '1b7qnq'
}]];
const AlignVerticalSpaceAround = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalSpaceAround",
  iconNode: iconNode$d7
}));
var AlignVerticalSpaceAround$1 = AlignVerticalSpaceAround;

const iconNode$d6 = [['rect', {
  x: '5',
  y: '15',
  width: '14',
  height: '6',
  rx: '2',
  key: 'hytrht'
}], ['rect', {
  x: '7',
  y: '3',
  width: '10',
  height: '6',
  rx: '2',
  key: 'y09b40'
}], ['path', {
  d: 'M2 21h20',
  key: '1nyx9w'
}], ['path', {
  d: 'M2 3h20',
  key: '91anmk'
}]];
const AlignVerticalSpaceBetween = props => createComponent(Icon$1, mergeProps(props, {
  name: "AlignVerticalSpaceBetween",
  iconNode: iconNode$d6
}));
var AlignVerticalSpaceBetween$1 = AlignVerticalSpaceBetween;

const iconNode$d5 = [['circle', {
  cx: '12',
  cy: '5',
  r: '3',
  key: 'rqqgnr'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '8',
  key: '111jcv'
}], ['path', {
  d: 'M5 12H2a10 10 0 0 0 20 0h-3',
  key: '1hv3nh'
}]];
const Anchor = props => createComponent(Icon$1, mergeProps(props, {
  name: "Anchor",
  iconNode: iconNode$d5
}));
var Anchor$1 = Anchor;

const iconNode$d4 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M16 16s-1.5-2-4-2-4 2-4 2',
  key: 'epbg0q'
}], ['path', {
  d: 'M7.5 8 10 9',
  key: 'olxxln'
}], ['path', {
  d: 'm14 9 2.5-1',
  key: '1j6cij'
}], ['path', {
  d: 'M9 10h0',
  key: '1vxvly'
}], ['path', {
  d: 'M15 10h0',
  key: '1j6oav'
}]];
const Angry = props => createComponent(Icon$1, mergeProps(props, {
  name: "Angry",
  iconNode: iconNode$d4
}));
var Angry$1 = Angry;

const iconNode$d3 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M8 15h8',
  key: '45n4r'
}], ['path', {
  d: 'M8 9h2',
  key: '1g203m'
}], ['path', {
  d: 'M14 9h2',
  key: '116p9w'
}]];
const Annoyed = props => createComponent(Icon$1, mergeProps(props, {
  name: "Annoyed",
  iconNode: iconNode$d3
}));
var Annoyed$1 = Annoyed;

const iconNode$d2 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '14.31',
  y1: '8',
  x2: '20.05',
  y2: '17.94',
  key: '1oqej7'
}], ['line', {
  x1: '9.69',
  y1: '8',
  x2: '21.17',
  y2: '8',
  key: '1cv19a'
}], ['line', {
  x1: '7.38',
  y1: '12',
  x2: '13.12',
  y2: '2.06',
  key: '1vh5oz'
}], ['line', {
  x1: '9.69',
  y1: '16',
  x2: '3.95',
  y2: '6.06',
  key: 'saeeuz'
}], ['line', {
  x1: '14.31',
  y1: '16',
  x2: '2.83',
  y2: '16',
  key: 'pq85rp'
}], ['line', {
  x1: '16.62',
  y1: '12',
  x2: '10.88',
  y2: '21.94',
  key: 'wactqi'
}]];
const Aperture = props => createComponent(Icon$1, mergeProps(props, {
  name: "Aperture",
  iconNode: iconNode$d2
}));
var Aperture$1 = Aperture;

const iconNode$d1 = [['path', {
  d: 'M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z',
  key: '3s7exb'
}], ['path', {
  d: 'M10 2c1 .5 2 2 2 5',
  key: 'fcco2y'
}]];
const Apple = props => createComponent(Icon$1, mergeProps(props, {
  name: "Apple",
  iconNode: iconNode$d1
}));
var Apple$1 = Apple;

const iconNode$d0 = [['rect', {
  x: '2',
  y: '4',
  width: '20',
  height: '5',
  rx: '2',
  key: '1h2p0l'
}], ['path', {
  d: 'M12 13v7',
  key: '1arz7h'
}], ['path', {
  d: 'm9 16 3-3 3 3',
  key: '1idcnm'
}], ['path', {
  d: 'M4 9v9a2 2 0 0 0 2 2h2',
  key: 'qxnby6'
}], ['path', {
  d: 'M20 9v9a2 2 0 0 1-2 2h-2',
  key: 'gz3jmx'
}]];
const ArchiveRestore = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArchiveRestore",
  iconNode: iconNode$d0
}));
var ArchiveRestore$1 = ArchiveRestore;

const iconNode$c$ = [['rect', {
  x: '2',
  y: '4',
  width: '20',
  height: '5',
  rx: '2',
  key: '1h2p0l'
}], ['path', {
  d: 'M4 9v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9',
  key: 'shkvi4'
}], ['path', {
  d: 'M10 13h4',
  key: 'ytezjc'
}]];
const Archive = props => createComponent(Icon$1, mergeProps(props, {
  name: "Archive",
  iconNode: iconNode$c$
}));
var Archive$1 = Archive;

const iconNode$c_ = [['path', {
  d: 'M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3',
  key: 'irtipd'
}], ['path', {
  d: 'M3 11v5a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v2H7v-2a2 2 0 0 0-4 0Z',
  key: '1ed1m0'
}], ['path', {
  d: 'M5 18v2',
  key: 'ppbyun'
}], ['path', {
  d: 'M19 18v2',
  key: 'gy7782'
}]];
const Armchair = props => createComponent(Icon$1, mergeProps(props, {
  name: "Armchair",
  iconNode: iconNode$c_
}));
var Armchair$1 = Armchair;

const iconNode$cZ = [['path', {
  d: 'M9 3h6v11h4l-7 7-7-7h4z',
  key: '6dczpq'
}]];
const ArrowBigDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowBigDown",
  iconNode: iconNode$cZ
}));
var ArrowBigDown$1 = ArrowBigDown;

const iconNode$cY = [['path', {
  d: 'm3 12 7-7v4h11v6H10v4z',
  key: '1e8ocp'
}]];
const ArrowBigLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowBigLeft",
  iconNode: iconNode$cY
}));
var ArrowBigLeft$1 = ArrowBigLeft;

const iconNode$cX = [['path', {
  d: 'm21 12-7-7v4H3v6h11v4z',
  key: '58zwfy'
}]];
const ArrowBigRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowBigRight",
  iconNode: iconNode$cX
}));
var ArrowBigRight$1 = ArrowBigRight;

const iconNode$cW = [['path', {
  d: 'M9 21V10H5l7-7 7 7h-4v11z',
  key: '8tfmm3'
}]];
const ArrowBigUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowBigUp",
  iconNode: iconNode$cW
}));
var ArrowBigUp$1 = ArrowBigUp;

const iconNode$cV = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '8 12 12 16 16 12',
  key: '14qdon'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '16',
  key: '55jlg'
}]];
const ArrowDownCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowDownCircle",
  iconNode: iconNode$cV
}));
var ArrowDownCircle$1 = ArrowDownCircle;

const iconNode$cU = [['line', {
  x1: '17',
  y1: '7',
  x2: '7',
  y2: '17',
  key: '1cuvd1'
}], ['polyline', {
  points: '17 17 7 17 7 7',
  key: 'aq42rd'
}]];
const ArrowDownLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowDownLeft",
  iconNode: iconNode$cU
}));
var ArrowDownLeft$1 = ArrowDownLeft;

const iconNode$cT = [['line', {
  x1: '7',
  y1: '7',
  x2: '17',
  y2: '17',
  key: 'dtegzv'
}], ['polyline', {
  points: '17 7 17 17 7 17',
  key: '1gmiis'
}]];
const ArrowDownRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowDownRight",
  iconNode: iconNode$cT
}));
var ArrowDownRight$1 = ArrowDownRight;

const iconNode$cS = [['line', {
  x1: '12',
  y1: '5',
  x2: '12',
  y2: '19',
  key: 'myz83a'
}], ['polyline', {
  points: '19 12 12 19 5 12',
  key: '17kmxi'
}]];
const ArrowDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowDown",
  iconNode: iconNode$cS
}));
var ArrowDown$1 = ArrowDown;

const iconNode$cR = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 8 8 12 12 16',
  key: 'bz1698'
}], ['line', {
  x1: '16',
  y1: '12',
  x2: '8',
  y2: '12',
  key: 'i2qu8k'
}]];
const ArrowLeftCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowLeftCircle",
  iconNode: iconNode$cR
}));
var ArrowLeftCircle$1 = ArrowLeftCircle;

const iconNode$cQ = [['polyline', {
  points: '17 11 21 7 17 3',
  key: 'l3l6r3'
}], ['line', {
  x1: '21',
  y1: '7',
  x2: '9',
  y2: '7',
  key: '17x2jj'
}], ['polyline', {
  points: '7 21 3 17 7 13',
  key: 'lfumnw'
}], ['line', {
  x1: '15',
  y1: '17',
  x2: '3',
  y2: '17',
  key: 'gusd5o'
}]];
const ArrowLeftRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowLeftRight",
  iconNode: iconNode$cQ
}));
var ArrowLeftRight$1 = ArrowLeftRight;

const iconNode$cP = [['line', {
  x1: '19',
  y1: '12',
  x2: '5',
  y2: '12',
  key: '17g05t'
}], ['polyline', {
  points: '12 19 5 12 12 5',
  key: '1ksm0z'
}]];
const ArrowLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowLeft",
  iconNode: iconNode$cP
}));
var ArrowLeft$1 = ArrowLeft;

const iconNode$cO = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 16 16 12 12 8',
  key: '1byh5s'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}]];
const ArrowRightCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowRightCircle",
  iconNode: iconNode$cO
}));
var ArrowRightCircle$1 = ArrowRightCircle;

const iconNode$cN = [['line', {
  x1: '5',
  y1: '12',
  x2: '19',
  y2: '12',
  key: '1smlys'
}], ['polyline', {
  points: '12 5 19 12 12 19',
  key: 'sfr3i6'
}]];
const ArrowRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowRight",
  iconNode: iconNode$cN
}));
var ArrowRight$1 = ArrowRight;

const iconNode$cM = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '16 12 12 8 8 12',
  key: '1gpmhk'
}], ['line', {
  x1: '12',
  y1: '16',
  x2: '12',
  y2: '8',
  key: 'r2mfdg'
}]];
const ArrowUpCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowUpCircle",
  iconNode: iconNode$cM
}));
var ArrowUpCircle$1 = ArrowUpCircle;

const iconNode$cL = [['polyline', {
  points: '11 17 7 21 3 17',
  key: 'dv0ycv'
}], ['line', {
  x1: '7',
  y1: '21',
  x2: '7',
  y2: '9',
  key: '1cxv4h'
}], ['polyline', {
  points: '21 7 17 3 13 7',
  key: '1su31j'
}], ['line', {
  x1: '17',
  y1: '15',
  x2: '17',
  y2: '3',
  key: 'r3527w'
}]];
const ArrowUpDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowUpDown",
  iconNode: iconNode$cL
}));
var ArrowUpDown$1 = ArrowUpDown;

const iconNode$cK = [['line', {
  x1: '17',
  y1: '17',
  x2: '7',
  y2: '7',
  key: '814yaz'
}], ['polyline', {
  points: '7 17 7 7 17 7',
  key: '1jae2c'
}]];
const ArrowUpLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowUpLeft",
  iconNode: iconNode$cK
}));
var ArrowUpLeft$1 = ArrowUpLeft;

const iconNode$cJ = [['line', {
  x1: '7',
  y1: '17',
  x2: '17',
  y2: '7',
  key: '16hgw2'
}], ['polyline', {
  points: '7 7 17 7 17 17',
  key: 'blehsp'
}]];
const ArrowUpRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowUpRight",
  iconNode: iconNode$cJ
}));
var ArrowUpRight$1 = ArrowUpRight;

const iconNode$cI = [['line', {
  x1: '12',
  y1: '19',
  x2: '12',
  y2: '5',
  key: 'yrd7g6'
}], ['polyline', {
  points: '5 12 12 5 19 12',
  key: '1y7d7k'
}]];
const ArrowUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "ArrowUp",
  iconNode: iconNode$cI
}));
var ArrowUp$1 = ArrowUp;

const iconNode$cH = [['path', {
  d: 'M12 6v12',
  key: '1vza4d'
}], ['path', {
  d: 'M17.196 9 6.804 15',
  key: '1ah31z'
}], ['path', {
  d: 'm6.804 9 10.392 6',
  key: '1b6pxd'
}]];
const Asterisk = props => createComponent(Icon$1, mergeProps(props, {
  name: "Asterisk",
  iconNode: iconNode$cH
}));
var Asterisk$1 = Asterisk;

const iconNode$cG = [['circle', {
  cx: '12',
  cy: '12',
  r: '4',
  key: '4exip2'
}], ['path', {
  d: 'M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94',
  key: '1m6qx5'
}]];
const AtSign = props => createComponent(Icon$1, mergeProps(props, {
  name: "AtSign",
  iconNode: iconNode$cG
}));
var AtSign$1 = AtSign;

const iconNode$cF = [['circle', {
  cx: '12',
  cy: '8',
  r: '6',
  key: '1vp47v'
}], ['path', {
  d: 'M15.477 12.89 17 22l-5-3-5 3 1.523-9.11',
  key: 'em7aur'
}]];
const Award = props => createComponent(Icon$1, mergeProps(props, {
  name: "Award",
  iconNode: iconNode$cF
}));
var Award$1 = Award;

const iconNode$cE = [['path', {
  d: 'm14 12-8.501 8.501a2.12 2.12 0 0 1-2.998 0h-.002a2.12 2.12 0 0 1 0-2.998L11 9.002',
  key: 'ha6v2k'
}], ['path', {
  d: 'm9 7 4-4 6 6h3l-.13.648a7.648 7.648 0 0 1-5.081 5.756L15 16v-3z',
  key: '1mosh2'
}]];
const Axe = props => createComponent(Icon$1, mergeProps(props, {
  name: "Axe",
  iconNode: iconNode$cE
}));
var Axe$1 = Axe;

const iconNode$cD = [['path', {
  d: 'M4 4v16h16',
  key: '1s015l'
}], ['path', {
  d: 'm4 20 7-7',
  key: '17qe9y'
}]];
const Axis3d = props => createComponent(Icon$1, mergeProps(props, {
  name: "Axis3d",
  iconNode: iconNode$cD
}));
var Axis3d$1 = Axis3d;

const iconNode$cC = [['path', {
  d: 'M9 12h0.01',
  key: 'u5n1lm'
}], ['path', {
  d: 'M15 12h0.01',
  key: '10zk70'
}], ['path', {
  d: 'M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5',
  key: '1u7htd'
}], ['path', {
  d: 'M19 6.3a9 9 0 0 1 1.8 3.9 2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1',
  key: '5yv0yz'
}]];
const Baby = props => createComponent(Icon$1, mergeProps(props, {
  name: "Baby",
  iconNode: iconNode$cC
}));
var Baby$1 = Baby;

const iconNode$cB = [['path', {
  d: 'M4 20V10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2Z',
  key: 'tunmdx'
}], ['path', {
  d: 'M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2',
  key: 'donm21'
}], ['path', {
  d: 'M8 21v-5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v5',
  key: 'xk3gvk'
}], ['path', {
  d: 'M8 10h8',
  key: 'c7uz4u'
}], ['path', {
  d: 'M8 18h8',
  key: '1no2b1'
}]];
const Backpack = props => createComponent(Icon$1, mergeProps(props, {
  name: "Backpack",
  iconNode: iconNode$cB
}));
var Backpack$1 = Backpack;

const iconNode$cA = [['path', {
  d: 'M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2',
  key: '4irg2o'
}], ['path', {
  d: 'M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10',
  key: '14fcyx'
}], ['rect', {
  x: '8',
  y: '6',
  width: '13',
  height: '8',
  rx: '1',
  key: '1sfr2f'
}], ['circle', {
  cx: '18',
  cy: '20',
  r: '2',
  key: 't9985n'
}], ['circle', {
  cx: '9',
  cy: '20',
  r: '2',
  key: 'e5v82j'
}]];
const BaggageClaim = props => createComponent(Icon$1, mergeProps(props, {
  name: "BaggageClaim",
  iconNode: iconNode$cA
}));
var BaggageClaim$1 = BaggageClaim;

const iconNode$cz = [['path', {
  d: 'M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5',
  key: '1cscit'
}], ['path', {
  d: 'M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z',
  key: '1y1nbv'
}]];
const Banana = props => createComponent(Icon$1, mergeProps(props, {
  name: "Banana",
  iconNode: iconNode$cz
}));
var Banana$1 = Banana;

const iconNode$cy = [['rect', {
  x: '2',
  y: '6',
  width: '20',
  height: '12',
  rx: '2',
  key: '1wpnh2'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '2',
  key: '1c9p78'
}], ['path', {
  d: 'M6 12h.01M18 12h.01',
  key: '113zkx'
}]];
const Banknote = props => createComponent(Icon$1, mergeProps(props, {
  name: "Banknote",
  iconNode: iconNode$cy
}));
var Banknote$1 = Banknote;

const iconNode$cx = [['line', {
  x1: '18',
  y1: '20',
  x2: '18',
  y2: '10',
  key: '1e8c49'
}], ['line', {
  x1: '12',
  y1: '20',
  x2: '12',
  y2: '4',
  key: '65j799'
}], ['line', {
  x1: '6',
  y1: '20',
  x2: '6',
  y2: '14',
  key: '4svqks'
}]];
const BarChart2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "BarChart2",
  iconNode: iconNode$cx
}));
var BarChart2$1 = BarChart2;

const iconNode$cw = [['path', {
  d: 'M3 3v18h18',
  key: '1s2lah'
}], ['path', {
  d: 'M18 17V9',
  key: '2bz60n'
}], ['path', {
  d: 'M13 17V5',
  key: '1frdt8'
}], ['path', {
  d: 'M8 17v-3',
  key: '17ska0'
}]];
const BarChart3 = props => createComponent(Icon$1, mergeProps(props, {
  name: "BarChart3",
  iconNode: iconNode$cw
}));
var BarChart3$1 = BarChart3;

const iconNode$cv = [['path', {
  d: 'M3 3v18h18',
  key: '1s2lah'
}], ['path', {
  d: 'M13 17V9',
  key: '1fwyjl'
}], ['path', {
  d: 'M18 17V5',
  key: 'sfb6ij'
}], ['path', {
  d: 'M8 17v-3',
  key: '17ska0'
}]];
const BarChart4 = props => createComponent(Icon$1, mergeProps(props, {
  name: "BarChart4",
  iconNode: iconNode$cv
}));
var BarChart4$1 = BarChart4;

const iconNode$cu = [['path', {
  d: 'M3 3v18h18',
  key: '1s2lah'
}], ['path', {
  d: 'M7 16h8',
  key: 'srdodz'
}], ['path', {
  d: 'M7 11h12',
  key: '127s9w'
}], ['path', {
  d: 'M7 6h3',
  key: 'w9rmul'
}]];
const BarChartHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "BarChartHorizontal",
  iconNode: iconNode$cu
}));
var BarChartHorizontal$1 = BarChartHorizontal;

const iconNode$ct = [['line', {
  x1: '12',
  y1: '20',
  x2: '12',
  y2: '10',
  key: '1wi7jb'
}], ['line', {
  x1: '18',
  y1: '20',
  x2: '18',
  y2: '4',
  key: '1mwru6'
}], ['line', {
  x1: '6',
  y1: '20',
  x2: '6',
  y2: '16',
  key: 'zj13da'
}]];
const BarChart = props => createComponent(Icon$1, mergeProps(props, {
  name: "BarChart",
  iconNode: iconNode$ct
}));
var BarChart$1 = BarChart;

const iconNode$cs = [['path', {
  d: 'M4 20h16',
  key: '14thso'
}], ['path', {
  d: 'm6 16 6-12 6 12',
  key: '1b4byz'
}], ['path', {
  d: 'M8 12h8',
  key: '1wcyev'
}]];
const Baseline = props => createComponent(Icon$1, mergeProps(props, {
  name: "Baseline",
  iconNode: iconNode$cs
}));
var Baseline$1 = Baseline;

const iconNode$cr = [['path', {
  d: 'M9 6 6.5 3.5a1.5 1.5 0 0 0-1-.5C4.683 3 4 3.683 4 4.5V17a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5',
  key: '1r8yf5'
}], ['line', {
  x1: '10',
  y1: '5',
  x2: '8',
  y2: '7',
  key: 'd858pc'
}], ['line', {
  x1: '2',
  y1: '12',
  x2: '22',
  y2: '12',
  key: 'zvmn4p'
}], ['line', {
  x1: '7',
  y1: '19',
  x2: '7',
  y2: '21',
  key: 'cpl2n4'
}], ['line', {
  x1: '17',
  y1: '19',
  x2: '17',
  y2: '21',
  key: 'ywtigw'
}]];
const Bath = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bath",
  iconNode: iconNode$cr
}));
var Bath$1 = Bath;

const iconNode$cq = [['path', {
  d: 'M15 7h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2',
  key: '1sdynx'
}], ['path', {
  d: 'M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1',
  key: '1gkd3k'
}], ['path', {
  d: 'm11 7-3 5h4l-3 5',
  key: 'b4a64w'
}], ['line', {
  x1: '22',
  x2: '22',
  y1: '11',
  y2: '13',
  key: '4dh1rd'
}]];
const BatteryCharging = props => createComponent(Icon$1, mergeProps(props, {
  name: "BatteryCharging",
  iconNode: iconNode$cq
}));
var BatteryCharging$1 = BatteryCharging;

const iconNode$cp = [['rect', {
  x: '2',
  y: '7',
  width: '16',
  height: '10',
  rx: '2',
  ry: '2',
  key: '5j9scf'
}], ['line', {
  x1: '22',
  x2: '22',
  y1: '11',
  y2: '13',
  key: '4dh1rd'
}], ['line', {
  x1: '6',
  x2: '6',
  y1: '11',
  y2: '13',
  key: '1wd6dw'
}], ['line', {
  x1: '10',
  x2: '10',
  y1: '11',
  y2: '13',
  key: 'haxvl5'
}], ['line', {
  x1: '14',
  x2: '14',
  y1: '11',
  y2: '13',
  key: 'c6fn6x'
}]];
const BatteryFull = props => createComponent(Icon$1, mergeProps(props, {
  name: "BatteryFull",
  iconNode: iconNode$cp
}));
var BatteryFull$1 = BatteryFull;

const iconNode$co = [['rect', {
  x: '2',
  y: '7',
  width: '16',
  height: '10',
  rx: '2',
  ry: '2',
  key: '5j9scf'
}], ['line', {
  x1: '22',
  x2: '22',
  y1: '11',
  y2: '13',
  key: '4dh1rd'
}], ['line', {
  x1: '6',
  x2: '6',
  y1: '11',
  y2: '13',
  key: '1wd6dw'
}]];
const BatteryLow = props => createComponent(Icon$1, mergeProps(props, {
  name: "BatteryLow",
  iconNode: iconNode$co
}));
var BatteryLow$1 = BatteryLow;

const iconNode$cn = [['rect', {
  x: '2',
  y: '7',
  width: '16',
  height: '10',
  rx: '2',
  ry: '2',
  key: '5j9scf'
}], ['line', {
  x1: '22',
  x2: '22',
  y1: '11',
  y2: '13',
  key: '4dh1rd'
}], ['line', {
  x1: '6',
  x2: '6',
  y1: '11',
  y2: '13',
  key: '1wd6dw'
}], ['line', {
  x1: '10',
  x2: '10',
  y1: '11',
  y2: '13',
  key: 'haxvl5'
}]];
const BatteryMedium = props => createComponent(Icon$1, mergeProps(props, {
  name: "BatteryMedium",
  iconNode: iconNode$cn
}));
var BatteryMedium$1 = BatteryMedium;

const iconNode$cm = [['path', {
  d: 'M14 7h2a2 2 0 0 1 2 2v6c0 1 -1 2 -2 2h-2',
  key: '7x2rx5'
}], ['path', {
  d: 'M6 7h-2a2 2 0 0 0-2 2v6c0 1 1 2 2 2h2',
  key: '1r83cn'
}], ['line', {
  x1: '22',
  x2: '22',
  y1: '11',
  y2: '13',
  key: '4dh1rd'
}], ['line', {
  x1: '10',
  x2: '10',
  y1: '7',
  y2: '13',
  key: '1uzyus'
}], ['line', {
  x1: '10',
  x2: '10',
  y1: '17',
  y2: '17.01',
  key: '1y8k4g'
}]];
const BatteryWarning = props => createComponent(Icon$1, mergeProps(props, {
  name: "BatteryWarning",
  iconNode: iconNode$cm
}));
var BatteryWarning$1 = BatteryWarning;

const iconNode$cl = [['rect', {
  x: '2',
  y: '7',
  width: '16',
  height: '10',
  rx: '2',
  ry: '2',
  key: '5j9scf'
}], ['line', {
  x1: '22',
  x2: '22',
  y1: '11',
  y2: '13',
  key: '4dh1rd'
}]];
const Battery = props => createComponent(Icon$1, mergeProps(props, {
  name: "Battery",
  iconNode: iconNode$cl
}));
var Battery$1 = Battery;

const iconNode$ck = [['path', {
  d: 'M4.5 3h15',
  key: 'c7n0jr'
}], ['path', {
  d: 'M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3',
  key: 'm1uhx7'
}], ['path', {
  d: 'M6 14h12',
  key: '4cwo0f'
}]];
const Beaker = props => createComponent(Icon$1, mergeProps(props, {
  name: "Beaker",
  iconNode: iconNode$ck
}));
var Beaker$1 = Beaker;

const iconNode$cj = [['path', {
  d: 'M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1',
  key: 'bq3udt'
}], ['path', {
  d: 'M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66',
  key: '17ccse'
}], ['path', {
  d: 'M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04',
  key: '18zqgq'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const BeanOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "BeanOff",
  iconNode: iconNode$cj
}));
var BeanOff$1 = BeanOff;

const iconNode$ci = [['path', {
  d: 'M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z',
  key: '1tvzk7'
}], ['path', {
  d: 'M5.341 10.62a4 4 0 1 0 5.279-5.28',
  key: '2cyri2'
}]];
const Bean = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bean",
  iconNode: iconNode$ci
}));
var Bean$1 = Bean;

const iconNode$ch = [['path', {
  d: 'M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8',
  key: '1k78r4'
}], ['path', {
  d: 'M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4',
  key: 'fb3tl2'
}], ['path', {
  d: 'M12 4v6',
  key: '1dcgq2'
}], ['path', {
  d: 'M2 18h20',
  key: 'ajqnye'
}]];
const BedDouble = props => createComponent(Icon$1, mergeProps(props, {
  name: "BedDouble",
  iconNode: iconNode$ch
}));
var BedDouble$1 = BedDouble;

const iconNode$cg = [['path', {
  d: 'M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8',
  key: '1wm6mi'
}], ['path', {
  d: 'M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4',
  key: '4k93s5'
}], ['path', {
  d: 'M3 18h18',
  key: '1h113x'
}]];
const BedSingle = props => createComponent(Icon$1, mergeProps(props, {
  name: "BedSingle",
  iconNode: iconNode$cg
}));
var BedSingle$1 = BedSingle;

const iconNode$cf = [['path', {
  d: 'M2 4v16',
  key: 'vw9hq8'
}], ['path', {
  d: 'M2 8h18a2 2 0 0 1 2 2v10',
  key: '1dgv2r'
}], ['path', {
  d: 'M2 17h20',
  key: '18nfp3'
}], ['path', {
  d: 'M6 8v9',
  key: '1yriud'
}]];
const Bed = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bed",
  iconNode: iconNode$cf
}));
var Bed$1 = Bed;

const iconNode$ce = [['circle', {
  cx: '12.5',
  cy: '8.5',
  r: '2.5',
  key: '9738u8'
}], ['path', {
  d: 'M12.5 2a6.5 6.5 0 0 0-6.22 4.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3A6.5 6.5 0 0 0 12.5 2Z',
  key: 'o0f6za'
}], ['path', {
  d: 'm18.5 6 2.19 4.5a6.48 6.48 0 0 1 .31 2 6.49 6.49 0 0 1-2.6 5.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5',
  key: 'k7p6i0'
}]];
const Beef = props => createComponent(Icon$1, mergeProps(props, {
  name: "Beef",
  iconNode: iconNode$ce
}));
var Beef$1 = Beef;

const iconNode$cd = [['path', {
  d: 'M17 11h1a3 3 0 0 1 0 6h-1',
  key: '1yp76v'
}], ['path', {
  d: 'M9 12v6',
  key: '1u1cab'
}], ['path', {
  d: 'M13 12v6',
  key: '1sugkk'
}], ['path', {
  d: 'M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z',
  key: '1510fo'
}], ['path', {
  d: 'M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8',
  key: '19jb7n'
}]];
const Beer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Beer",
  iconNode: iconNode$cd
}));
var Beer$1 = Beer;

const iconNode$cc = [['path', {
  d: 'M13.73 21a2 2 0 0 1-3.46 0',
  key: '6o5tke'
}], ['path', {
  d: 'M21 5h-6',
  key: '14nobq'
}], ['path', {
  d: 'M18.021 9C18.29 15.193 21 17 21 17H3s3-2 3-9a6 6 0 0 1 7-5.916',
  key: '1wldvb'
}]];
const BellMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "BellMinus",
  iconNode: iconNode$cc
}));
var BellMinus$1 = BellMinus;

const iconNode$cb = [['path', {
  d: 'M13.73 21a2 2 0 0 1-3.46 0',
  key: '6o5tke'
}], ['path', {
  d: 'M18.63 13A17.888 17.888 0 0 1 18 8',
  key: 'd5seqe'
}], ['path', {
  d: 'M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14',
  key: 'cae0gx'
}], ['path', {
  d: 'M18 8a6 6 0 0 0-9.33-5',
  key: '4mngwl'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}]];
const BellOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "BellOff",
  iconNode: iconNode$cb
}));
var BellOff$1 = BellOff;

const iconNode$ca = [['path', {
  d: 'M18.387 12C19.198 15.799 21 17 21 17H3s3-2 3-9a6 6 0 0 1 7-5.916',
  key: '1dhkt2'
}], ['path', {
  d: 'M13.73 21a2 2 0 0 1-3.46 0',
  key: '6o5tke'
}], ['path', {
  d: 'M18 2v6',
  key: '163kbd'
}], ['path', {
  d: 'M21 5h-6',
  key: '14nobq'
}]];
const BellPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "BellPlus",
  iconNode: iconNode$ca
}));
var BellPlus$1 = BellPlus;

const iconNode$c9 = [['path', {
  d: 'M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9',
  key: 'oql5b8'
}], ['path', {
  d: 'M13.73 21a2 2 0 0 1-3.46 0',
  key: '6o5tke'
}], ['path', {
  d: 'M2 8c0-2.2.7-4.3 2-6',
  key: '1c7u9x'
}], ['path', {
  d: 'M22 8a10 10 0 0 0-2-6',
  key: '1vnyda'
}]];
const BellRing = props => createComponent(Icon$1, mergeProps(props, {
  name: "BellRing",
  iconNode: iconNode$c9
}));
var BellRing$1 = BellRing;

const iconNode$c8 = [['path', {
  d: 'M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9',
  key: 'oql5b8'
}], ['path', {
  d: 'M13.73 21a2 2 0 0 1-3.46 0',
  key: '6o5tke'
}]];
const Bell = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bell",
  iconNode: iconNode$c8
}));
var Bell$1 = Bell;

const iconNode$c7 = [['circle', {
  cx: '5.5',
  cy: '17.5',
  r: '3.5',
  key: '1noe27'
}], ['circle', {
  cx: '18.5',
  cy: '17.5',
  r: '3.5',
  key: '15x4ox'
}], ['path', {
  d: 'M15 6a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-3 11.5V14l-3-3 4-3 2 3h2',
  key: '1932na'
}]];
const Bike = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bike",
  iconNode: iconNode$c7
}));
var Bike$1 = Bike;

const iconNode$c6 = [['path', {
  d: 'M6 20h4',
  key: '1i6q5t'
}], ['path', {
  d: 'M14 10h4',
  key: 'ru81e7'
}], ['path', {
  d: 'M6 14h2v6',
  key: '16z9wg'
}], ['path', {
  d: 'M14 4h2v6',
  key: '1idq9u'
}], ['rect', {
  x: '6',
  y: '4',
  width: '4',
  height: '6',
  key: 'btwfzx'
}], ['rect', {
  x: '14',
  y: '14',
  width: '4',
  height: '6',
  key: '1cym0j'
}]];
const Binary = props => createComponent(Icon$1, mergeProps(props, {
  name: "Binary",
  iconNode: iconNode$c6
}));
var Binary$1 = Binary;

const iconNode$c5 = [['path', {
  d: 'M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727',
  key: 'yr8idg'
}]];
const Bitcoin = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bitcoin",
  iconNode: iconNode$c5
}));
var Bitcoin$1 = Bitcoin;

const iconNode$c4 = [['path', {
  d: 'm7 7 10 10-5 5V2l5 5L7 17',
  key: '1q5490'
}], ['line', {
  x1: '18',
  y1: '12',
  y2: '12',
  x2: '21',
  key: '17rheb'
}], ['line', {
  x1: '3',
  y1: '12',
  y2: '12',
  x2: '6',
  key: '1l5nc6'
}]];
const BluetoothConnected = props => createComponent(Icon$1, mergeProps(props, {
  name: "BluetoothConnected",
  iconNode: iconNode$c4
}));
var BluetoothConnected$1 = BluetoothConnected;

const iconNode$c3 = [['path', {
  d: 'm17 17-5 5V12l-5 5',
  key: 'v5aci6'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}], ['path', {
  d: 'M14.5 9.5 17 7l-5-5v4.5',
  key: '1kddfz'
}]];
const BluetoothOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "BluetoothOff",
  iconNode: iconNode$c3
}));
var BluetoothOff$1 = BluetoothOff;

const iconNode$c2 = [['path', {
  d: 'm7 7 10 10-5 5V2l5 5L7 17',
  key: '1q5490'
}], ['path', {
  d: 'M20.83 14.83a4 4 0 0 0 0-5.66',
  key: 'k8tn1j'
}], ['path', {
  d: 'M18 12h.01',
  key: 'yjnet6'
}]];
const BluetoothSearching = props => createComponent(Icon$1, mergeProps(props, {
  name: "BluetoothSearching",
  iconNode: iconNode$c2
}));
var BluetoothSearching$1 = BluetoothSearching;

const iconNode$c1 = [['path', {
  d: 'm7 7 10 10-5 5V2l5 5L7 17',
  key: '1q5490'
}]];
const Bluetooth = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bluetooth",
  iconNode: iconNode$c1
}));
var Bluetooth$1 = Bluetooth;

const iconNode$c0 = [['path', {
  d: 'M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z',
  key: 'shhoi5'
}], ['path', {
  d: 'M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z',
  key: 'jaah4r'
}]];
const Bold = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bold",
  iconNode: iconNode$c0
}));
var Bold$1 = Bold;

const iconNode$b$ = [['circle', {
  cx: '11',
  cy: '13',
  r: '9',
  key: 'hd149'
}], ['path', {
  d: 'm19.5 9.5 1.8-1.8a2.4 2.4 0 0 0 0-3.4l-1.6-1.6a2.41 2.41 0 0 0-3.4 0l-1.8 1.8',
  key: '9owvxi'
}], ['path', {
  d: 'm22 2-1.5 1.5',
  key: 'ay92ug'
}]];
const Bomb = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bomb",
  iconNode: iconNode$b$
}));
var Bomb$1 = Bomb;

const iconNode$b_ = [['path', {
  d: 'M18.6 9.82c-.52-.21-1.15-.25-1.54.15l-7.07 7.06c-.39.39-.36 1.03-.15 1.54.12.3.16.6.16.93a2.5 2.5 0 0 1-5 0c0-.26-.24-.5-.5-.5a2.5 2.5 0 1 1 .96-4.82c.5.21 1.14.25 1.53-.15l7.07-7.06c.39-.39.36-1.03.15-1.54-.12-.3-.21-.6-.21-.93a2.5 2.5 0 0 1 5 0c.01.26.24.49.5.5a2.5 2.5 0 1 1-.9 4.82Z',
  key: '134x1i'
}]];
const Bone = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bone",
  iconNode: iconNode$b_
}));
var Bone$1 = Bone;

const iconNode$bZ = [['path', {
  d: 'M8 3H2v15h7c1.7 0 3 1.3 3 3V7c0-2.2-1.8-4-4-4Z',
  key: '1i8u0n'
}], ['path', {
  d: 'm16 12 2 2 4-4',
  key: 'mdajum'
}], ['path', {
  d: 'M22 6V3h-6c-2.2 0-4 1.8-4 4v14c0-1.7 1.3-3 3-3h7v-2.3',
  key: 'jb5l51'
}]];
const BookOpenCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "BookOpenCheck",
  iconNode: iconNode$bZ
}));
var BookOpenCheck$1 = BookOpenCheck;

const iconNode$bY = [['path', {
  d: 'M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z',
  key: 'vv98re'
}], ['path', {
  d: 'M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z',
  key: '1cyq3y'
}]];
const BookOpen = props => createComponent(Icon$1, mergeProps(props, {
  name: "BookOpen",
  iconNode: iconNode$bY
}));
var BookOpen$1 = BookOpen;

const iconNode$bX = [['path', {
  d: 'M4 19.5A2.5 2.5 0 0 1 6.5 17H20',
  key: '126fyg'
}], ['path', {
  d: 'M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z',
  key: '1msh16'
}]];
const Book = props => createComponent(Icon$1, mergeProps(props, {
  name: "Book",
  iconNode: iconNode$bX
}));
var Book$1 = Book;

const iconNode$bW = [['path', {
  d: 'm19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z',
  key: '1fy3hk'
}], ['line', {
  x1: '15',
  x2: '9',
  y1: '10',
  y2: '10',
  key: '1gty7f'
}]];
const BookmarkMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "BookmarkMinus",
  iconNode: iconNode$bW
}));
var BookmarkMinus$1 = BookmarkMinus;

const iconNode$bV = [['path', {
  d: 'm19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z',
  key: '1fy3hk'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '7',
  y2: '13',
  key: '1cppfj'
}], ['line', {
  x1: '15',
  x2: '9',
  y1: '10',
  y2: '10',
  key: '1gty7f'
}]];
const BookmarkPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "BookmarkPlus",
  iconNode: iconNode$bV
}));
var BookmarkPlus$1 = BookmarkPlus;

const iconNode$bU = [['path', {
  d: 'm19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z',
  key: '1fy3hk'
}]];
const Bookmark = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bookmark",
  iconNode: iconNode$bU
}));
var Bookmark$1 = Bookmark;

const iconNode$bT = [['rect', {
  x: '3',
  y: '11',
  width: '18',
  height: '10',
  rx: '2',
  key: 'qbqwso'
}], ['circle', {
  cx: '12',
  cy: '5',
  r: '2',
  key: 'f1ur92'
}], ['path', {
  d: 'M12 7v4',
  key: 'xawao1'
}], ['line', {
  x1: '8',
  y1: '16',
  x2: '8',
  y2: '16',
  key: '717jkb'
}], ['line', {
  x1: '16',
  y1: '16',
  x2: '16',
  y2: '16',
  key: '19gr12'
}]];
const Bot = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bot",
  iconNode: iconNode$bT
}));
var Bot$1 = Bot;

const iconNode$bS = [['path', {
  d: 'M5 3a2 2 0 0 0-2 2',
  key: 'y57alp'
}], ['path', {
  d: 'M19 3a2 2 0 0 1 2 2',
  key: '18rm91'
}], ['path', {
  d: 'M21 19a2 2 0 0 1-2 2',
  key: '1j7049'
}], ['path', {
  d: 'M5 21a2 2 0 0 1-2-2',
  key: 'sbafld'
}], ['path', {
  d: 'M9 3h1',
  key: '1yesri'
}], ['path', {
  d: 'M9 21h1',
  key: '15o7lz'
}], ['path', {
  d: 'M14 3h1',
  key: '1ec4yj'
}], ['path', {
  d: 'M14 21h1',
  key: 'v9vybs'
}], ['path', {
  d: 'M3 9v1',
  key: '1r0deq'
}], ['path', {
  d: 'M21 9v1',
  key: 'mxsmne'
}], ['path', {
  d: 'M3 14v1',
  key: 'vnatye'
}], ['path', {
  d: 'M21 14v1',
  key: '169vum'
}]];
const BoxSelect = props => createComponent(Icon$1, mergeProps(props, {
  name: "BoxSelect",
  iconNode: iconNode$bS
}));
var BoxSelect$1 = BoxSelect;

const iconNode$bR = [['path', {
  d: 'M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z',
  key: 'yt0hxn'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}]];
const Box = props => createComponent(Icon$1, mergeProps(props, {
  name: "Box",
  iconNode: iconNode$bR
}));
var Box$1 = Box;

const iconNode$bQ = [['path', {
  d: 'M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z',
  key: 'lc1i9w'
}], ['path', {
  d: 'm7 16.5-4.74-2.85',
  key: '1o9zyk'
}], ['path', {
  d: 'm7 16.5 5-3',
  key: 'va8pkn'
}], ['path', {
  d: 'M7 16.5v5.17',
  key: 'jnp8gn'
}], ['path', {
  d: 'M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z',
  key: '8zsnat'
}], ['path', {
  d: 'm17 16.5-5-3',
  key: '8arw3v'
}], ['path', {
  d: 'm17 16.5 4.74-2.85',
  key: '8rfmw'
}], ['path', {
  d: 'M17 16.5v5.17',
  key: 'k6z78m'
}], ['path', {
  d: 'M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z',
  key: '1xygjf'
}], ['path', {
  d: 'M12 8 7.26 5.15',
  key: '1vbdud'
}], ['path', {
  d: 'm12 8 4.74-2.85',
  key: '3rx089'
}], ['path', {
  d: 'M12 13.5V8',
  key: '1io7kd'
}]];
const Boxes = props => createComponent(Icon$1, mergeProps(props, {
  name: "Boxes",
  iconNode: iconNode$bQ
}));
var Boxes$1 = Boxes;

const iconNode$bP = [['rect', {
  x: '2',
  y: '7',
  width: '20',
  height: '14',
  rx: '2',
  ry: '2',
  key: '1fj28a'
}], ['path', {
  d: 'M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16',
  key: 'zwj3tp'
}]];
const Briefcase = props => createComponent(Icon$1, mergeProps(props, {
  name: "Briefcase",
  iconNode: iconNode$bP
}));
var Briefcase$1 = Briefcase;

const iconNode$bO = [['path', {
  d: 'm9.06 11.9 8.07-8.06a2.85 2.85 0 1 1 4.03 4.03l-8.06 8.08',
  key: '1styjt'
}], ['path', {
  d: 'M7.07 14.94c-1.66 0-3 1.35-3 3.02 0 1.33-2.5 1.52-2 2.02 1.08 1.1 2.49 2.02 4 2.02 2.2 0 4-1.8 4-4.04a3.01 3.01 0 0 0-3-3.02z',
  key: 'z0l1mu'
}]];
const Brush = props => createComponent(Icon$1, mergeProps(props, {
  name: "Brush",
  iconNode: iconNode$bO
}));
var Brush$1 = Brush;

const iconNode$bN = [['rect', {
  width: '8',
  height: '14',
  x: '8',
  y: '6',
  rx: '4',
  key: 'hq8nra'
}], ['path', {
  d: 'm19 7-3 2',
  key: 'fmg8ec'
}], ['path', {
  d: 'm5 7 3 2',
  key: 'dkxqes'
}], ['path', {
  d: 'm19 19-3-2',
  key: '1hbhi4'
}], ['path', {
  d: 'm5 19 3-2',
  key: 'dvt2ee'
}], ['path', {
  d: 'M20 13h-4',
  key: '1agfp2'
}], ['path', {
  d: 'M4 13h4',
  key: '1bwh8b'
}], ['path', {
  d: 'm10 4 1 2',
  key: '1pot59'
}], ['path', {
  d: 'm14 4-1 2',
  key: 'm8sn0o'
}]];
const Bug = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bug",
  iconNode: iconNode$bN
}));
var Bug$1 = Bug;

const iconNode$bM = [['path', {
  d: 'M6 22V4c0-.27 0-.55.07-.82a1.477 1.477 0 0 1 1.1-1.11C7.46 2 8.73 2 9 2h7c.27 0 .55 0 .82.07a1.477 1.477 0 0 1 1.11 1.1c.07.28.07.56.07.83v18H6Z',
  key: '1b1x9d'
}], ['path', {
  d: 'M2 14v6c0 1.1.9 2 2 2h2V12H4c-.27 0-.55 0-.82.07-.27.07-.52.2-.72.4-.19.19-.32.44-.39.71A3.4 3.4 0 0 0 2 14Z',
  key: '12g3jd'
}], ['path', {
  d: 'M20.82 9.07A3.4 3.4 0 0 0 20 9h-2v13h2a2 2 0 0 0 2-2v-9c0-.28 0-.55-.07-.82-.07-.27-.2-.52-.4-.72-.19-.19-.44-.32-.71-.39Z',
  key: 'o1w3ll'
}], ['path', {
  d: 'M10 6h4',
  key: '1itunk'
}], ['path', {
  d: 'M10 10h4',
  key: 'tcdvrf'
}], ['path', {
  d: 'M10 14h4',
  key: 'kelpxr'
}], ['path', {
  d: 'M10 18h4',
  key: '1ulq68'
}]];
const Building2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Building2",
  iconNode: iconNode$bM
}));
var Building2$1 = Building2;

const iconNode$bL = [['rect', {
  x: '4',
  y: '2',
  width: '16',
  height: '20',
  rx: '2',
  ry: '2',
  key: '152kg8'
}], ['path', {
  d: 'M9 22v-4h6v4',
  key: 'r93iot'
}], ['path', {
  d: 'M8 6h.01',
  key: '1dz90k'
}], ['path', {
  d: 'M16 6h.01',
  key: '1x0f13'
}], ['path', {
  d: 'M12 6h.01',
  key: '1vi96p'
}], ['path', {
  d: 'M12 10h.01',
  key: '1nrarc'
}], ['path', {
  d: 'M12 14h.01',
  key: '1etili'
}], ['path', {
  d: 'M16 10h.01',
  key: '1m94wz'
}], ['path', {
  d: 'M16 14h.01',
  key: '1gbofw'
}], ['path', {
  d: 'M8 10h.01',
  key: '19clt8'
}], ['path', {
  d: 'M8 14h.01',
  key: '6423bh'
}]];
const Building = props => createComponent(Icon$1, mergeProps(props, {
  name: "Building",
  iconNode: iconNode$bL
}));
var Building$1 = Building;

const iconNode$bK = [['path', {
  d: 'M19 17h2l.64-2.54c.24-.959.24-1.962 0-2.92l-1.07-4.27A3 3 0 0 0 17.66 5H4a2 2 0 0 0-2 2v10h2',
  key: 'wfsdqh'
}], ['path', {
  d: 'M14 17H9',
  key: 'o2noo5'
}], ['circle', {
  cx: '6.5',
  cy: '17.5',
  r: '2.5',
  key: 'gc8oob'
}], ['circle', {
  cx: '16.5',
  cy: '17.5',
  r: '2.5',
  key: '4btu0q'
}]];
const Bus = props => createComponent(Icon$1, mergeProps(props, {
  name: "Bus",
  iconNode: iconNode$bK
}));
var Bus$1 = Bus;

const iconNode$bJ = [['path', {
  d: 'M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8',
  key: '1w3rig'
}], ['path', {
  d: 'M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1',
  key: 'n2jgmb'
}], ['path', {
  d: 'M2 21h20',
  key: '1nyx9w'
}], ['path', {
  d: 'M7 8v2',
  key: 'kqglng'
}], ['path', {
  d: 'M12 8v2',
  key: '1woqiv'
}], ['path', {
  d: 'M17 8v2',
  key: 'teptal'
}], ['path', {
  d: 'M7 4h.01',
  key: '1bh4kh'
}], ['path', {
  d: 'M12 4h.01',
  key: '1ujb9j'
}], ['path', {
  d: 'M17 4h.01',
  key: '1upcoc'
}]];
const Cake = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cake",
  iconNode: iconNode$bJ
}));
var Cake$1 = Cake;

const iconNode$bI = [['rect', {
  x: '4',
  y: '2',
  width: '16',
  height: '20',
  rx: '2',
  key: '1uxh74'
}], ['line', {
  x1: '8',
  x2: '16',
  y1: '6',
  y2: '6',
  key: 'x4nwl0'
}], ['line', {
  x1: '16',
  x2: '16',
  y1: '14',
  y2: '18',
  key: 'wjye3r'
}], ['path', {
  d: 'M16 10h.01',
  key: '1m94wz'
}], ['path', {
  d: 'M12 10h.01',
  key: '1nrarc'
}], ['path', {
  d: 'M8 10h.01',
  key: '19clt8'
}], ['path', {
  d: 'M12 14h.01',
  key: '1etili'
}], ['path', {
  d: 'M8 14h.01',
  key: '6423bh'
}], ['path', {
  d: 'M12 18h.01',
  key: 'mhygvu'
}], ['path', {
  d: 'M8 18h.01',
  key: 'lrp35t'
}]];
const Calculator = props => createComponent(Icon$1, mergeProps(props, {
  name: "Calculator",
  iconNode: iconNode$bI
}));
var Calculator$1 = Calculator;

const iconNode$bH = [['path', {
  d: 'M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8',
  key: 'bce9hv'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['path', {
  d: 'm16 20 2 2 4-4',
  key: '13tcca'
}]];
const CalendarCheck2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarCheck2",
  iconNode: iconNode$bH
}));
var CalendarCheck2$1 = CalendarCheck2;

const iconNode$bG = [['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: '1dtxiw'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['path', {
  d: 'm9 16 2 2 4-4',
  key: '19s6y9'
}]];
const CalendarCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarCheck",
  iconNode: iconNode$bG
}));
var CalendarCheck$1 = CalendarCheck;

const iconNode$bF = [['path', {
  d: 'M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5',
  key: '1osxxc'
}], ['path', {
  d: 'M16 2v4',
  key: '4m81vk'
}], ['path', {
  d: 'M8 2v4',
  key: '1cmpym'
}], ['path', {
  d: 'M3 10h5',
  key: 'r794hk'
}], ['path', {
  d: 'M17.5 17.5 16 16.25V14',
  key: 're2vv1'
}], ['path', {
  d: 'M22 16a6 6 0 1 1-12 0 6 6 0 0 1 12 0Z',
  key: 'ame013'
}]];
const CalendarClock = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarClock",
  iconNode: iconNode$bF
}));
var CalendarClock$1 = CalendarClock;

const iconNode$bE = [['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: '1dtxiw'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['path', {
  d: 'M8 14h.01',
  key: '6423bh'
}], ['path', {
  d: 'M12 14h.01',
  key: '1etili'
}], ['path', {
  d: 'M16 14h.01',
  key: '1gbofw'
}], ['path', {
  d: 'M8 18h.01',
  key: 'lrp35t'
}], ['path', {
  d: 'M12 18h.01',
  key: 'mhygvu'
}], ['path', {
  d: 'M16 18h.01',
  key: 'kzsmim'
}]];
const CalendarDays = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarDays",
  iconNode: iconNode$bE
}));
var CalendarDays$1 = CalendarDays;

const iconNode$bD = [['path', {
  d: 'M21 10V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h7',
  key: '1sfrvf'
}], ['path', {
  d: 'M16 2v4',
  key: '4m81vk'
}], ['path', {
  d: 'M8 2v4',
  key: '1cmpym'
}], ['path', {
  d: 'M3 10h18',
  key: '8toen8'
}], ['path', {
  d: 'M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z',
  key: '1t7hil'
}]];
const CalendarHeart = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarHeart",
  iconNode: iconNode$bD
}));
var CalendarHeart$1 = CalendarHeart;

const iconNode$bC = [['path', {
  d: 'M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8',
  key: '3spt84'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['line', {
  x1: '16',
  y1: '19',
  x2: '22',
  y2: '19',
  key: 'qkgpxo'
}]];
const CalendarMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarMinus",
  iconNode: iconNode$bC
}));
var CalendarMinus$1 = CalendarMinus;

const iconNode$bB = [['path', {
  d: 'M4.18 4.18A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18',
  key: '1feomx'
}], ['path', {
  d: 'M21 15.5V6a2 2 0 0 0-2-2H9.5',
  key: 'yhw86o'
}], ['path', {
  d: 'M16 2v4',
  key: '4m81vk'
}], ['path', {
  d: 'M3 10h7',
  key: '1wap6i'
}], ['path', {
  d: 'M21 10h-5.5',
  key: 'quycpq'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const CalendarOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarOff",
  iconNode: iconNode$bB
}));
var CalendarOff$1 = CalendarOff;

const iconNode$bA = [['path', {
  d: 'M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8',
  key: '3spt84'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['line', {
  x1: '19',
  y1: '16',
  x2: '19',
  y2: '22',
  key: '537lsc'
}], ['line', {
  x1: '16',
  y1: '19',
  x2: '22',
  y2: '19',
  key: 'qkgpxo'
}]];
const CalendarPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarPlus",
  iconNode: iconNode$bA
}));
var CalendarPlus$1 = CalendarPlus;

const iconNode$bz = [['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: '1dtxiw'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['path', {
  d: 'M17 14h-6',
  key: 'bkmgh3'
}], ['path', {
  d: 'M13 18H7',
  key: 'bb0bb7'
}], ['path', {
  d: 'M7 14h.01',
  key: '1qa3f1'
}], ['path', {
  d: 'M17 18h.01',
  key: '1bdyru'
}]];
const CalendarRange = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarRange",
  iconNode: iconNode$bz
}));
var CalendarRange$1 = CalendarRange;

const iconNode$by = [['path', {
  d: 'M21 12V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h7.5',
  key: '18ncp8'
}], ['path', {
  d: 'M16 2v4',
  key: '4m81vk'
}], ['path', {
  d: 'M8 2v4',
  key: '1cmpym'
}], ['path', {
  d: 'M3 10h18',
  key: '8toen8'
}], ['path', {
  d: 'M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6v0Z',
  key: 'mgbru4'
}], ['path', {
  d: 'm22 22-1.5-1.5',
  key: '1x83k4'
}]];
const CalendarSearch = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarSearch",
  iconNode: iconNode$by
}));
var CalendarSearch$1 = CalendarSearch;

const iconNode$bx = [['path', {
  d: 'M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8',
  key: '3spt84'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['line', {
  x1: '17',
  y1: '17',
  x2: '22',
  y2: '22',
  key: 'tvgkbv'
}], ['line', {
  x1: '17',
  y1: '22',
  x2: '22',
  y2: '17',
  key: '1l23f3'
}]];
const CalendarX2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarX2",
  iconNode: iconNode$bx
}));
var CalendarX2$1 = CalendarX2;

const iconNode$bw = [['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: '1dtxiw'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}], ['line', {
  x1: '10',
  y1: '14',
  x2: '14',
  y2: '18',
  key: 'fs6roj'
}], ['line', {
  x1: '14',
  y1: '14',
  x2: '10',
  y2: '18',
  key: '1kdrv6'
}]];
const CalendarX = props => createComponent(Icon$1, mergeProps(props, {
  name: "CalendarX",
  iconNode: iconNode$bw
}));
var CalendarX$1 = CalendarX;

const iconNode$bv = [['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: '1dtxiw'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '6',
  key: '18saeg'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '6',
  key: '1u51jw'
}], ['line', {
  x1: '3',
  y1: '10',
  x2: '21',
  y2: '10',
  key: '6sq0yj'
}]];
const Calendar = props => createComponent(Icon$1, mergeProps(props, {
  name: "Calendar",
  iconNode: iconNode$bv
}));
var Calendar$1 = Calendar;

const iconNode$bu = [['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}], ['path', {
  d: 'M7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16',
  key: 'qmtpty'
}], ['path', {
  d: 'M9.5 4h5L17 7h3a2 2 0 0 1 2 2v7.5',
  key: '1ufyfc'
}], ['path', {
  d: 'M14.121 15.121A3 3 0 1 1 9.88 10.88',
  key: '11zox6'
}]];
const CameraOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "CameraOff",
  iconNode: iconNode$bu
}));
var CameraOff$1 = CameraOff;

const iconNode$bt = [['path', {
  d: 'M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z',
  key: '1tc9qg'
}], ['circle', {
  cx: '12',
  cy: '13',
  r: '3',
  key: '1vg3eu'
}]];
const Camera = props => createComponent(Icon$1, mergeProps(props, {
  name: "Camera",
  iconNode: iconNode$bt
}));
var Camera$1 = Camera;

const iconNode$bs = [['path', {
  d: 'm8.5 8.5-1 1a4.95 4.95 0 0 0 7 7l1-1',
  key: '1ff4ui'
}], ['path', {
  d: 'M11.843 6.187A4.947 4.947 0 0 1 16.5 7.5a4.947 4.947 0 0 1 1.313 4.657',
  key: '1sbrv4'
}], ['path', {
  d: 'M14 16.5V14',
  key: '1maf8j'
}], ['path', {
  d: 'M14 6.5v1.843',
  key: '1a6u6t'
}], ['path', {
  d: 'M10 10v7.5',
  key: '80pj65'
}], ['path', {
  d: 'm16 7 1-5 1.367.683A3 3 0 0 0 19.708 3H21v1.292a3 3 0 0 0 .317 1.341L22 7l-5 1',
  key: '11a9mt'
}], ['path', {
  d: 'm8 17-1 5-1.367-.683A3 3 0 0 0 4.292 21H3v-1.292a3 3 0 0 0-.317-1.341L2 17l5-1',
  key: '3mjmon'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const CandyOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "CandyOff",
  iconNode: iconNode$bs
}));
var CandyOff$1 = CandyOff;

const iconNode$br = [['path', {
  d: 'm9.5 7.5-2 2a4.95 4.95 0 1 0 7 7l2-2a4.95 4.95 0 1 0-7-7Z',
  key: 'ue6khb'
}], ['path', {
  d: 'M14 6.5v10',
  key: '5xnk7c'
}], ['path', {
  d: 'M10 7.5v10',
  key: '1uew51'
}], ['path', {
  d: 'm16 7 1-5 1.37.68A3 3 0 0 0 19.7 3H21v1.3c0 .46.1.92.32 1.33L22 7l-5 1',
  key: 'b9cp6k'
}], ['path', {
  d: 'm8 17-1 5-1.37-.68A3 3 0 0 0 4.3 21H3v-1.3a3 3 0 0 0-.32-1.33L2 17l5-1',
  key: '5lney8'
}]];
const Candy = props => createComponent(Icon$1, mergeProps(props, {
  name: "Candy",
  iconNode: iconNode$br
}));
var Candy$1 = Candy;

const iconNode$bq = [['path', {
  d: 'M14 16H9m10 0h3v-3.15a1 1 0 0 0-.84-.99L16 11l-2.7-3.6a1 1 0 0 0-.8-.4H5.24a2 2 0 0 0-1.8 1.1l-.8 1.63A6 6 0 0 0 2 12.42V16h2',
  key: 'l5np60'
}], ['circle', {
  cx: '6.5',
  cy: '16.5',
  r: '2.5',
  key: 'ae40ju'
}], ['circle', {
  cx: '16.5',
  cy: '16.5',
  r: '2.5',
  key: '1smtlt'
}]];
const Car = props => createComponent(Icon$1, mergeProps(props, {
  name: "Car",
  iconNode: iconNode$bq
}));
var Car$1 = Car;

const iconNode$bp = [['path', {
  d: 'M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46',
  key: 'rfqxbe'
}], ['path', {
  d: 'M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z',
  key: '6b25w4'
}], ['path', {
  d: 'M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z',
  key: 'fn65lo'
}]];
const Carrot = props => createComponent(Icon$1, mergeProps(props, {
  name: "Carrot",
  iconNode: iconNode$bp
}));
var Carrot$1 = Carrot;

const iconNode$bo = [['path', {
  d: 'M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6',
  key: '3zrzxg'
}], ['path', {
  d: 'M2 12a9 9 0 0 1 8 8',
  key: 'g6cvee'
}], ['path', {
  d: 'M2 16a5 5 0 0 1 4 4',
  key: '1y1dii'
}], ['line', {
  x1: '2',
  y1: '20',
  x2: '2.01',
  y2: '20',
  key: '1cypae'
}]];
const Cast = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cast",
  iconNode: iconNode$bo
}));
var Cast$1 = Cast;

const iconNode$bn = [['path', {
  d: 'M14 5.256A8.148 8.148 0 0 0 12 5a9.04 9.04 0 0 0-2 .227M20.098 10c.572 1.068.902 2.24.902 3.444C21 17.89 16.97 21 12 21s-9-3-9-7.556c0-1.251.288-2.41.792-3.444',
  key: '11yako'
}], ['path', {
  d: 'M3.75 10S2.11 3.58 3.5 3C4.89 2.42 8 3 9.781 5',
  key: 'h9cbyw'
}], ['path', {
  d: 'M20.172 10.002s1.64-6.42.25-7c-1.39-.58-4.5 0-6.282 2',
  key: '12ilpl'
}], ['path', {
  d: 'M8 14v.5',
  key: '1nzgdb'
}], ['path', {
  d: 'M16 14v.5',
  key: '1lajdz'
}], ['path', {
  d: 'M11.25 16.25h1.5L12 17l-.75-.75Z',
  key: '12kq1m'
}]];
const Cat = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cat",
  iconNode: iconNode$bn
}));
var Cat$1 = Cat;

const iconNode$bm = [['path', {
  d: 'M18 6 7 17l-5-5',
  key: '116fxf'
}], ['path', {
  d: 'm22 10-7.5 7.5L13 16',
  key: 'ke71qq'
}]];
const CheckCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "CheckCheck",
  iconNode: iconNode$bm
}));
var CheckCheck$1 = CheckCheck;

const iconNode$bl = [['path', {
  d: 'M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z',
  key: '14v8dr'
}], ['path', {
  d: 'm9 12 2 2 4-4',
  key: 'dzmm74'
}]];
const CheckCircle2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "CheckCircle2",
  iconNode: iconNode$bl
}));
var CheckCircle2$1 = CheckCircle2;

const iconNode$bk = [['path', {
  d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14',
  key: 'g774vq'
}], ['polyline', {
  points: '22 4 12 14.01 9 11.01',
  key: '6xbx8j'
}]];
const CheckCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "CheckCircle",
  iconNode: iconNode$bk
}));
var CheckCircle$1 = CheckCircle;

const iconNode$bj = [['polyline', {
  points: '9 11 12 14 22 4',
  key: '19ybtz'
}], ['path', {
  d: 'M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11',
  key: '1jnkn4'
}]];
const CheckSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "CheckSquare",
  iconNode: iconNode$bj
}));
var CheckSquare$1 = CheckSquare;

const iconNode$bi = [['polyline', {
  points: '20 6 9 17 4 12',
  key: '10jjfj'
}]];
const Check = props => createComponent(Icon$1, mergeProps(props, {
  name: "Check",
  iconNode: iconNode$bi
}));
var Check$1 = Check;

const iconNode$bh = [['path', {
  d: 'M6 13.87A4 4 0 0 1 7.41 6a5.11 5.11 0 0 1 1.05-1.54 5 5 0 0 1 7.08 0A5.11 5.11 0 0 1 16.59 6 4 4 0 0 1 18 13.87V21H6Z',
  key: 'z3ra2g'
}], ['line', {
  x1: '6',
  y1: '17',
  x2: '18',
  y2: '17',
  key: '130uxj'
}]];
const ChefHat = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChefHat",
  iconNode: iconNode$bh
}));
var ChefHat$1 = ChefHat;

const iconNode$bg = [['path', {
  d: 'M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z',
  key: 'cvxqlc'
}], ['path', {
  d: 'M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z',
  key: '1ostrc'
}], ['path', {
  d: 'M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12',
  key: 'hqx58h'
}], ['path', {
  d: 'M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z',
  key: 'eykp1o'
}]];
const Cherry = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cherry",
  iconNode: iconNode$bg
}));
var Cherry$1 = Cherry;

const iconNode$bf = [['polyline', {
  points: '6 9 12 15 18 9',
  key: '1do0m2'
}]];
const ChevronDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronDown",
  iconNode: iconNode$bf
}));
var ChevronDown$1 = ChevronDown;

const iconNode$be = [['polyline', {
  points: '17 18 11 12 17 6',
  key: '11nco2'
}], ['path', {
  d: 'M7 6v12',
  key: '1p53r6'
}]];
const ChevronFirst = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronFirst",
  iconNode: iconNode$be
}));
var ChevronFirst$1 = ChevronFirst;

const iconNode$bd = [['polyline', {
  points: '7 18 13 12 7 6',
  key: '1minw5'
}], ['path', {
  d: 'M17 6v12',
  key: '1o0aio'
}]];
const ChevronLast = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronLast",
  iconNode: iconNode$bd
}));
var ChevronLast$1 = ChevronLast;

const iconNode$bc = [['polyline', {
  points: '15 18 9 12 15 6',
  key: 'kvxz59'
}]];
const ChevronLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronLeft",
  iconNode: iconNode$bc
}));
var ChevronLeft$1 = ChevronLeft;

const iconNode$bb = [['polyline', {
  points: '9 18 15 12 9 6',
  key: '1rtp27'
}]];
const ChevronRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronRight",
  iconNode: iconNode$bb
}));
var ChevronRight$1 = ChevronRight;

const iconNode$ba = [['polyline', {
  points: '18 15 12 9 6 15',
  key: '1uugdp'
}]];
const ChevronUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronUp",
  iconNode: iconNode$ba
}));
var ChevronUp$1 = ChevronUp;

const iconNode$b9 = [['path', {
  d: 'm7 20 5-5 5 5',
  key: '13a0gw'
}], ['path', {
  d: 'm7 4 5 5 5-5',
  key: '1kwcof'
}]];
const ChevronsDownUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsDownUp",
  iconNode: iconNode$b9
}));
var ChevronsDownUp$1 = ChevronsDownUp;

const iconNode$b8 = [['polyline', {
  points: '7 13 12 18 17 13',
  key: 'am1j83'
}], ['polyline', {
  points: '7 6 12 11 17 6',
  key: 'pjsmwq'
}]];
const ChevronsDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsDown",
  iconNode: iconNode$b8
}));
var ChevronsDown$1 = ChevronsDown;

const iconNode$b7 = [['path', {
  d: 'm9 7-5 5 5 5',
  key: 'j5w590'
}], ['path', {
  d: 'm15 7 5 5-5 5',
  key: '1bl6da'
}]];
const ChevronsLeftRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsLeftRight",
  iconNode: iconNode$b7
}));
var ChevronsLeftRight$1 = ChevronsLeftRight;

const iconNode$b6 = [['polyline', {
  points: '11 17 6 12 11 7',
  key: '1ueymj'
}], ['polyline', {
  points: '18 17 13 12 18 7',
  key: '18fy0m'
}]];
const ChevronsLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsLeft",
  iconNode: iconNode$b6
}));
var ChevronsLeft$1 = ChevronsLeft;

const iconNode$b5 = [['path', {
  d: 'm20 17-5-5 5-5',
  key: '30x0n2'
}], ['path', {
  d: 'm4 17 5-5-5-5',
  key: '16spf4'
}]];
const ChevronsRightLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsRightLeft",
  iconNode: iconNode$b5
}));
var ChevronsRightLeft$1 = ChevronsRightLeft;

const iconNode$b4 = [['polyline', {
  points: '13 17 18 12 13 7',
  key: 'oq0h83'
}], ['polyline', {
  points: '6 17 11 12 6 7',
  key: '3k300q'
}]];
const ChevronsRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsRight",
  iconNode: iconNode$b4
}));
var ChevronsRight$1 = ChevronsRight;

const iconNode$b3 = [['path', {
  d: 'm7 15 5 5 5-5',
  key: '1hf1tw'
}], ['path', {
  d: 'm7 9 5-5 5 5',
  key: 'sgt6xg'
}]];
const ChevronsUpDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsUpDown",
  iconNode: iconNode$b3
}));
var ChevronsUpDown$1 = ChevronsUpDown;

const iconNode$b2 = [['polyline', {
  points: '17 11 12 6 7 11',
  key: '1u9xa9'
}], ['polyline', {
  points: '17 18 12 13 7 18',
  key: '1fl4au'
}]];
const ChevronsUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "ChevronsUp",
  iconNode: iconNode$b2
}));
var ChevronsUp$1 = ChevronsUp;

const iconNode$b1 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '4',
  key: '4exip2'
}], ['line', {
  x1: '21.17',
  y1: '8',
  x2: '12',
  y2: '8',
  key: '1a1nqa'
}], ['line', {
  x1: '3.95',
  y1: '6.06',
  x2: '8.54',
  y2: '14',
  key: 'irv2k6'
}], ['line', {
  x1: '10.88',
  y1: '21.94',
  x2: '15.46',
  y2: '14',
  key: 'fokf7t'
}]];
const Chrome = props => createComponent(Icon$1, mergeProps(props, {
  name: "Chrome",
  iconNode: iconNode$b1
}));
var Chrome$1 = Chrome;

const iconNode$b0 = [['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}], ['path', {
  d: 'M12 12H2v4h14',
  key: '91gsaq'
}], ['path', {
  d: 'M22 12v4',
  key: '142cbu'
}], ['path', {
  d: 'M18 12h-.5',
  key: '12ymji'
}], ['path', {
  d: 'M7 12v4',
  key: 'jqww69'
}], ['path', {
  d: 'M18 8c0-2.5-2-2.5-2-5',
  key: '1il607'
}], ['path', {
  d: 'M22 8c0-2.5-2-2.5-2-5',
  key: '1gah44'
}]];
const CigaretteOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "CigaretteOff",
  iconNode: iconNode$b0
}));
var CigaretteOff$1 = CigaretteOff;

const iconNode$a$ = [['path', {
  d: 'M18 12H2v4h16',
  key: '2rt1hm'
}], ['path', {
  d: 'M22 12v4',
  key: '142cbu'
}], ['path', {
  d: 'M7 12v4',
  key: 'jqww69'
}], ['path', {
  d: 'M18 8c0-2.5-2-2.5-2-5',
  key: '1il607'
}], ['path', {
  d: 'M22 8c0-2.5-2-2.5-2-5',
  key: '1gah44'
}]];
const Cigarette = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cigarette",
  iconNode: iconNode$a$
}));
var Cigarette$1 = Cigarette;

const iconNode$a_ = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '1',
  key: '41hilf'
}]];
const CircleDot = props => createComponent(Icon$1, mergeProps(props, {
  name: "CircleDot",
  iconNode: iconNode$a_
}));
var CircleDot$1 = CircleDot;

const iconNode$aZ = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M17 12h.01',
  key: '1m0b6t'
}], ['path', {
  d: 'M12 12h.01',
  key: '1mp3jc'
}], ['path', {
  d: 'M7 12h.01',
  key: 'eqddd0'
}]];
const CircleEllipsis = props => createComponent(Icon$1, mergeProps(props, {
  name: "CircleEllipsis",
  iconNode: iconNode$aZ
}));
var CircleEllipsis$1 = CircleEllipsis;

const iconNode$aY = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M22 2 2 22',
  key: 'y4kqgn'
}]];
const CircleSlashed = props => createComponent(Icon$1, mergeProps(props, {
  name: "CircleSlashed",
  iconNode: iconNode$aY
}));
var CircleSlashed$1 = CircleSlashed;

const iconNode$aX = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}]];
const Circle = props => createComponent(Icon$1, mergeProps(props, {
  name: "Circle",
  iconNode: iconNode$aX
}));
var Circle$1 = Circle;

const iconNode$aW = [['path', {
  d: 'M5.51 18.49a12 12 0 0 0 16.12.78c.49-.41.49-1.15.03-1.6L6.34 2.33a1.08 1.08 0 0 0-1.6.03A12 12 0 0 0 5.5 18.5Z',
  key: 'cpj97m'
}], ['path', {
  d: 'M8.34 15.66a8 8 0 0 0 10.4.78c.54-.4.54-1.16.06-1.64L9.2 5.2c-.48-.48-1.25-.48-1.64.06a8 8 0 0 0 .78 10.4Z',
  key: 'vhgi9a'
}], ['path', {
  d: 'm14 10-5.5 5.5',
  key: '92pfem'
}], ['path', {
  d: 'M14 10v8',
  key: '3sxk0t'
}], ['path', {
  d: 'M14 10H6',
  key: '1aai03'
}]];
const Citrus = props => createComponent(Icon$1, mergeProps(props, {
  name: "Citrus",
  iconNode: iconNode$aW
}));
var Citrus$1 = Citrus;

const iconNode$aV = [['path', {
  d: 'M4 11v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8H4Z',
  key: '1hxvyx'
}], ['path', {
  d: 'm4 11-.88-2.87a2 2 0 0 1 1.33-2.5l11.48-3.5a2 2 0 0 1 2.5 1.32l.87 2.87L4 11.01Z',
  key: '1vz1k2'
}], ['path', {
  d: 'm6.6 4.99 3.38 4.2',
  key: '192ida'
}], ['path', {
  d: 'm11.86 3.38 3.38 4.2',
  key: 'hhucvz'
}]];
const Clapperboard = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clapperboard",
  iconNode: iconNode$aV
}));
var Clapperboard$1 = Clapperboard;

const iconNode$aU = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2',
  key: '116196'
}], ['path', {
  d: 'm9 14 2 2 4-4',
  key: 'df797q'
}]];
const ClipboardCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardCheck",
  iconNode: iconNode$aU
}));
var ClipboardCheck$1 = ClipboardCheck;

const iconNode$aT = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2',
  key: '4jdomd'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v4',
  key: '3hqy98'
}], ['path', {
  d: 'M21 14H11',
  key: '1bme5i'
}], ['path', {
  d: 'm15 10-4 4 4 4',
  key: '5dvupr'
}]];
const ClipboardCopy = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardCopy",
  iconNode: iconNode$aT
}));
var ClipboardCopy$1 = ClipboardCopy;

const iconNode$aS = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z',
  key: '1rgxu8'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5',
  key: 'cereej'
}], ['path', {
  d: 'M4 13.5V6a2 2 0 0 1 2-2h2',
  key: '5ua5vh'
}]];
const ClipboardEdit = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardEdit",
  iconNode: iconNode$aS
}));
var ClipboardEdit$1 = ClipboardEdit;

const iconNode$aR = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2',
  key: '116196'
}], ['path', {
  d: 'M12 11h4',
  key: '1jrz19'
}], ['path', {
  d: 'M12 16h4',
  key: 'n85exb'
}], ['path', {
  d: 'M8 11h.01',
  key: '1dfujw'
}], ['path', {
  d: 'M8 16h.01',
  key: '18s6g9'
}]];
const ClipboardList = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardList",
  iconNode: iconNode$aR
}));
var ClipboardList$1 = ClipboardList;

const iconNode$aQ = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5',
  key: '1but9f'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 1.73 1',
  key: '1p8n7l'
}], ['path', {
  d: 'M18.42 9.61a2.1 2.1 0 1 1 2.97 2.97L16.95 17 13 18l.99-3.95 4.43-4.44Z',
  key: 'johvi5'
}], ['path', {
  d: 'M8 18h1',
  key: '13wk12'
}]];
const ClipboardSignature = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardSignature",
  iconNode: iconNode$aQ
}));
var ClipboardSignature$1 = ClipboardSignature;

const iconNode$aP = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2',
  key: '116196'
}], ['path', {
  d: 'M9 12v-1h6v1',
  key: 'iehl6m'
}], ['path', {
  d: 'M11 17h2',
  key: '12w5me'
}], ['path', {
  d: 'M12 11v6',
  key: '1bwqyc'
}]];
const ClipboardType = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardType",
  iconNode: iconNode$aP
}));
var ClipboardType$1 = ClipboardType;

const iconNode$aO = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2',
  key: '116196'
}], ['path', {
  d: 'm15 11-6 6',
  key: '1toa9n'
}], ['path', {
  d: 'm9 11 6 6',
  key: 'wlibny'
}]];
const ClipboardX = props => createComponent(Icon$1, mergeProps(props, {
  name: "ClipboardX",
  iconNode: iconNode$aO
}));
var ClipboardX$1 = ClipboardX;

const iconNode$aN = [['rect', {
  x: '8',
  y: '2',
  width: '8',
  height: '4',
  rx: '1',
  ry: '1',
  key: 'wz2j3u'
}], ['path', {
  d: 'M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2',
  key: '116196'
}]];
const Clipboard = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clipboard",
  iconNode: iconNode$aN
}));
var Clipboard$1 = Clipboard;

const iconNode$aM = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 14.5 8',
  key: '12zbmj'
}]];
const Clock1 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock1",
  iconNode: iconNode$aM
}));
var Clock1$1 = Clock1;

const iconNode$aL = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 8 10',
  key: 'atfzqc'
}]];
const Clock10 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock10",
  iconNode: iconNode$aL
}));
var Clock10$1 = Clock10;

const iconNode$aK = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 9.5 8',
  key: 'l5bg6f'
}]];
const Clock11 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock11",
  iconNode: iconNode$aK
}));
var Clock11$1 = Clock11;

const iconNode$aJ = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12',
  key: '1fub01'
}]];
const Clock12 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock12",
  iconNode: iconNode$aJ
}));
var Clock12$1 = Clock12;

const iconNode$aI = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 16 10',
  key: '1g230d'
}]];
const Clock2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock2",
  iconNode: iconNode$aI
}));
var Clock2$1 = Clock2;

const iconNode$aH = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 16.5 12',
  key: '1aq6pp'
}]];
const Clock3 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock3",
  iconNode: iconNode$aH
}));
var Clock3$1 = Clock3;

const iconNode$aG = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 16 14',
  key: '68esgv'
}]];
const Clock4 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock4",
  iconNode: iconNode$aG
}));
var Clock4$1 = Clock4;

const iconNode$aF = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 14.5 16',
  key: '1pcbox'
}]];
const Clock5 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock5",
  iconNode: iconNode$aF
}));
var Clock5$1 = Clock5;

const iconNode$aE = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 12 16.5',
  key: 'hb2qv6'
}]];
const Clock6 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock6",
  iconNode: iconNode$aE
}));
var Clock6$1 = Clock6;

const iconNode$aD = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 9.5 16',
  key: 'ka3394'
}]];
const Clock7 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock7",
  iconNode: iconNode$aD
}));
var Clock7$1 = Clock7;

const iconNode$aC = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 8 14',
  key: 'tmc9b4'
}]];
const Clock8 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock8",
  iconNode: iconNode$aC
}));
var Clock8$1 = Clock8;

const iconNode$aB = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 7.5 12',
  key: '1k60p0'
}]];
const Clock9 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock9",
  iconNode: iconNode$aB
}));
var Clock9$1 = Clock9;

const iconNode$aA = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polyline', {
  points: '12 6 12 12 16 14',
  key: '68esgv'
}]];
const Clock = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clock",
  iconNode: iconNode$aA
}));
var Clock$1 = Clock;

const iconNode$az = [['path', {
  d: 'M20 16.2A4.5 4.5 0 0 0 17.5 8h-1.8A7 7 0 1 0 4 14.9',
  key: '19hoja'
}], ['circle', {
  cx: '12',
  cy: '17',
  r: '3',
  key: '1spfwm'
}], ['path', {
  d: 'M12 13v1',
  key: '176q98'
}], ['path', {
  d: 'M12 20v1',
  key: '1wcdkc'
}], ['path', {
  d: 'M16 17h-1',
  key: 'y560le'
}], ['path', {
  d: 'M9 17H8',
  key: '1lfe9z'
}], ['path', {
  d: 'm15 14-.88.88',
  key: '12ytk1'
}], ['path', {
  d: 'M9.88 19.12 9 20',
  key: '1kmb4r'
}], ['path', {
  d: 'm15 20-.88-.88',
  key: '1ipjcf'
}], ['path', {
  d: 'M9.88 14.88 9 14',
  key: 'c4uok7'
}]];
const CloudCog = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudCog",
  iconNode: iconNode$az
}));
var CloudCog$1 = CloudCog;

const iconNode$ay = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M8 19v1',
  key: '1dk2by'
}], ['path', {
  d: 'M8 14v1',
  key: '84yxot'
}], ['path', {
  d: 'M16 19v1',
  key: 'v220m7'
}], ['path', {
  d: 'M16 14v1',
  key: 'g12gj6'
}], ['path', {
  d: 'M12 21v1',
  key: 'q8vafk'
}], ['path', {
  d: 'M12 16v1',
  key: '1mx6rx'
}]];
const CloudDrizzle = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudDrizzle",
  iconNode: iconNode$ay
}));
var CloudDrizzle$1 = CloudDrizzle;

const iconNode$ax = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M16 17H7',
  key: 'pygtm1'
}], ['path', {
  d: 'M17 21H9',
  key: '1u2q02'
}]];
const CloudFog = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudFog",
  iconNode: iconNode$ax
}));
var CloudFog$1 = CloudFog;

const iconNode$aw = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M16 14v2',
  key: 'a1is7l'
}], ['path', {
  d: 'M8 14v2',
  key: '1e9m6t'
}], ['path', {
  d: 'M16 20h.01',
  key: 'xwek51'
}], ['path', {
  d: 'M8 20h.01',
  key: '1vjney'
}], ['path', {
  d: 'M12 16v2',
  key: 'z66u1j'
}], ['path', {
  d: 'M12 22h.01',
  key: '1urd7a'
}]];
const CloudHail = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudHail",
  iconNode: iconNode$aw
}));
var CloudHail$1 = CloudHail;

const iconNode$av = [['path', {
  d: 'M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973',
  key: '1cez44'
}], ['path', {
  d: 'm13 12-3 5h4l-3 5',
  key: '1t22er'
}]];
const CloudLightning = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudLightning",
  iconNode: iconNode$av
}));
var CloudLightning$1 = CloudLightning;

const iconNode$au = [['path', {
  d: 'M10.083 9A6.002 6.002 0 0 1 16 4a4.243 4.243 0 0 0 6 6c0 2.22-1.206 4.16-3 5.197',
  key: 'u82z8m'
}], ['path', {
  d: 'M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24',
  key: '1qmrp3'
}], ['path', {
  d: 'M11 20v2',
  key: '174qtz'
}], ['path', {
  d: 'M7 19v2',
  key: '12npes'
}]];
const CloudMoonRain = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudMoonRain",
  iconNode: iconNode$au
}));
var CloudMoonRain$1 = CloudMoonRain;

const iconNode$at = [['path', {
  d: 'M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z',
  key: 's09mg5'
}], ['path', {
  d: 'M10.083 9A6.002 6.002 0 0 1 16 4a4.243 4.243 0 0 0 6 6c0 2.22-1.206 4.16-3 5.197',
  key: 'u82z8m'
}]];
const CloudMoon = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudMoon",
  iconNode: iconNode$at
}));
var CloudMoon$1 = CloudMoon;

const iconNode$as = [['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}], ['path', {
  d: 'M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193',
  key: 'yfwify'
}], ['path', {
  d: 'M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07',
  key: 'jlfiyv'
}]];
const CloudOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudOff",
  iconNode: iconNode$as
}));
var CloudOff$1 = CloudOff;

const iconNode$ar = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'm9.2 22 3-7',
  key: 'sb5f6j'
}], ['path', {
  d: 'm9 13-3 7',
  key: '500co5'
}], ['path', {
  d: 'm17 13-3 7',
  key: '8t2fiy'
}]];
const CloudRainWind = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudRainWind",
  iconNode: iconNode$ar
}));
var CloudRainWind$1 = CloudRainWind;

const iconNode$aq = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M16 14v6',
  key: '1j4efv'
}], ['path', {
  d: 'M8 14v6',
  key: '17c4r9'
}], ['path', {
  d: 'M12 16v6',
  key: 'c8a4gj'
}]];
const CloudRain = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudRain",
  iconNode: iconNode$aq
}));
var CloudRain$1 = CloudRain;

const iconNode$ap = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M8 15h.01',
  key: 'a7atzg'
}], ['path', {
  d: 'M8 19h.01',
  key: 'puxtts'
}], ['path', {
  d: 'M12 17h.01',
  key: 'p32p05'
}], ['path', {
  d: 'M12 21h.01',
  key: 'h35vbk'
}], ['path', {
  d: 'M16 15h.01',
  key: 'rnfrdf'
}], ['path', {
  d: 'M16 19h.01',
  key: '1vcnzz'
}]];
const CloudSnow = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudSnow",
  iconNode: iconNode$ap
}));
var CloudSnow$1 = CloudSnow;

const iconNode$ao = [['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}], ['path', {
  d: 'm4.93 4.93 1.41 1.41',
  key: '149t6j'
}], ['path', {
  d: 'M20 12h2',
  key: '1q8mjw'
}], ['path', {
  d: 'm19.07 4.93-1.41 1.41',
  key: '1shlcs'
}], ['path', {
  d: 'M15.947 12.65a4 4 0 0 0-5.925-4.128',
  key: 'dpwdj0'
}], ['path', {
  d: 'M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24',
  key: '1qmrp3'
}], ['path', {
  d: 'M11 20v2',
  key: '174qtz'
}], ['path', {
  d: 'M7 19v2',
  key: '12npes'
}]];
const CloudSunRain = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudSunRain",
  iconNode: iconNode$ao
}));
var CloudSunRain$1 = CloudSunRain;

const iconNode$an = [['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}], ['path', {
  d: 'm4.93 4.93 1.41 1.41',
  key: '149t6j'
}], ['path', {
  d: 'M20 12h2',
  key: '1q8mjw'
}], ['path', {
  d: 'm19.07 4.93-1.41 1.41',
  key: '1shlcs'
}], ['path', {
  d: 'M15.947 12.65a4 4 0 0 0-5.925-4.128',
  key: 'dpwdj0'
}], ['path', {
  d: 'M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z',
  key: 's09mg5'
}]];
const CloudSun = props => createComponent(Icon$1, mergeProps(props, {
  name: "CloudSun",
  iconNode: iconNode$an
}));
var CloudSun$1 = CloudSun;

const iconNode$am = [['path', {
  d: 'M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z',
  key: 'p7xjir'
}]];
const Cloud = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cloud",
  iconNode: iconNode$am
}));
var Cloud$1 = Cloud;

const iconNode$al = [['path', {
  d: 'M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z',
  key: 'gqqjvc'
}], ['path', {
  d: 'M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5',
  key: '1p2s76'
}]];
const Cloudy = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cloudy",
  iconNode: iconNode$al
}));
var Cloudy$1 = Cloudy;

const iconNode$ak = [['path', {
  d: 'M16.2 3.8a2.7 2.7 0 0 0-3.81 0l-.4.38-.4-.4a2.7 2.7 0 0 0-3.82 0C6.73 4.85 6.67 6.64 8 8l4 4 4-4c1.33-1.36 1.27-3.15.2-4.2z',
  key: '1gxwox'
}], ['path', {
  d: 'M8 8c-1.36-1.33-3.15-1.27-4.2-.2a2.7 2.7 0 0 0 0 3.81l.38.4-.4.4a2.7 2.7 0 0 0 0 3.82C4.85 17.27 6.64 17.33 8 16',
  key: 'il7z7z'
}], ['path', {
  d: 'M16 16c1.36 1.33 3.15 1.27 4.2.2a2.7 2.7 0 0 0 0-3.81l-.38-.4.4-.4a2.7 2.7 0 0 0 0-3.82C19.15 6.73 17.36 6.67 16 8',
  key: '15bpx2'
}], ['path', {
  d: 'M7.8 20.2a2.7 2.7 0 0 0 3.81 0l.4-.38.4.4a2.7 2.7 0 0 0 3.82 0c1.06-1.06 1.12-2.85-.21-4.21l-4-4-4 4c-1.33 1.36-1.27 3.15-.2 4.2z',
  key: 'v9mug8'
}], ['path', {
  d: 'm7 17-5 5',
  key: '1py3mz'
}]];
const Clover = props => createComponent(Icon$1, mergeProps(props, {
  name: "Clover",
  iconNode: iconNode$ak
}));
var Clover$1 = Clover;

const iconNode$aj = [['path', {
  d: 'm18 16 4-4-4-4',
  key: '1inbqp'
}], ['path', {
  d: 'm6 8-4 4 4 4',
  key: '15zrgr'
}], ['path', {
  d: 'm14.5 4-5 16',
  key: 'e7oirm'
}]];
const Code2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Code2",
  iconNode: iconNode$aj
}));
var Code2$1 = Code2;

const iconNode$ai = [['polyline', {
  points: '16 18 22 12 16 6',
  key: 'z7tu5w'
}], ['polyline', {
  points: '8 6 2 12 8 18',
  key: '1eg1df'
}]];
const Code = props => createComponent(Icon$1, mergeProps(props, {
  name: "Code",
  iconNode: iconNode$ai
}));
var Code$1 = Code;

const iconNode$ah = [['polygon', {
  points: '12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2',
  key: 'srzb37'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '15.5',
  key: 'zsefro'
}], ['polyline', {
  points: '22 8.5 12 15.5 2 8.5',
  key: 'ajlxae'
}], ['polyline', {
  points: '2 15.5 12 8.5 22 15.5',
  key: 'susrui'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '8.5',
  key: 'zll5ve'
}]];
const Codepen = props => createComponent(Icon$1, mergeProps(props, {
  name: "Codepen",
  iconNode: iconNode$ah
}));
var Codepen$1 = Codepen;

const iconNode$ag = [['path', {
  d: 'M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z',
  key: 'yt0hxn'
}], ['polyline', {
  points: '7.5 4.21 12 6.81 16.5 4.21',
  key: 'fabo96'
}], ['polyline', {
  points: '7.5 19.79 7.5 14.6 3 12',
  key: 'z377f1'
}], ['polyline', {
  points: '21 12 16.5 14.6 16.5 19.79',
  key: '9nrev1'
}], ['polyline', {
  points: '3.27 6.96 12 12.01 20.73 6.96',
  key: '1180pa'
}], ['line', {
  x1: '12',
  y1: '22.08',
  x2: '12',
  y2: '12',
  key: '10a5a7'
}]];
const Codesandbox = props => createComponent(Icon$1, mergeProps(props, {
  name: "Codesandbox",
  iconNode: iconNode$ag
}));
var Codesandbox$1 = Codesandbox;

const iconNode$af = [['path', {
  d: 'M17 8h1a4 4 0 1 1 0 8h-1',
  key: 'jx4kbh'
}], ['path', {
  d: 'M3 8h14v9a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4Z',
  key: '1bxrl0'
}], ['line', {
  x1: '6',
  y1: '2',
  x2: '6',
  y2: '4',
  key: '1p57d3'
}], ['line', {
  x1: '10',
  y1: '2',
  x2: '10',
  y2: '4',
  key: 'xb2gh9'
}], ['line', {
  x1: '14',
  y1: '2',
  x2: '14',
  y2: '4',
  key: 'gpi44t'
}]];
const Coffee = props => createComponent(Icon$1, mergeProps(props, {
  name: "Coffee",
  iconNode: iconNode$af
}));
var Coffee$1 = Coffee;

const iconNode$ae = [['path', {
  d: 'M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z',
  key: 'sobvz5'
}], ['path', {
  d: 'M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z',
  key: '11i496'
}], ['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}], ['path', {
  d: 'M12 22v-2',
  key: '1osdcq'
}], ['path', {
  d: 'm17 20.66-1-1.73',
  key: 'eq3orb'
}], ['path', {
  d: 'M11 10.27 7 3.34',
  key: '16pf9h'
}], ['path', {
  d: 'm20.66 17-1.73-1',
  key: 'sg0v6f'
}], ['path', {
  d: 'm3.34 7 1.73 1',
  key: '1ulond'
}], ['path', {
  d: 'M14 12h8',
  key: '4f43i9'
}], ['path', {
  d: 'M2 12h2',
  key: '1t8f8n'
}], ['path', {
  d: 'm20.66 7-1.73 1',
  key: '1ow05n'
}], ['path', {
  d: 'm3.34 17 1.73-1',
  key: 'nuk764'
}], ['path', {
  d: 'm17 3.34-1 1.73',
  key: '2wel8s'
}], ['path', {
  d: 'm11 13.73-4 6.93',
  key: '794ttg'
}]];
const Cog = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cog",
  iconNode: iconNode$ae
}));
var Cog$1 = Cog;

const iconNode$ad = [['circle', {
  cx: '8',
  cy: '8',
  r: '6',
  key: '3yglwk'
}], ['path', {
  d: 'M18.09 10.37A6 6 0 1 1 10.34 18',
  key: 't5s6rm'
}], ['path', {
  d: 'M7 6h1v4',
  key: '1obek4'
}], ['path', {
  d: 'm16.71 13.88.7.71-2.82 2.82',
  key: '1rbuyh'
}]];
const Coins = props => createComponent(Icon$1, mergeProps(props, {
  name: "Coins",
  iconNode: iconNode$ad
}));
var Coins$1 = Coins;

const iconNode$ac = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '12',
  y1: '3',
  x2: '12',
  y2: '21',
  key: 'essbwb'
}]];
const Columns = props => createComponent(Icon$1, mergeProps(props, {
  name: "Columns",
  iconNode: iconNode$ac
}));
var Columns$1 = Columns;

const iconNode$ab = [['path', {
  d: 'M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z',
  key: 'uqkaba'
}]];
const Command = props => createComponent(Icon$1, mergeProps(props, {
  name: "Command",
  iconNode: iconNode$ab
}));
var Command$1 = Command;

const iconNode$aa = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polygon', {
  points: '16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76',
  key: 'm9r19z'
}]];
const Compass = props => createComponent(Icon$1, mergeProps(props, {
  name: "Compass",
  iconNode: iconNode$aa
}));
var Compass$1 = Compass;

const iconNode$a9 = [['path', {
  d: 'M5.5 8.5 9 12l-3.5 3.5L2 12l3.5-3.5Z',
  key: '1kciei'
}], ['path', {
  d: 'm12 2 3.5 3.5L12 9 8.5 5.5 12 2Z',
  key: '1ome0g'
}], ['path', {
  d: 'M18.5 8.5 22 12l-3.5 3.5L15 12l3.5-3.5Z',
  key: 'vbupec'
}], ['path', {
  d: 'm12 15 3.5 3.5L12 22l-3.5-3.5L12 15Z',
  key: '16csic'
}]];
const Component = props => createComponent(Icon$1, mergeProps(props, {
  name: "Component",
  iconNode: iconNode$a9
}));
var Component$1 = Component;

const iconNode$a8 = [['path', {
  d: 'M2 18a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2H2v-2Z',
  key: '1co3i8'
}], ['path', {
  d: 'M20 16a8 8 0 1 0-16 0',
  key: '1pa543'
}], ['path', {
  d: 'M12 4v4',
  key: '1bq03y'
}], ['path', {
  d: 'M10 4h4',
  key: '1xpv9s'
}]];
const ConciergeBell = props => createComponent(Icon$1, mergeProps(props, {
  name: "ConciergeBell",
  iconNode: iconNode$a8
}));
var ConciergeBell$1 = ConciergeBell;

const iconNode$a7 = [['path', {
  d: 'M17 18a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2',
  key: '1mghuy'
}], ['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '18',
  rx: '2',
  key: '12vinp'
}], ['circle', {
  cx: '12',
  cy: '10',
  r: '2',
  key: '1yojzk'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '4',
  key: '1r8a5u'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '16',
  y2: '4',
  key: 'tp0trh'
}]];
const Contact = props => createComponent(Icon$1, mergeProps(props, {
  name: "Contact",
  iconNode: iconNode$a7
}));
var Contact$1 = Contact;

const iconNode$a6 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M12 18a6 6 0 0 0 0-12v12z',
  key: 'j4l70d'
}]];
const Contrast = props => createComponent(Icon$1, mergeProps(props, {
  name: "Contrast",
  iconNode: iconNode$a6
}));
var Contrast$1 = Contrast;

const iconNode$a5 = [['path', {
  d: 'M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5',
  key: 'laymnq'
}], ['path', {
  d: 'M8.5 8.5v.01',
  key: 'ue8clq'
}], ['path', {
  d: 'M16 15.5v.01',
  key: '14dtrp'
}], ['path', {
  d: 'M12 12v.01',
  key: 'u5ubse'
}], ['path', {
  d: 'M11 17v.01',
  key: '1hyl5a'
}], ['path', {
  d: 'M7 14v.01',
  key: 'uct60s'
}]];
const Cookie = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cookie",
  iconNode: iconNode$a5
}));
var Cookie$1 = Cookie;

const iconNode$a4 = [['rect', {
  x: '9',
  y: '9',
  width: '13',
  height: '13',
  rx: '2',
  ry: '2',
  key: '1ma1o8'
}], ['path', {
  d: 'M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1',
  key: 'pklvoz'
}]];
const Copy = props => createComponent(Icon$1, mergeProps(props, {
  name: "Copy",
  iconNode: iconNode$a4
}));
var Copy$1 = Copy;

const iconNode$a3 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M9 9.35a4 4 0 1 1 0 5.3',
  key: 'p8fkhi'
}]];
const Copyleft = props => createComponent(Icon$1, mergeProps(props, {
  name: "Copyleft",
  iconNode: iconNode$a3
}));
var Copyleft$1 = Copyleft;

const iconNode$a2 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M15 9.354a4 4 0 1 0 0 5.292',
  key: '8xfhbo'
}]];
const Copyright = props => createComponent(Icon$1, mergeProps(props, {
  name: "Copyright",
  iconNode: iconNode$a2
}));
var Copyright$1 = Copyright;

const iconNode$a1 = [['polyline', {
  points: '9 10 4 15 9 20',
  key: 'r3jprv'
}], ['path', {
  d: 'M20 4v7a4 4 0 0 1-4 4H4',
  key: '6o5b7l'
}]];
const CornerDownLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerDownLeft",
  iconNode: iconNode$a1
}));
var CornerDownLeft$1 = CornerDownLeft;

const iconNode$a0 = [['polyline', {
  points: '15 10 20 15 15 20',
  key: '1q7qjw'
}], ['path', {
  d: 'M4 4v7a4 4 0 0 0 4 4h12',
  key: 'z08zvw'
}]];
const CornerDownRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerDownRight",
  iconNode: iconNode$a0
}));
var CornerDownRight$1 = CornerDownRight;

const iconNode$9$ = [['polyline', {
  points: '14 15 9 20 4 15',
  key: 'nkc4i'
}], ['path', {
  d: 'M20 4h-7a4 4 0 0 0-4 4v12',
  key: 'nbpdq2'
}]];
const CornerLeftDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerLeftDown",
  iconNode: iconNode$9$
}));
var CornerLeftDown$1 = CornerLeftDown;

const iconNode$9_ = [['polyline', {
  points: '14 9 9 4 4 9',
  key: 'm9oyvo'
}], ['path', {
  d: 'M20 20h-7a4 4 0 0 1-4-4V4',
  key: '1blwi3'
}]];
const CornerLeftUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerLeftUp",
  iconNode: iconNode$9_
}));
var CornerLeftUp$1 = CornerLeftUp;

const iconNode$9Z = [['polyline', {
  points: '10 15 15 20 20 15',
  key: 'axus6l'
}], ['path', {
  d: 'M4 4h7a4 4 0 0 1 4 4v12',
  key: 'wcbgct'
}]];
const CornerRightDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerRightDown",
  iconNode: iconNode$9Z
}));
var CornerRightDown$1 = CornerRightDown;

const iconNode$9Y = [['polyline', {
  points: '10 9 15 4 20 9',
  key: '1lr6px'
}], ['path', {
  d: 'M4 20h7a4 4 0 0 0 4-4V4',
  key: '1plgdj'
}]];
const CornerRightUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerRightUp",
  iconNode: iconNode$9Y
}));
var CornerRightUp$1 = CornerRightUp;

const iconNode$9X = [['polyline', {
  points: '9 14 4 9 9 4',
  key: '881910'
}], ['path', {
  d: 'M20 20v-7a4 4 0 0 0-4-4H4',
  key: '1nkjon'
}]];
const CornerUpLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerUpLeft",
  iconNode: iconNode$9X
}));
var CornerUpLeft$1 = CornerUpLeft;

const iconNode$9W = [['polyline', {
  points: '15 14 20 9 15 4',
  key: '1tbx3s'
}], ['path', {
  d: 'M4 20v-7a4 4 0 0 1 4-4h12',
  key: '1lu4f8'
}]];
const CornerUpRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "CornerUpRight",
  iconNode: iconNode$9W
}));
var CornerUpRight$1 = CornerUpRight;

const iconNode$9V = [['rect', {
  x: '4',
  y: '4',
  width: '16',
  height: '16',
  rx: '2',
  ry: '2',
  key: '19czt8'
}], ['rect', {
  x: '9',
  y: '9',
  width: '6',
  height: '6',
  key: 'o3kz5p'
}], ['line', {
  x1: '9',
  y1: '2',
  x2: '9',
  y2: '4',
  key: '1tcqwn'
}], ['line', {
  x1: '15',
  y1: '2',
  x2: '15',
  y2: '4',
  key: '1yvlak'
}], ['line', {
  x1: '9',
  y1: '21',
  x2: '9',
  y2: '22',
  key: 'tuhu08'
}], ['line', {
  x1: '15',
  y1: '20',
  x2: '15',
  y2: '22',
  key: '1o5cyu'
}], ['line', {
  x1: '20',
  y1: '9',
  x2: '22',
  y2: '9',
  key: 'b8rlm1'
}], ['line', {
  x1: '20',
  y1: '14',
  x2: '22',
  y2: '14',
  key: '1mk8c1'
}], ['line', {
  x1: '2',
  y1: '9',
  x2: '4',
  y2: '9',
  key: 'bt7uvh'
}], ['line', {
  x1: '2',
  y1: '14',
  x2: '4',
  y2: '14',
  key: 'hp71sd'
}]];
const Cpu = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cpu",
  iconNode: iconNode$9V
}));
var Cpu$1 = Cpu;

const iconNode$9U = [['rect', {
  x: '2',
  y: '5',
  width: '20',
  height: '14',
  rx: '2',
  key: 'qneu4z'
}], ['line', {
  x1: '2',
  y1: '10',
  x2: '22',
  y2: '10',
  key: '1ytoly'
}]];
const CreditCard = props => createComponent(Icon$1, mergeProps(props, {
  name: "CreditCard",
  iconNode: iconNode$9U
}));
var CreditCard$1 = CreditCard;

const iconNode$9T = [['path', {
  d: 'm4.6 13.11 5.79-3.21c1.89-1.05 4.79 1.78 3.71 3.71l-3.22 5.81C8.8 23.16.79 15.23 4.6 13.11Z',
  key: '1ozxlb'
}], ['path', {
  d: 'm10.5 9.5-1-2.29C9.2 6.48 8.8 6 8 6H4.5C2.79 6 2 6.5 2 8.5a7.71 7.71 0 0 0 2 4.83',
  key: 'ffuyb5'
}], ['path', {
  d: 'M8 6c0-1.55.24-4-2-4-2 0-2.5 2.17-2.5 4',
  key: 'osnpzi'
}], ['path', {
  d: 'm14.5 13.5 2.29 1c.73.3 1.21.7 1.21 1.5v3.5c0 1.71-.5 2.5-2.5 2.5a7.71 7.71 0 0 1-4.83-2',
  key: '1vubaw'
}], ['path', {
  d: 'M18 16c1.55 0 4-.24 4 2 0 2-2.17 2.5-4 2.5',
  key: 'wxr772'
}]];
const Croissant = props => createComponent(Icon$1, mergeProps(props, {
  name: "Croissant",
  iconNode: iconNode$9T
}));
var Croissant$1 = Croissant;

const iconNode$9S = [['path', {
  d: 'M6 2v14a2 2 0 0 0 2 2h14',
  key: 'ron5a4'
}], ['path', {
  d: 'M18 22V8a2 2 0 0 0-2-2H2',
  key: '7s9ehn'
}]];
const Crop = props => createComponent(Icon$1, mergeProps(props, {
  name: "Crop",
  iconNode: iconNode$9S
}));
var Crop$1 = Crop;

const iconNode$9R = [['path', {
  d: 'M11 2a2 2 0 0 0-2 2v5H4a2 2 0 0 0-2 2v2c0 1.1.9 2 2 2h5v5c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-5h5a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-5V4a2 2 0 0 0-2-2h-2z',
  key: '1t5g7j'
}]];
const Cross = props => createComponent(Icon$1, mergeProps(props, {
  name: "Cross",
  iconNode: iconNode$9R
}));
var Cross$1 = Cross;

const iconNode$9Q = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '22',
  y1: '12',
  x2: '18',
  y2: '12',
  key: 'yivkn6'
}], ['line', {
  x1: '6',
  y1: '12',
  x2: '2',
  y2: '12',
  key: 'hlzxjj'
}], ['line', {
  x1: '12',
  y1: '6',
  x2: '12',
  y2: '2',
  key: '1s1957'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '18',
  key: '2x08zm'
}]];
const Crosshair = props => createComponent(Icon$1, mergeProps(props, {
  name: "Crosshair",
  iconNode: iconNode$9Q
}));
var Crosshair$1 = Crosshair;

const iconNode$9P = [['path', {
  d: 'm2 4 3 12h14l3-12-6 7-4-7-4 7-6-7zm3 16h14',
  key: 'zkxr6b'
}]];
const Crown = props => createComponent(Icon$1, mergeProps(props, {
  name: "Crown",
  iconNode: iconNode$9P
}));
var Crown$1 = Crown;

const iconNode$9O = [['path', {
  d: 'm6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8',
  key: '8166m8'
}], ['path', {
  d: 'M5 8h14',
  key: 'pcz4l3'
}], ['path', {
  d: 'M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0',
  key: 'yjz344'
}], ['path', {
  d: 'm12 8 1-6h2',
  key: '3ybfa4'
}]];
const CupSoda = props => createComponent(Icon$1, mergeProps(props, {
  name: "CupSoda",
  iconNode: iconNode$9O
}));
var CupSoda$1 = CupSoda;

const iconNode$9N = [['path', {
  d: 'M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1',
  key: 'ezmyqa'
}], ['path', {
  d: 'M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1',
  key: 'e1hn23'
}]];
const CurlyBraces = props => createComponent(Icon$1, mergeProps(props, {
  name: "CurlyBraces",
  iconNode: iconNode$9N
}));
var CurlyBraces$1 = CurlyBraces;

const iconNode$9M = [['circle', {
  cx: '12',
  cy: '12',
  r: '8',
  key: '46899m'
}], ['line', {
  x1: '3',
  y1: '3',
  x2: '6',
  y2: '6',
  key: 'zkqcdn'
}], ['line', {
  x1: '21',
  y1: '3',
  x2: '18',
  y2: '6',
  key: 'n7spic'
}], ['line', {
  x1: '3',
  y1: '21',
  x2: '6',
  y2: '18',
  key: '7xq9ok'
}], ['line', {
  x1: '21',
  y1: '21',
  x2: '18',
  y2: '18',
  key: 'mzvtez'
}]];
const Currency = props => createComponent(Icon$1, mergeProps(props, {
  name: "Currency",
  iconNode: iconNode$9M
}));
var Currency$1 = Currency;

const iconNode$9L = [['ellipse', {
  cx: '12',
  cy: '5',
  rx: '9',
  ry: '3',
  key: 'msslwz'
}], ['path', {
  d: 'M3 12c0 1.18 2.03 2.2 5 2.7',
  key: 'ecdgp9'
}], ['path', {
  d: 'M21 5v4.5',
  key: '18xpbp'
}], ['path', {
  d: 'm12 16 1.27-1.35a4.75 4.75 0 1 1 .41 5.74',
  key: '1wi0wz'
}], ['path', {
  d: 'M12 12v4h4',
  key: '1bxaet'
}], ['path', {
  d: 'M3 5v14c0 1.43 2.97 2.63 7 2.93',
  key: '5qsoub'
}]];
const DatabaseBackup = props => createComponent(Icon$1, mergeProps(props, {
  name: "DatabaseBackup",
  iconNode: iconNode$9L
}));
var DatabaseBackup$1 = DatabaseBackup;

const iconNode$9K = [['ellipse', {
  cx: '12',
  cy: '5',
  rx: '9',
  ry: '3',
  key: 'msslwz'
}], ['path', {
  d: 'M21 12c0 1.66-4 3-9 3s-9-1.34-9-3',
  key: 'pw5pse'
}], ['path', {
  d: 'M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5',
  key: '7dtpbs'
}]];
const Database = props => createComponent(Icon$1, mergeProps(props, {
  name: "Database",
  iconNode: iconNode$9K
}));
var Database$1 = Database;

const iconNode$9J = [['path', {
  d: 'M20 5H9l-7 7 7 7h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2Z',
  key: '1oy587'
}], ['line', {
  x1: '18',
  y1: '9',
  x2: '12',
  y2: '15',
  key: '1328vg'
}], ['line', {
  x1: '12',
  y1: '9',
  x2: '18',
  y2: '15',
  key: '6xbiik'
}]];
const Delete = props => createComponent(Icon$1, mergeProps(props, {
  name: "Delete",
  iconNode: iconNode$9J
}));
var Delete$1 = Delete;

const iconNode$9I = [['rect', {
  x: '12',
  y: '1',
  width: '15.56',
  height: '15.56',
  rx: '2.41',
  transform: 'rotate(45 12 1)',
  key: 'dtb0qj'
}]];
const Diamond = props => createComponent(Icon$1, mergeProps(props, {
  name: "Diamond",
  iconNode: iconNode$9I
}));
var Diamond$1 = Diamond;

const iconNode$9H = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M12 12h.01',
  key: '1mp3jc'
}]];
const Dice1 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dice1",
  iconNode: iconNode$9H
}));
var Dice1$1 = Dice1;

const iconNode$9G = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M15 9h.01',
  key: 'x1ddxp'
}], ['path', {
  d: 'M9 15h.01',
  key: 'fzyn71'
}]];
const Dice2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dice2",
  iconNode: iconNode$9G
}));
var Dice2$1 = Dice2;

const iconNode$9F = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M16 8h.01',
  key: 'cr5u4v'
}], ['path', {
  d: 'M12 12h.01',
  key: '1mp3jc'
}], ['path', {
  d: 'M8 16h.01',
  key: '18s6g9'
}]];
const Dice3 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dice3",
  iconNode: iconNode$9F
}));
var Dice3$1 = Dice3;

const iconNode$9E = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M16 8h.01',
  key: 'cr5u4v'
}], ['path', {
  d: 'M8 8h.01',
  key: '1e4136'
}], ['path', {
  d: 'M8 16h.01',
  key: '18s6g9'
}], ['path', {
  d: 'M16 16h.01',
  key: '1f9h7w'
}]];
const Dice4 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dice4",
  iconNode: iconNode$9E
}));
var Dice4$1 = Dice4;

const iconNode$9D = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M16 8h.01',
  key: 'cr5u4v'
}], ['path', {
  d: 'M8 8h.01',
  key: '1e4136'
}], ['path', {
  d: 'M8 16h.01',
  key: '18s6g9'
}], ['path', {
  d: 'M16 16h.01',
  key: '1f9h7w'
}], ['path', {
  d: 'M12 12h.01',
  key: '1mp3jc'
}]];
const Dice5 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dice5",
  iconNode: iconNode$9D
}));
var Dice5$1 = Dice5;

const iconNode$9C = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M16 8h.01',
  key: 'cr5u4v'
}], ['path', {
  d: 'M16 12h.01',
  key: '1l6xoz'
}], ['path', {
  d: 'M16 16h.01',
  key: '1f9h7w'
}], ['path', {
  d: 'M8 8h.01',
  key: '1e4136'
}], ['path', {
  d: 'M8 12h.01',
  key: 'czm47f'
}], ['path', {
  d: 'M8 16h.01',
  key: '18s6g9'
}]];
const Dice6 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dice6",
  iconNode: iconNode$9C
}));
var Dice6$1 = Dice6;

const iconNode$9B = [['rect', {
  x: '2',
  y: '10',
  width: '12',
  height: '12',
  rx: '2',
  ry: '2',
  key: '73wp2n'
}], ['path', {
  d: 'm17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6',
  key: '1o487t'
}], ['path', {
  d: 'M6 18h.01',
  key: 'uhywen'
}], ['path', {
  d: 'M10 14h.01',
  key: 'ssrbsk'
}], ['path', {
  d: 'M15 6h.01',
  key: 'cblpky'
}], ['path', {
  d: 'M18 9h.01',
  key: '2061c0'
}]];
const Dices = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dices",
  iconNode: iconNode$9B
}));
var Dices$1 = Dices;

const iconNode$9A = [['path', {
  d: 'M12 3v14',
  key: '7cf3v8'
}], ['path', {
  d: 'M5 10h14',
  key: 'elsbfy'
}], ['path', {
  d: 'M5 21h14',
  key: '11awu3'
}]];
const Diff = props => createComponent(Icon$1, mergeProps(props, {
  name: "Diff",
  iconNode: iconNode$9A
}));
var Diff$1 = Diff;

const iconNode$9z = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}]];
const Disc = props => createComponent(Icon$1, mergeProps(props, {
  name: "Disc",
  iconNode: iconNode$9z
}));
var Disc$1 = Disc;

const iconNode$9y = [['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}], ['line', {
  x1: '12',
  y1: '16',
  x2: '12',
  y2: '16',
  key: '4v5xkb'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '8',
  key: '1vrb7x'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}]];
const DivideCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "DivideCircle",
  iconNode: iconNode$9y
}));
var DivideCircle$1 = DivideCircle;

const iconNode$9x = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}], ['line', {
  x1: '12',
  y1: '16',
  x2: '12',
  y2: '16',
  key: '4v5xkb'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '8',
  key: '1vrb7x'
}]];
const DivideSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "DivideSquare",
  iconNode: iconNode$9x
}));
var DivideSquare$1 = DivideSquare;

const iconNode$9w = [['circle', {
  cx: '12',
  cy: '6',
  r: '1',
  key: '1bh7o1'
}], ['line', {
  x1: '5',
  y1: '12',
  x2: '19',
  y2: '12',
  key: '1smlys'
}], ['circle', {
  cx: '12',
  cy: '18',
  r: '1',
  key: 'lqb9t5'
}]];
const Divide = props => createComponent(Icon$1, mergeProps(props, {
  name: "Divide",
  iconNode: iconNode$9w
}));
var Divide$1 = Divide;

const iconNode$9v = [['path', {
  d: 'M15 2c-1.35 1.5-2.092 3-2.5 4.5M9 22c1.35-1.5 2.092-3 2.5-4.5',
  key: 'sxiaad'
}], ['path', {
  d: 'M2 15c3.333-3 6.667-3 10-3m10-3c-1.5 1.35-3 2.092-4.5 2.5',
  key: 'yn4bs1'
}], ['path', {
  d: 'm17 6-2.5-2.5',
  key: '5cdfhj'
}], ['path', {
  d: 'm14 8-1.5-1.5',
  key: '1ohn8i'
}], ['path', {
  d: 'm7 18 2.5 2.5',
  key: '16tu1a'
}], ['path', {
  d: 'm3.5 14.5.5.5',
  key: 'hapbhd'
}], ['path', {
  d: 'm20 9 .5.5',
  key: '1n7z02'
}], ['path', {
  d: 'm6.5 12.5 1 1',
  key: 'cs35ky'
}], ['path', {
  d: 'm16.5 10.5 1 1',
  key: '696xn5'
}], ['path', {
  d: 'm10 16 1.5 1.5',
  key: '11lckj'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const DnaOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "DnaOff",
  iconNode: iconNode$9v
}));
var DnaOff$1 = DnaOff;

const iconNode$9u = [['path', {
  d: 'M2 15c6.667-6 13.333 0 20-6',
  key: '1pyr53'
}], ['path', {
  d: 'M9 22c1.798-1.998 2.518-3.995 2.807-5.993',
  key: 'q3hbxp'
}], ['path', {
  d: 'M15 2c-1.798 1.998-2.518 3.995-2.807 5.993',
  key: '80uv8i'
}], ['path', {
  d: 'm17 6-2.5-2.5',
  key: '5cdfhj'
}], ['path', {
  d: 'm14 8-1-1',
  key: '15nbz5'
}], ['path', {
  d: 'm7 18 2.5 2.5',
  key: '16tu1a'
}], ['path', {
  d: 'm3.5 14.5.5.5',
  key: 'hapbhd'
}], ['path', {
  d: 'm20 9 .5.5',
  key: '1n7z02'
}], ['path', {
  d: 'm6.5 12.5 1 1',
  key: 'cs35ky'
}], ['path', {
  d: 'm16.5 10.5 1 1',
  key: '696xn5'
}], ['path', {
  d: 'm10 16 1.5 1.5',
  key: '11lckj'
}]];
const Dna = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dna",
  iconNode: iconNode$9u
}));
var Dna$1 = Dna;

const iconNode$9t = [['path', {
  d: 'M10 5.172C10 3.782 8.423 2.679 6.5 3c-2.823.47-4.113 6.006-4 7 .08.703 1.725 1.722 3.656 1 1.261-.472 1.96-1.45 2.344-2.5',
  key: '19br0u'
}], ['path', {
  d: 'M14.267 5.172c0-1.39 1.577-2.493 3.5-2.172 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5',
  key: '11n1an'
}], ['path', {
  d: 'M8 14v.5',
  key: '1nzgdb'
}], ['path', {
  d: 'M16 14v.5',
  key: '1lajdz'
}], ['path', {
  d: 'M11.25 16.25h1.5L12 17l-.75-.75Z',
  key: '12kq1m'
}], ['path', {
  d: 'M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444c0-1.061-.162-2.2-.493-3.309m-9.243-6.082A8.801 8.801 0 0 1 12 5c.78 0 1.5.108 2.161.306',
  key: 'wsu29d'
}]];
const Dog = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dog",
  iconNode: iconNode$9t
}));
var Dog$1 = Dog;

const iconNode$9s = [['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '22',
  key: '1k6o5o'
}], ['path', {
  d: 'M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6',
  key: '1b0p4s'
}]];
const DollarSign = props => createComponent(Icon$1, mergeProps(props, {
  name: "DollarSign",
  iconNode: iconNode$9s
}));
var DollarSign$1 = DollarSign;

const iconNode$9r = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M12 12v9',
  key: '192myk'
}], ['path', {
  d: 'm8 17 4 4 4-4',
  key: '1ul180'
}]];
const DownloadCloud = props => createComponent(Icon$1, mergeProps(props, {
  name: "DownloadCloud",
  iconNode: iconNode$9r
}));
var DownloadCloud$1 = DownloadCloud;

const iconNode$9q = [['path', {
  d: 'M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4',
  key: 'ih7n3h'
}], ['polyline', {
  points: '7 10 12 15 17 10',
  key: '2ggqvy'
}], ['line', {
  x1: '12',
  y1: '15',
  x2: '12',
  y2: '3',
  key: 'nqo27w'
}]];
const Download = props => createComponent(Icon$1, mergeProps(props, {
  name: "Download",
  iconNode: iconNode$9q
}));
var Download$1 = Download;

const iconNode$9p = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94',
  key: 'hpej1'
}], ['path', {
  d: 'M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32',
  key: '1tr44o'
}], ['path', {
  d: 'M8.56 2.75c4.37 6 6 9.42 8 17.72',
  key: 'kbh691'
}]];
const Dribbble = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dribbble",
  iconNode: iconNode$9p
}));
var Dribbble$1 = Dribbble;

const iconNode$9o = [['path', {
  d: 'M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z',
  key: 'c7niix'
}]];
const Droplet = props => createComponent(Icon$1, mergeProps(props, {
  name: "Droplet",
  iconNode: iconNode$9o
}));
var Droplet$1 = Droplet;

const iconNode$9n = [['path', {
  d: 'M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z',
  key: '1ptgy4'
}], ['path', {
  d: 'M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97',
  key: '1sl1rz'
}]];
const Droplets = props => createComponent(Icon$1, mergeProps(props, {
  name: "Droplets",
  iconNode: iconNode$9n
}));
var Droplets$1 = Droplets;

const iconNode$9m = [['path', {
  d: 'M15.45 15.4c-2.13.65-4.3.32-5.7-1.1-2.29-2.27-1.76-6.5 1.17-9.42 2.93-2.93 7.15-3.46 9.43-1.18 1.41 1.41 1.74 3.57 1.1 5.71-1.4-.51-3.26-.02-4.64 1.36-1.38 1.38-1.87 3.23-1.36 4.63z',
  key: '1o96s0'
}], ['path', {
  d: 'm11.25 15.6-2.16 2.16a2.5 2.5 0 1 1-4.56 1.73 2.49 2.49 0 0 1-1.41-4.24 2.5 2.5 0 0 1 3.14-.32l2.16-2.16',
  key: '14vv5h'
}]];
const Drumstick = props => createComponent(Icon$1, mergeProps(props, {
  name: "Drumstick",
  iconNode: iconNode$9m
}));
var Drumstick$1 = Drumstick;

const iconNode$9l = [['path', {
  d: 'm6.5 6.5 11 11',
  key: 'f7oqzb'
}], ['path', {
  d: 'm21 21-1-1',
  key: 'cpc6if'
}], ['path', {
  d: 'm3 3 1 1',
  key: 'd3rpuf'
}], ['path', {
  d: 'm18 22 4-4',
  key: '1e32o6'
}], ['path', {
  d: 'm2 6 4-4',
  key: '189tqz'
}], ['path', {
  d: 'm3 10 7-7',
  key: '1bxui2'
}], ['path', {
  d: 'm14 21 7-7',
  key: '16x78n'
}]];
const Dumbbell = props => createComponent(Icon$1, mergeProps(props, {
  name: "Dumbbell",
  iconNode: iconNode$9l
}));
var Dumbbell$1 = Dumbbell;

const iconNode$9k = [['path', {
  d: 'M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46',
  key: '1qngmn'
}], ['path', {
  d: 'M6 8.5c0-.75.13-1.47.36-2.14',
  key: 'b06bma'
}], ['path', {
  d: 'M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76',
  key: 'g10hsz'
}], ['path', {
  d: 'M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18',
  key: 'ygzou7'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const EarOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "EarOff",
  iconNode: iconNode$9k
}));
var EarOff$1 = EarOff;

const iconNode$9j = [['path', {
  d: 'M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0',
  key: '1dfaln'
}], ['path', {
  d: 'M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4',
  key: '1qnva7'
}]];
const Ear = props => createComponent(Icon$1, mergeProps(props, {
  name: "Ear",
  iconNode: iconNode$9j
}));
var Ear$1 = Ear;

const iconNode$9i = [['path', {
  d: 'M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z',
  key: '2s2c1q'
}]];
const Edit2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Edit2",
  iconNode: iconNode$9i
}));
var Edit2$1 = Edit2;

const iconNode$9h = [['path', {
  d: 'M12 20h9',
  key: 't2du7b'
}], ['path', {
  d: 'M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z',
  key: '18w55b'
}]];
const Edit3 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Edit3",
  iconNode: iconNode$9h
}));
var Edit3$1 = Edit3;

const iconNode$9g = [['path', {
  d: 'M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7',
  key: '1qinfi'
}], ['path', {
  d: 'M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z',
  key: '1cs3r3'
}]];
const Edit = props => createComponent(Icon$1, mergeProps(props, {
  name: "Edit",
  iconNode: iconNode$9g
}));
var Edit$1 = Edit;

const iconNode$9f = [['circle', {
  cx: '11.5',
  cy: '12.5',
  r: '3.5',
  key: '1cl1mi'
}], ['path', {
  d: 'M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z',
  key: '165ef9'
}]];
const EggFried = props => createComponent(Icon$1, mergeProps(props, {
  name: "EggFried",
  iconNode: iconNode$9f
}));
var EggFried$1 = EggFried;

const iconNode$9e = [['path', {
  d: 'M6.399 6.399C5.362 8.157 4.65 10.189 4.5 12c-.37 4.43 1.27 9.95 7.5 10 3.256-.026 5.259-1.547 6.375-3.625',
  key: '6et380'
}], ['path', {
  d: 'M19.532 13.875A14.07 14.07 0 0 0 19.5 12c-.36-4.34-3.95-9.96-7.5-10-1.04.012-2.082.502-3.046 1.297',
  key: 'gcdc3f'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const EggOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "EggOff",
  iconNode: iconNode$9e
}));
var EggOff$1 = EggOff;

const iconNode$9d = [['path', {
  d: 'M12 22c6.23-.05 7.87-5.57 7.5-10-.36-4.34-3.95-9.96-7.5-10-3.55.04-7.14 5.66-7.5 10-.37 4.43 1.27 9.95 7.5 10z',
  key: '1c39pg'
}]];
const Egg = props => createComponent(Icon$1, mergeProps(props, {
  name: "Egg",
  iconNode: iconNode$9d
}));
var Egg$1 = Egg;

const iconNode$9c = [['line', {
  x1: '5',
  y1: '9',
  x2: '19',
  y2: '9',
  key: 'p612hi'
}], ['line', {
  x1: '5',
  y1: '15',
  x2: '19',
  y2: '15',
  key: 'e39u1i'
}], ['line', {
  x1: '19',
  y1: '5',
  x2: '5',
  y2: '19',
  key: 't1677v'
}]];
const EqualNot = props => createComponent(Icon$1, mergeProps(props, {
  name: "EqualNot",
  iconNode: iconNode$9c
}));
var EqualNot$1 = EqualNot;

const iconNode$9b = [['line', {
  x1: '5',
  y1: '9',
  x2: '19',
  y2: '9',
  key: 'p612hi'
}], ['line', {
  x1: '5',
  y1: '15',
  x2: '19',
  y2: '15',
  key: 'e39u1i'
}]];
const Equal = props => createComponent(Icon$1, mergeProps(props, {
  name: "Equal",
  iconNode: iconNode$9b
}));
var Equal$1 = Equal;

const iconNode$9a = [['path', {
  d: 'm7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21',
  key: '182aya'
}], ['path', {
  d: 'M22 21H7',
  key: 't4ddhn'
}], ['path', {
  d: 'm5 11 9 9',
  key: '1mo9qw'
}]];
const Eraser = props => createComponent(Icon$1, mergeProps(props, {
  name: "Eraser",
  iconNode: iconNode$9a
}));
var Eraser$1 = Eraser;

const iconNode$99 = [['path', {
  d: 'M4 10h12',
  key: '1y6xl8'
}], ['path', {
  d: 'M4 14h9',
  key: '1loblj'
}], ['path', {
  d: 'M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2',
  key: '1j6lzo'
}]];
const Euro = props => createComponent(Icon$1, mergeProps(props, {
  name: "Euro",
  iconNode: iconNode$99
}));
var Euro$1 = Euro;

const iconNode$98 = [['path', {
  d: 'm21 21-6-6m6 6v-4.8m0 4.8h-4.8',
  key: '1c15vz'
}], ['path', {
  d: 'M3 16.2V21m0 0h4.8M3 21l6-6',
  key: '1fsnz2'
}], ['path', {
  d: 'M21 7.8V3m0 0h-4.8M21 3l-6 6',
  key: 'hawz9i'
}], ['path', {
  d: 'M3 7.8V3m0 0h4.8M3 3l6 6',
  key: 'u9ee12'
}]];
const Expand = props => createComponent(Icon$1, mergeProps(props, {
  name: "Expand",
  iconNode: iconNode$98
}));
var Expand$1 = Expand;

const iconNode$97 = [['path', {
  d: 'M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6',
  key: 'a6xqqp'
}], ['polyline', {
  points: '15 3 21 3 21 9',
  key: 'mznyad'
}], ['line', {
  x1: '10',
  y1: '14',
  x2: '21',
  y2: '3',
  key: '19d9un'
}]];
const ExternalLink = props => createComponent(Icon$1, mergeProps(props, {
  name: "ExternalLink",
  iconNode: iconNode$97
}));
var ExternalLink$1 = ExternalLink;

const iconNode$96 = [['path', {
  d: 'M9.88 9.88a3 3 0 1 0 4.24 4.24',
  key: '1jxqfv'
}], ['path', {
  d: 'M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68',
  key: '9wicm4'
}], ['path', {
  d: 'M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61',
  key: '1jreej'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const EyeOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "EyeOff",
  iconNode: iconNode$96
}));
var EyeOff$1 = EyeOff;

const iconNode$95 = [['path', {
  d: 'M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z',
  key: 'rwhkz3'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}]];
const Eye = props => createComponent(Icon$1, mergeProps(props, {
  name: "Eye",
  iconNode: iconNode$95
}));
var Eye$1 = Eye;

const iconNode$94 = [['path', {
  d: 'M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z',
  key: '1jg4f8'
}]];
const Facebook = props => createComponent(Icon$1, mergeProps(props, {
  name: "Facebook",
  iconNode: iconNode$94
}));
var Facebook$1 = Facebook;

const iconNode$93 = [['path', {
  d: 'M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7 5V8l-7 5V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z',
  key: '159hny'
}], ['path', {
  d: 'M17 18h1',
  key: 'uldtlt'
}], ['path', {
  d: 'M12 18h1',
  key: 's9uhes'
}], ['path', {
  d: 'M7 18h1',
  key: '1neino'
}]];
const Factory = props => createComponent(Icon$1, mergeProps(props, {
  name: "Factory",
  iconNode: iconNode$93
}));
var Factory$1 = Factory;

const iconNode$92 = [['path', {
  d: 'M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z',
  key: '484a7f'
}], ['path', {
  d: 'M12 12v.01',
  key: 'u5ubse'
}]];
const Fan = props => createComponent(Icon$1, mergeProps(props, {
  name: "Fan",
  iconNode: iconNode$92
}));
var Fan$1 = Fan;

const iconNode$91 = [['polygon', {
  points: '13 19 22 12 13 5 13 19',
  key: '587y9g'
}], ['polygon', {
  points: '2 19 11 12 2 5 2 19',
  key: '3pweh0'
}]];
const FastForward = props => createComponent(Icon$1, mergeProps(props, {
  name: "FastForward",
  iconNode: iconNode$91
}));
var FastForward$1 = FastForward;

const iconNode$90 = [['path', {
  d: 'M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z',
  key: 'u4sw5n'
}], ['line', {
  x1: '16',
  y1: '8',
  x2: '2',
  y2: '22',
  key: 'ay4g5i'
}], ['line', {
  x1: '17.5',
  y1: '15',
  x2: '9',
  y2: '15',
  key: 'c4zw0f'
}]];
const Feather = props => createComponent(Icon$1, mergeProps(props, {
  name: "Feather",
  iconNode: iconNode$90
}));
var Feather$1 = Feather;

const iconNode$8$ = [['path', {
  d: 'M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z',
  key: '1340ok'
}], ['path', {
  d: 'M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z',
  key: '1hz3m3'
}], ['path', {
  d: 'M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z',
  key: '1oz8n2'
}], ['path', {
  d: 'M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z',
  key: '1ff65i'
}], ['path', {
  d: 'M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z',
  key: 'pdip6e'
}]];
const Figma = props => createComponent(Icon$1, mergeProps(props, {
  name: "Figma",
  iconNode: iconNode$8$
}));
var Figma$1 = Figma;

const iconNode$8_ = [['path', {
  d: 'M4 22V4c0-.5.2-1 .6-1.4C5 2.2 5.5 2 6 2h8.5L20 7.5V20c0 .5-.2 1-.6 1.4-.4.4-.9.6-1.4.6h-2',
  key: '1u864v'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '10',
  cy: '20',
  r: '2',
  key: '1xzdoj'
}], ['path', {
  d: 'M10 7V6',
  key: 'dljcrl'
}], ['path', {
  d: 'M10 12v-1',
  key: 'v7bkov'
}], ['path', {
  d: 'M10 18v-2',
  key: '1cjy8d'
}]];
const FileArchive = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileArchive",
  iconNode: iconNode$8_
}));
var FileArchive$1 = FileArchive;

const iconNode$8Z = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v2',
  key: 'fkyf72'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M2 17v-3a4 4 0 0 1 8 0v3',
  key: '1ggdre'
}], ['circle', {
  cx: '9',
  cy: '17',
  r: '1',
  key: 'bc1fq4'
}], ['circle', {
  cx: '3',
  cy: '17',
  r: '1',
  key: 'vo6nti'
}]];
const FileAudio2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileAudio2",
  iconNode: iconNode$8Z
}));
var FileAudio2$1 = FileAudio2;

const iconNode$8Y = [['path', {
  d: 'M17.5 22h.5c.5 0 1-.2 1.4-.6.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3',
  key: '1013sb'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M10 20v-1a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0Z',
  key: 'gqt63y'
}], ['path', {
  d: 'M6 20v-1a2 2 0 1 0-4 0v1a2 2 0 1 0 4 0Z',
  key: 'cf7lqx'
}], ['path', {
  d: 'M2 19v-3a6 6 0 0 1 12 0v3',
  key: '1acxgf'
}]];
const FileAudio = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileAudio",
  iconNode: iconNode$8Y
}));
var FileAudio$1 = FileAudio;

const iconNode$8X = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M8 10v8h8',
  key: 'tlaukw'
}], ['path', {
  d: 'm8 18 4-4',
  key: '12zab0'
}]];
const FileAxis3d = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileAxis3d",
  iconNode: iconNode$8X
}));
var FileAxis3d$1 = FileAxis3d;

const iconNode$8W = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['path', {
  d: 'M12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z',
  key: '13rien'
}], ['path', {
  d: 'm14 12.5 1 5.5-3-1-3 1 1-5.5',
  key: '14xlky'
}]];
const FileBadge2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileBadge2",
  iconNode: iconNode$8W
}));
var FileBadge2$1 = FileBadge2;

const iconNode$8V = [['path', {
  d: 'M4 7V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-6',
  key: 'qtddq0'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z',
  key: 'u0c8gj'
}], ['path', {
  d: 'M7 16.5 8 22l-3-1-3 1 1-5.5',
  key: '5gm2nr'
}]];
const FileBadge = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileBadge",
  iconNode: iconNode$8V
}));
var FileBadge$1 = FileBadge;

const iconNode$8U = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M12 18v-6',
  key: '17g6i2'
}], ['path', {
  d: 'M8 18v-1',
  key: 'zg0ygc'
}], ['path', {
  d: 'M16 18v-3',
  key: 'j5jt4h'
}]];
const FileBarChart2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileBarChart2",
  iconNode: iconNode$8U
}));
var FileBarChart2$1 = FileBarChart2;

const iconNode$8T = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M12 18v-4',
  key: 'q1q25u'
}], ['path', {
  d: 'M8 18v-2',
  key: 'qcmpov'
}], ['path', {
  d: 'M16 18v-6',
  key: '15y0np'
}]];
const FileBarChart = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileBarChart",
  iconNode: iconNode$8T
}));
var FileBarChart$1 = FileBarChart;

const iconNode$8S = [['path', {
  d: 'M14.5 22H18a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: 'h7jej2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M2.97 13.12c-.6.36-.97 1.02-.97 1.74v3.28c0 .72.37 1.38.97 1.74l3 1.83c.63.39 1.43.39 2.06 0l3-1.83c.6-.36.97-1.02.97-1.74v-3.28c0-.72-.37-1.38-.97-1.74l-3-1.83a1.97 1.97 0 0 0-2.06 0l-3 1.83Z',
  key: 'f4a3oc'
}], ['path', {
  d: 'm7 17-4.74-2.85',
  key: 'etm6su'
}], ['path', {
  d: 'm7 17 4.74-2.85',
  key: '5xuooz'
}], ['path', {
  d: 'M7 17v5',
  key: '1yj1jh'
}]];
const FileBox = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileBox",
  iconNode: iconNode$8S
}));
var FileBox$1 = FileBox;

const iconNode$8R = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm3 15 2 2 4-4',
  key: '1lhrkk'
}]];
const FileCheck2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileCheck2",
  iconNode: iconNode$8R
}));
var FileCheck2$1 = FileCheck2;

const iconNode$8Q = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm9 15 2 2 4-4',
  key: '1grp1n'
}]];
const FileCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileCheck",
  iconNode: iconNode$8Q
}));
var FileCheck$1 = FileCheck;

const iconNode$8P = [['path', {
  d: 'M16 22h2c.5 0 1-.2 1.4-.6.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3',
  key: '9lo3o3'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '8',
  cy: '16',
  r: '6',
  key: '10v15b'
}], ['path', {
  d: 'M9.5 17.5 8 16.25V14',
  key: '1o80t2'
}]];
const FileClock = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileClock",
  iconNode: iconNode$8P
}));
var FileClock$1 = FileClock;

const iconNode$8O = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm9 18 3-3-3-3',
  key: '112psh'
}], ['path', {
  d: 'm5 12-3 3 3 3',
  key: 'oke12k'
}]];
const FileCode = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileCode",
  iconNode: iconNode$8O
}));
var FileCode$1 = FileCode;

const iconNode$8N = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '12',
  cy: '15',
  r: '2',
  key: '1vpstw'
}], ['path', {
  d: 'M12 12v1',
  key: '1vuyxr'
}], ['path', {
  d: 'M12 17v1',
  key: 'y8y3f9'
}], ['path', {
  d: 'm14.6 13.5-.87.5',
  key: 'nomeg4'
}], ['path', {
  d: 'm10.27 16-.87.5',
  key: '1o8v95'
}], ['path', {
  d: 'm14.6 16.5-.87-.5',
  key: 'gzu2jw'
}], ['path', {
  d: 'm10.27 14-.87-.5',
  key: '1vlkk3'
}]];
const FileCog2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileCog2",
  iconNode: iconNode$8N
}));
var FileCog2$1 = FileCog2;

const iconNode$8M = [['path', {
  d: 'M4 6V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4',
  key: 'dba9qu'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '6',
  cy: '14',
  r: '3',
  key: 'a1xfv6'
}], ['path', {
  d: 'M6 10v1',
  key: 'xs0f9j'
}], ['path', {
  d: 'M6 17v1',
  key: 'idyhc0'
}], ['path', {
  d: 'M10 14H9',
  key: 'm5fm2q'
}], ['path', {
  d: 'M3 14H2',
  key: '19ot09'
}], ['path', {
  d: 'm9 11-.88.88',
  key: 'lhul2b'
}], ['path', {
  d: 'M3.88 16.12 3 17',
  key: '169z9n'
}], ['path', {
  d: 'm9 17-.88-.88',
  key: '5io96w'
}], ['path', {
  d: 'M3.88 11.88 3 11',
  key: '1ynhy1'
}]];
const FileCog = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileCog",
  iconNode: iconNode$8M
}));
var FileCog$1 = FileCog;

const iconNode$8L = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['path', {
  d: 'M12 13V7',
  key: 'h0r20n'
}], ['path', {
  d: 'M9 10h6',
  key: '9gxzsh'
}], ['path', {
  d: 'M9 17h6',
  key: 'r8uit2'
}]];
const FileDiff = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileDiff",
  iconNode: iconNode$8L
}));
var FileDiff$1 = FileDiff;

const iconNode$8K = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M10 12h2v6',
  key: '12zw74'
}], ['rect', {
  x: '2',
  y: '12',
  width: '4',
  height: '6',
  key: 'kg2lqm'
}], ['path', {
  d: 'M10 18h4',
  key: '1ulq68'
}]];
const FileDigit = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileDigit",
  iconNode: iconNode$8K
}));
var FileDigit$1 = FileDigit;

const iconNode$8J = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M12 18v-6',
  key: '17g6i2'
}], ['path', {
  d: 'm9 15 3 3 3-3',
  key: '1npd3o'
}]];
const FileDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileDown",
  iconNode: iconNode$8J
}));
var FileDown$1 = FileDown;

const iconNode$8I = [['path', {
  d: 'M4 13.5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-5.5',
  key: '1bg6eb'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z',
  key: '1rgxu8'
}]];
const FileEdit = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileEdit",
  iconNode: iconNode$8I
}));
var FileEdit$1 = FileEdit;

const iconNode$8H = [['path', {
  d: 'M4 6V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4',
  key: 'dba9qu'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M10.29 10.7a2.43 2.43 0 0 0-2.66-.52c-.29.12-.56.3-.78.53l-.35.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L6.5 18l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z',
  key: '1c1fso'
}]];
const FileHeart = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileHeart",
  iconNode: iconNode$8H
}));
var FileHeart$1 = FileHeart;

const iconNode$8G = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '10',
  cy: '13',
  r: '2',
  key: '6v46hv'
}], ['path', {
  d: 'm20 17-1.09-1.09a2 2 0 0 0-2.82 0L10 22',
  key: '17vly1'
}]];
const FileImage = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileImage",
  iconNode: iconNode$8G
}));
var FileImage$1 = FileImage;

const iconNode$8F = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M2 15h10',
  key: 'jfw4w8'
}], ['path', {
  d: 'm9 18 3-3-3-3',
  key: '112psh'
}]];
const FileInput = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileInput",
  iconNode: iconNode$8F
}));
var FileInput$1 = FileInput;

const iconNode$8E = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1',
  key: 'fq0c9t'
}], ['path', {
  d: 'M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1',
  key: '4gibmv'
}]];
const FileJson2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileJson2",
  iconNode: iconNode$8E
}));
var FileJson2$1 = FileJson2;

const iconNode$8D = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1',
  key: '1oajmo'
}], ['path', {
  d: 'M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1',
  key: 'mpwhp6'
}]];
const FileJson = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileJson",
  iconNode: iconNode$8D
}));
var FileJson$1 = FileJson;

const iconNode$8C = [['path', {
  d: 'M4 10V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4',
  key: '1nw5t3'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '4',
  cy: '16',
  r: '2',
  key: '1ehqvc'
}], ['path', {
  d: 'm10 10-4.5 4.5',
  key: '7fwrp6'
}], ['path', {
  d: 'm9 11 1 1',
  key: 'wa6s5q'
}]];
const FileKey2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileKey2",
  iconNode: iconNode$8C
}));
var FileKey2$1 = FileKey2;

const iconNode$8B = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['circle', {
  cx: '10',
  cy: '16',
  r: '2',
  key: '4ckbqe'
}], ['path', {
  d: 'm16 10-4.5 4.5',
  key: '7p3ebg'
}], ['path', {
  d: 'm15 11 1 1',
  key: '1bsyx3'
}]];
const FileKey = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileKey",
  iconNode: iconNode$8B
}));
var FileKey$1 = FileKey;

const iconNode$8A = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm16 13-3.5 3.5-2-2L8 17',
  key: 'zz7yod'
}]];
const FileLineChart = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileLineChart",
  iconNode: iconNode$8A
}));
var FileLineChart$1 = FileLineChart;

const iconNode$8z = [['path', {
  d: 'M4 5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4',
  key: 'gwd2r9'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['rect', {
  x: '2',
  y: '13',
  width: '8',
  height: '5',
  rx: '1',
  key: 'lkev2l'
}], ['path', {
  d: 'M8 13v-2a2 2 0 1 0-4 0v2',
  key: '1pdxzg'
}]];
const FileLock2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileLock2",
  iconNode: iconNode$8z
}));
var FileLock2$1 = FileLock2;

const iconNode$8y = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['rect', {
  x: '8',
  y: '12',
  width: '8',
  height: '6',
  rx: '1',
  key: 'hql291'
}], ['path', {
  d: 'M15 12v-2a3 3 0 1 0-6 0v2',
  key: '1nqnhw'
}]];
const FileLock = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileLock",
  iconNode: iconNode$8y
}));
var FileLock$1 = FileLock;

const iconNode$8x = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M3 15h6',
  key: '4e2qda'
}]];
const FileMinus2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileMinus2",
  iconNode: iconNode$8x
}));
var FileMinus2$1 = FileMinus2;

const iconNode$8w = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['line', {
  x1: '9',
  y1: '15',
  x2: '15',
  y2: '15',
  key: '1hgpwl'
}]];
const FileMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileMinus",
  iconNode: iconNode$8w
}));
var FileMinus$1 = FileMinus;

const iconNode$8v = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M2 15h10',
  key: 'jfw4w8'
}], ['path', {
  d: 'm5 12-3 3 3 3',
  key: 'oke12k'
}]];
const FileOutput = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileOutput",
  iconNode: iconNode$8v
}));
var FileOutput$1 = FileOutput;

const iconNode$8u = [['path', {
  d: 'M16 22h2a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3',
  key: 'zhyrez'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M4.04 11.71a5.84 5.84 0 1 0 8.2 8.29',
  key: 'f1t5jc'
}], ['path', {
  d: 'M13.83 16A5.83 5.83 0 0 0 8 10.17V16h5.83Z',
  key: '7q54ec'
}]];
const FilePieChart = props => createComponent(Icon$1, mergeProps(props, {
  name: "FilePieChart",
  iconNode: iconNode$8u
}));
var FilePieChart$1 = FilePieChart;

const iconNode$8t = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M3 15h6',
  key: '4e2qda'
}], ['path', {
  d: 'M6 12v6',
  key: '1u72j0'
}]];
const FilePlus2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FilePlus2",
  iconNode: iconNode$8t
}));
var FilePlus2$1 = FilePlus2;

const iconNode$8s = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['line', {
  x1: '12',
  y1: '18',
  x2: '12',
  y2: '12',
  key: '16t3gy'
}], ['line', {
  x1: '9',
  y1: '15',
  x2: '15',
  y2: '15',
  key: '1hgpwl'
}]];
const FilePlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "FilePlus",
  iconNode: iconNode$8s
}));
var FilePlus$1 = FilePlus;

const iconNode$8r = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['path', {
  d: 'M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2',
  key: '1umxtm'
}], ['path', {
  d: 'M12 17h.01',
  key: 'p32p05'
}]];
const FileQuestion = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileQuestion",
  iconNode: iconNode$8r
}));
var FileQuestion$1 = FileQuestion;

const iconNode$8q = [['path', {
  d: 'M20 10V7.5L14.5 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h4.5',
  key: 'uvikde'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M16 22a2 2 0 0 1-2-2',
  key: '1wqh5n'
}], ['path', {
  d: 'M20 22a2 2 0 0 0 2-2',
  key: '1l9q4k'
}], ['path', {
  d: 'M20 14a2 2 0 0 1 2 2',
  key: '1ny6zw'
}], ['path', {
  d: 'M16 14a2 2 0 0 0-2 2',
  key: 'ceaadl'
}]];
const FileScan = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileScan",
  iconNode: iconNode$8q
}));
var FileScan$1 = FileScan;

const iconNode$8p = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['circle', {
  cx: '11.5',
  cy: '14.5',
  r: '2.5',
  key: '1bq0ko'
}], ['path', {
  d: 'M13.25 16.25 15 18',
  key: '9eh8bj'
}]];
const FileSearch2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileSearch2",
  iconNode: iconNode$8p
}));
var FileSearch2$1 = FileSearch2;

const iconNode$8o = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3',
  key: 'am10z3'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6z',
  key: 'ychnub'
}], ['path', {
  d: 'm9 18-1.5-1.5',
  key: '1j6qii'
}]];
const FileSearch = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileSearch",
  iconNode: iconNode$8o
}));
var FileSearch$1 = FileSearch;

const iconNode$8n = [['path', {
  d: 'M20 19.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h8.5L18 5.5',
  key: 'kd5d3'
}], ['path', {
  d: 'M8 18h1',
  key: '13wk12'
}], ['path', {
  d: 'M18.42 9.61a2.1 2.1 0 1 1 2.97 2.97L16.95 17 13 18l.99-3.95 4.43-4.44Z',
  key: 'johvi5'
}]];
const FileSignature = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileSignature",
  iconNode: iconNode$8n
}));
var FileSignature$1 = FileSignature;

const iconNode$8m = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M8 13h2',
  key: 'yr2amv'
}], ['path', {
  d: 'M8 17h2',
  key: '2yhykz'
}], ['path', {
  d: 'M14 13h2',
  key: 'un5t4a'
}], ['path', {
  d: 'M14 17h2',
  key: '10kma7'
}]];
const FileSpreadsheet = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileSpreadsheet",
  iconNode: iconNode$8m
}));
var FileSpreadsheet$1 = FileSpreadsheet;

const iconNode$8l = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v7',
  key: '138uzh'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm10 18 3-3-3-3',
  key: '18f6ys'
}], ['path', {
  d: 'M4 18v-1a2 2 0 0 1 2-2h6',
  key: '5uz2rn'
}]];
const FileSymlink = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileSymlink",
  iconNode: iconNode$8l
}));
var FileSymlink$1 = FileSymlink;

const iconNode$8k = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm8 16 2-2-2-2',
  key: '10vzyd'
}], ['path', {
  d: 'M12 18h4',
  key: '1wd2n7'
}]];
const FileTerminal = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileTerminal",
  iconNode: iconNode$8k
}));
var FileTerminal$1 = FileTerminal;

const iconNode$8j = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['line', {
  x1: '16',
  y1: '13',
  x2: '8',
  y2: '13',
  key: '7g4hpw'
}], ['line', {
  x1: '16',
  y1: '17',
  x2: '8',
  y2: '17',
  key: '1nzzn0'
}], ['line', {
  x1: '10',
  y1: '9',
  x2: '8',
  y2: '9',
  key: '13jkcr'
}]];
const FileText = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileText",
  iconNode: iconNode$8j
}));
var FileText$1 = FileText;

const iconNode$8i = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M2 13v-1h6v1',
  key: '1dh9dg'
}], ['path', {
  d: 'M4 18h2',
  key: '1xrofg'
}], ['path', {
  d: 'M5 12v6',
  key: '150t9c'
}]];
const FileType2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileType2",
  iconNode: iconNode$8i
}));
var FileType2$1 = FileType2;

const iconNode$8h = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M9 13v-1h6v1',
  key: '1bb014'
}], ['path', {
  d: 'M11 18h2',
  key: '12mj7e'
}], ['path', {
  d: 'M12 12v6',
  key: '3ahymv'
}]];
const FileType = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileType",
  iconNode: iconNode$8h
}));
var FileType$1 = FileType;

const iconNode$8g = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M12 12v6',
  key: '3ahymv'
}], ['path', {
  d: 'm15 15-3-3-3 3',
  key: '15xj92'
}]];
const FileUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileUp",
  iconNode: iconNode$8g
}));
var FileUp$1 = FileUp;

const iconNode$8f = [['path', {
  d: 'M4 8V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4',
  key: '1nti49'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm10 15.5 4 2.5v-6l-4 2.5',
  key: 't7cp39'
}], ['rect', {
  x: '2',
  y: '12',
  width: '8',
  height: '6',
  rx: '1',
  key: '1fgd6b'
}]];
const FileVideo2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileVideo2",
  iconNode: iconNode$8f
}));
var FileVideo2$1 = FileVideo2;

const iconNode$8e = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm10 11 5 3-5 3v-6Z',
  key: '7ntvm4'
}]];
const FileVideo = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileVideo",
  iconNode: iconNode$8e
}));
var FileVideo$1 = FileVideo;

const iconNode$8d = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'M11.5 13.5c.32.4.5.94.5 1.5s-.18 1.1-.5 1.5',
  key: 'joawwx'
}], ['path', {
  d: 'M15 12c.64.8 1 1.87 1 3s-.36 2.2-1 3',
  key: '1f2wyw'
}], ['path', {
  d: 'M8 15h.01',
  key: 'a7atzg'
}]];
const FileVolume2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileVolume2",
  iconNode: iconNode$8d
}));
var FileVolume2$1 = FileVolume2;

const iconNode$8c = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3',
  key: 'am10z3'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['path', {
  d: 'm7 10-3 2H2v4h2l3 2v-8Z',
  key: 'tazg57'
}], ['path', {
  d: 'M11 11c.64.8 1 1.87 1 3s-.36 2.2-1 3',
  key: '1yej3m'
}]];
const FileVolume = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileVolume",
  iconNode: iconNode$8c
}));
var FileVolume$1 = FileVolume;

const iconNode$8b = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['path', {
  d: 'M12 9v4',
  key: 'juzpu7'
}], ['path', {
  d: 'M12 17h.01',
  key: 'p32p05'
}]];
const FileWarning = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileWarning",
  iconNode: iconNode$8b
}));
var FileWarning$1 = FileWarning;

const iconNode$8a = [['path', {
  d: 'M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4',
  key: '702lig'
}], ['path', {
  d: 'M14 2v6h6',
  key: '1kof46'
}], ['path', {
  d: 'm3 12.5 5 5',
  key: '1qls4r'
}], ['path', {
  d: 'm8 12.5-5 5',
  key: 'b853mi'
}]];
const FileX2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileX2",
  iconNode: iconNode$8a
}));
var FileX2$1 = FileX2;

const iconNode$89 = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}], ['line', {
  x1: '9.5',
  y1: '12.5',
  x2: '14.5',
  y2: '17.5',
  key: 'bu76mq'
}], ['line', {
  x1: '14.5',
  y1: '12.5',
  x2: '9.5',
  y2: '17.5',
  key: 'nmydn6'
}]];
const FileX = props => createComponent(Icon$1, mergeProps(props, {
  name: "FileX",
  iconNode: iconNode$89
}));
var FileX$1 = FileX;

const iconNode$88 = [['path', {
  d: 'M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z',
  key: '1nnpy2'
}], ['polyline', {
  points: '14 2 14 8 20 8',
  key: '1ew0cm'
}]];
const File = props => createComponent(Icon$1, mergeProps(props, {
  name: "File",
  iconNode: iconNode$88
}));
var File$1 = File;

const iconNode$87 = [['path', {
  d: 'M15.5 2H8.6c-.4 0-.8.2-1.1.5-.3.3-.5.7-.5 1.1v12.8c0 .4.2.8.5 1.1.3.3.7.5 1.1.5h9.8c.4 0 .8-.2 1.1-.5.3-.3.5-.7.5-1.1V6.5L15.5 2z',
  key: 'cennsq'
}], ['path', {
  d: 'M3 7.6v12.8c0 .4.2.8.5 1.1.3.3.7.5 1.1.5h9.8',
  key: 'ms809a'
}], ['path', {
  d: 'M15 2v5h5',
  key: 'qq6kwv'
}]];
const Files = props => createComponent(Icon$1, mergeProps(props, {
  name: "Files",
  iconNode: iconNode$87
}));
var Files$1 = Files;

const iconNode$86 = [['rect', {
  x: '2',
  y: '2',
  width: '20',
  height: '20',
  rx: '2.18',
  ry: '2.18',
  key: '15u6kw'
}], ['line', {
  x1: '7',
  y1: '2',
  x2: '7',
  y2: '22',
  key: 'io8xnd'
}], ['line', {
  x1: '17',
  y1: '2',
  x2: '17',
  y2: '22',
  key: '1ewgih'
}], ['line', {
  x1: '2',
  y1: '12',
  x2: '22',
  y2: '12',
  key: 'zvmn4p'
}], ['line', {
  x1: '2',
  y1: '7',
  x2: '7',
  y2: '7',
  key: '15jszs'
}], ['line', {
  x1: '2',
  y1: '17',
  x2: '7',
  y2: '17',
  key: 'qjw6jy'
}], ['line', {
  x1: '17',
  y1: '17',
  x2: '22',
  y2: '17',
  key: '132yhf'
}], ['line', {
  x1: '17',
  y1: '7',
  x2: '22',
  y2: '7',
  key: 'bl3oy5'
}]];
const Film = props => createComponent(Icon$1, mergeProps(props, {
  name: "Film",
  iconNode: iconNode$86
}));
var Film$1 = Film;

const iconNode$85 = [['polygon', {
  points: '22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3',
  key: '1yg77f'
}]];
const Filter = props => createComponent(Icon$1, mergeProps(props, {
  name: "Filter",
  iconNode: iconNode$85
}));
var Filter$1 = Filter;

const iconNode$84 = [['path', {
  d: 'M2 12C2 6.5 6.5 2 12 2a10 10 0 0 1 8 4',
  key: '1jc9o5'
}], ['path', {
  d: 'M5 19.5C5.5 18 6 15 6 12c0-.7.12-1.37.34-2',
  key: '1mxgy1'
}], ['path', {
  d: 'M17.29 21.02c.12-.6.43-2.3.5-3.02',
  key: 'ptglia'
}], ['path', {
  d: 'M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4',
  key: '1nerag'
}], ['path', {
  d: 'M8.65 22c.21-.66.45-1.32.57-2',
  key: '13wd9y'
}], ['path', {
  d: 'M14 13.12c0 2.38 0 6.38-1 8.88',
  key: 'o46ks0'
}], ['path', {
  d: 'M2 16h.01',
  key: '1gqxmh'
}], ['path', {
  d: 'M21.8 16c.2-2 .131-5.354 0-6',
  key: 'drycrb'
}], ['path', {
  d: 'M9 6.8a6 6 0 0 1 9 5.2c0 .47 0 1.17-.02 2',
  key: '1fgabc'
}]];
const Fingerprint = props => createComponent(Icon$1, mergeProps(props, {
  name: "Fingerprint",
  iconNode: iconNode$84
}));
var Fingerprint$1 = Fingerprint;

const iconNode$83 = [['path', {
  d: 'M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z',
  key: '15baut'
}], ['path', {
  d: 'M18 12v.5',
  key: '18hhni'
}], ['path', {
  d: 'M16 17.93a9.77 9.77 0 0 1 0-11.86',
  key: '16dt7o'
}], ['path', {
  d: 'M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33',
  key: 'l9di03'
}], ['path', {
  d: 'M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4',
  key: '1kjonw'
}], ['path', {
  d: 'm16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98',
  key: '1zlm23'
}]];
const Fish = props => createComponent(Icon$1, mergeProps(props, {
  name: "Fish",
  iconNode: iconNode$83
}));
var Fish$1 = Fish;

const iconNode$82 = [['path', {
  d: 'M8 2c3 0 5 2 8 2s4-1 4-1v11',
  key: '9rwyz9'
}], ['path', {
  d: 'M4 22V4',
  key: '1plyxx'
}], ['path', {
  d: 'M4 15s1-1 4-1 5 2 8 2',
  key: '1myooe'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const FlagOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlagOff",
  iconNode: iconNode$82
}));
var FlagOff$1 = FlagOff;

const iconNode$81 = [['path', {
  d: 'M17 22V2L7 7l10 5',
  key: '1rmf0r'
}]];
const FlagTriangleLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlagTriangleLeft",
  iconNode: iconNode$81
}));
var FlagTriangleLeft$1 = FlagTriangleLeft;

const iconNode$80 = [['path', {
  d: 'M7 22V2l10 5-10 5',
  key: '17n18y'
}]];
const FlagTriangleRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlagTriangleRight",
  iconNode: iconNode$80
}));
var FlagTriangleRight$1 = FlagTriangleRight;

const iconNode$7$ = [['path', {
  d: 'M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z',
  key: 'i9b6wo'
}], ['line', {
  x1: '4',
  y1: '22',
  x2: '4',
  y2: '15',
  key: '1k23bw'
}]];
const Flag = props => createComponent(Icon$1, mergeProps(props, {
  name: "Flag",
  iconNode: iconNode$7$
}));
var Flag$1 = Flag;

const iconNode$7_ = [['path', {
  d: 'M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z',
  key: '96xj49'
}]];
const Flame = props => createComponent(Icon$1, mergeProps(props, {
  name: "Flame",
  iconNode: iconNode$7_
}));
var Flame$1 = Flame;

const iconNode$7Z = [['path', {
  d: 'M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4',
  key: '1r120k'
}], ['path', {
  d: 'M7 2h11v4c0 2-2 2-2 4v1',
  key: 'dz1920'
}], ['line', {
  x1: '11',
  y1: '6',
  x2: '18',
  y2: '6',
  key: 'q6oc82'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const FlashlightOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlashlightOff",
  iconNode: iconNode$7Z
}));
var FlashlightOff$1 = FlashlightOff;

const iconNode$7Y = [['path', {
  d: 'M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z',
  key: '1orkel'
}], ['line', {
  x1: '6',
  y1: '6',
  x2: '18',
  y2: '6',
  key: 'tmfr4k'
}], ['line', {
  x1: '12',
  y1: '12',
  x2: '12',
  y2: '12',
  key: 'jyrcx7'
}]];
const Flashlight = props => createComponent(Icon$1, mergeProps(props, {
  name: "Flashlight",
  iconNode: iconNode$7Y
}));
var Flashlight$1 = Flashlight;

const iconNode$7X = [['path', {
  d: 'M10 10 4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-1.272-2.542',
  key: '59ek9y'
}], ['path', {
  d: 'M10 2v2.343',
  key: '15t272'
}], ['path', {
  d: 'M14 2v6.343',
  key: 'sxr80q'
}], ['path', {
  d: 'M8.5 2h7',
  key: 'csnxdl'
}], ['path', {
  d: 'M7 16h9',
  key: 't5njau'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const FlaskConicalOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlaskConicalOff",
  iconNode: iconNode$7X
}));
var FlaskConicalOff$1 = FlaskConicalOff;

const iconNode$7W = [['path', {
  d: 'M10 2v7.527a2 2 0 0 1-.211.896L4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-5.069-10.127A2 2 0 0 1 14 9.527V2',
  key: 'pzvekw'
}], ['path', {
  d: 'M8.5 2h7',
  key: 'csnxdl'
}], ['path', {
  d: 'M7 16h10',
  key: 'wp8him'
}]];
const FlaskConical = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlaskConical",
  iconNode: iconNode$7W
}));
var FlaskConical$1 = FlaskConical;

const iconNode$7V = [['path', {
  d: 'M10 2v7.31',
  key: '5d1hyh'
}], ['path', {
  d: 'M14 9.3V1.99',
  key: '14k4l0'
}], ['path', {
  d: 'M8.5 2h7',
  key: 'csnxdl'
}], ['path', {
  d: 'M14 9.3a6.5 6.5 0 1 1-4 0',
  key: '1r8fvy'
}], ['path', {
  d: 'M5.58 16.5h12.85',
  key: '78w9cl'
}]];
const FlaskRound = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlaskRound",
  iconNode: iconNode$7V
}));
var FlaskRound$1 = FlaskRound;

const iconNode$7U = [['path', {
  d: 'm3 7 5 5-5 5V7',
  key: 'couhi7'
}], ['path', {
  d: 'm21 7-5 5 5 5V7',
  key: '6ouia7'
}], ['path', {
  d: 'M12 20v2',
  key: '1lh1kg'
}], ['path', {
  d: 'M12 14v2',
  key: '8jcxud'
}], ['path', {
  d: 'M12 8v2',
  key: '1woqiv'
}], ['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}]];
const FlipHorizontal2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlipHorizontal2",
  iconNode: iconNode$7U
}));
var FlipHorizontal2$1 = FlipHorizontal2;

const iconNode$7T = [['path', {
  d: 'M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3',
  key: '1i73f7'
}], ['path', {
  d: 'M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3',
  key: 'saxlbk'
}], ['path', {
  d: 'M12 20v2',
  key: '1lh1kg'
}], ['path', {
  d: 'M12 14v2',
  key: '8jcxud'
}], ['path', {
  d: 'M12 8v2',
  key: '1woqiv'
}], ['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}]];
const FlipHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlipHorizontal",
  iconNode: iconNode$7T
}));
var FlipHorizontal$1 = FlipHorizontal;

const iconNode$7S = [['path', {
  d: 'm17 3-5 5-5-5h10',
  key: '1ftt6x'
}], ['path', {
  d: 'm17 21-5-5-5 5h10',
  key: '1m0wmu'
}], ['path', {
  d: 'M4 12H2',
  key: 'rhcxmi'
}], ['path', {
  d: 'M10 12H8',
  key: 's88cx1'
}], ['path', {
  d: 'M16 12h-2',
  key: '10asgb'
}], ['path', {
  d: 'M22 12h-2',
  key: '14jgyd'
}]];
const FlipVertical2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlipVertical2",
  iconNode: iconNode$7S
}));
var FlipVertical2$1 = FlipVertical2;

const iconNode$7R = [['path', {
  d: 'M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3',
  key: '14bfxa'
}], ['path', {
  d: 'M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3',
  key: '14rx03'
}], ['path', {
  d: 'M4 12H2',
  key: 'rhcxmi'
}], ['path', {
  d: 'M10 12H8',
  key: 's88cx1'
}], ['path', {
  d: 'M16 12h-2',
  key: '10asgb'
}], ['path', {
  d: 'M22 12h-2',
  key: '14jgyd'
}]];
const FlipVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "FlipVertical",
  iconNode: iconNode$7R
}));
var FlipVertical$1 = FlipVertical;

const iconNode$7Q = [['path', {
  d: 'M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1',
  key: '3pnvol'
}], ['circle', {
  cx: '12',
  cy: '8',
  r: '2',
  key: '1822b1'
}], ['path', {
  d: 'M12 10v12',
  key: '6ubwww'
}], ['path', {
  d: 'M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z',
  key: '9hd38g'
}], ['path', {
  d: 'M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z',
  key: 'ufn41s'
}]];
const Flower2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Flower2",
  iconNode: iconNode$7Q
}));
var Flower2$1 = Flower2;

const iconNode$7P = [['path', {
  d: 'M12 7.5a4.5 4.5 0 1 1 4.5 4.5M12 7.5A4.5 4.5 0 1 0 7.5 12M12 7.5V9m-4.5 3a4.5 4.5 0 1 0 4.5 4.5M7.5 12H9m7.5 0a4.5 4.5 0 1 1-4.5 4.5m4.5-4.5H15m-3 4.5V15',
  key: '51z86h'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}], ['path', {
  d: 'm8 16 1.5-1.5',
  key: 'ce6zph'
}], ['path', {
  d: 'M14.5 9.5 16 8',
  key: '1kzrzb'
}], ['path', {
  d: 'm8 8 1.5 1.5',
  key: '1yv88w'
}], ['path', {
  d: 'M14.5 14.5 16 16',
  key: '12xhjh'
}]];
const Flower = props => createComponent(Icon$1, mergeProps(props, {
  name: "Flower",
  iconNode: iconNode$7P
}));
var Flower$1 = Flower;

const iconNode$7O = [['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}], ['path', {
  d: 'M3 7V5a2 2 0 0 1 2-2h2',
  key: 'aa7l1z'
}], ['path', {
  d: 'M17 3h2a2 2 0 0 1 2 2v2',
  key: '4qcy5o'
}], ['path', {
  d: 'M21 17v2a2 2 0 0 1-2 2h-2',
  key: '6vwrx8'
}], ['path', {
  d: 'M7 21H5a2 2 0 0 1-2-2v-2',
  key: 'ioqczr'
}]];
const Focus = props => createComponent(Icon$1, mergeProps(props, {
  name: "Focus",
  iconNode: iconNode$7O
}));
var Focus$1 = Focus;

const iconNode$7N = [['path', {
  d: 'M22 20V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2h6',
  key: '1l0vpk'
}], ['circle', {
  cx: '16',
  cy: '19',
  r: '2',
  key: '1uwppb'
}], ['path', {
  d: 'M16 11v-1',
  key: 'eoyjtm'
}], ['path', {
  d: 'M16 17v-2',
  key: '1xp69b'
}]];
const FolderArchive = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderArchive",
  iconNode: iconNode$7N
}));
var FolderArchive$1 = FolderArchive;

const iconNode$7M = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['path', {
  d: 'm9 13 2 2 4-4',
  key: '6343dt'
}]];
const FolderCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderCheck",
  iconNode: iconNode$7M
}));
var FolderCheck$1 = FolderCheck;

const iconNode$7L = [['path', {
  d: 'M7 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2',
  key: '1p0xo9'
}], ['circle', {
  cx: '16',
  cy: '16',
  r: '6',
  key: 'qoo3c4'
}], ['path', {
  d: 'M16 14v2l1 1',
  key: 'xth2jh'
}]];
const FolderClock = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderClock",
  iconNode: iconNode$7L
}));
var FolderClock$1 = FolderClock;

const iconNode$7K = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['path', {
  d: 'M2 10h20',
  key: '1ir3d8'
}]];
const FolderClosed = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderClosed",
  iconNode: iconNode$7K
}));
var FolderClosed$1 = FolderClosed;

const iconNode$7J = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['circle', {
  cx: '12',
  cy: '13',
  r: '2',
  key: '1c1ljs'
}], ['path', {
  d: 'M12 10v1',
  key: 'ngorzm'
}], ['path', {
  d: 'M12 15v1',
  key: '1ovrzm'
}], ['path', {
  d: 'm14.6 11.5-.87.5',
  key: 'zm6w6e'
}], ['path', {
  d: 'm10.27 14-.87.5',
  key: 'idea33'
}], ['path', {
  d: 'm14.6 14.5-.87-.5',
  key: '1ii18h'
}], ['path', {
  d: 'm10.27 12-.87-.5',
  key: 'tf2vd0'
}]];
const FolderCog2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderCog2",
  iconNode: iconNode$7J
}));
var FolderCog2$1 = FolderCog2;

const iconNode$7I = [['path', {
  d: 'M10.5 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v3',
  key: '1g1zaq'
}], ['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['path', {
  d: 'M18 14v1',
  key: '1sx9hk'
}], ['path', {
  d: 'M18 21v1',
  key: 'pviwm2'
}], ['path', {
  d: 'M22 18h-1',
  key: 'phgwqy'
}], ['path', {
  d: 'M15 18h-1',
  key: '1v9fvv'
}], ['path', {
  d: 'm21 15-.88.88',
  key: '13nfy4'
}], ['path', {
  d: 'M15.88 20.12 15 21',
  key: 'qplfkl'
}], ['path', {
  d: 'm21 21-.88-.88',
  key: '1ryrr1'
}], ['path', {
  d: 'M15.88 15.88 15 15',
  key: '4terp3'
}]];
const FolderCog = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderCog",
  iconNode: iconNode$7I
}));
var FolderCog$1 = FolderCog;

const iconNode$7H = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['path', {
  d: 'M12 10v6',
  key: '1bos4e'
}], ['path', {
  d: 'm15 13-3 3-3-3',
  key: '6j2sf0'
}]];
const FolderDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderDown",
  iconNode: iconNode$7H
}));
var FolderDown$1 = FolderDown;

const iconNode$7G = [['path', {
  d: 'M8.42 10.61a2.1 2.1 0 1 1 2.97 2.97L5.95 19 2 20l.99-3.95 5.43-5.44Z',
  key: 'o1ah0z'
}], ['path', {
  d: 'M2 11.5V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5',
  key: 'bim890'
}]];
const FolderEdit = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderEdit",
  iconNode: iconNode$7G
}));
var FolderEdit$1 = FolderEdit;

const iconNode$7F = [['path', {
  d: 'M11 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v1.5',
  key: 'zoglpu'
}], ['path', {
  d: 'M21.29 13.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 21l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z',
  key: '2tfff6'
}]];
const FolderHeart = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderHeart",
  iconNode: iconNode$7F
}));
var FolderHeart$1 = FolderHeart;

const iconNode$7E = [['path', {
  d: 'M2 9V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1',
  key: '1gu97c'
}], ['path', {
  d: 'M2 13h10',
  key: 'pgb2dq'
}], ['path', {
  d: 'm9 16 3-3-3-3',
  key: '6m91ic'
}]];
const FolderInput = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderInput",
  iconNode: iconNode$7E
}));
var FolderInput$1 = FolderInput;

const iconNode$7D = [['path', {
  d: 'M10 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v2',
  key: '203odn'
}], ['circle', {
  cx: '16',
  cy: '20',
  r: '2',
  key: '1vifvg'
}], ['path', {
  d: 'm22 14-4.5 4.5',
  key: '1ef6z8'
}], ['path', {
  d: 'm21 15 1 1',
  key: '1ejcpy'
}]];
const FolderKey = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderKey",
  iconNode: iconNode$7D
}));
var FolderKey$1 = FolderKey;

const iconNode$7C = [['path', {
  d: 'M10 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v2.5',
  key: '1ivsx8'
}], ['rect', {
  x: '14',
  y: '17',
  width: '8',
  height: '5',
  rx: '1',
  key: '15pjcy'
}], ['path', {
  d: 'M20 17v-2a2 2 0 1 0-4 0v2',
  key: 'pwaxnr'
}]];
const FolderLock = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderLock",
  iconNode: iconNode$7C
}));
var FolderLock$1 = FolderLock;

const iconNode$7B = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['line', {
  x1: '9',
  y1: '13',
  x2: '15',
  y2: '13',
  key: '1nzi25'
}]];
const FolderMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderMinus",
  iconNode: iconNode$7B
}));
var FolderMinus$1 = FolderMinus;

const iconNode$7A = [['path', {
  d: 'm6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2',
  key: '1nmvlm'
}]];
const FolderOpen = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderOpen",
  iconNode: iconNode$7A
}));
var FolderOpen$1 = FolderOpen;

const iconNode$7z = [['path', {
  d: 'M2 7.5V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2',
  key: 'jm8npq'
}], ['path', {
  d: 'M2 13h10',
  key: 'pgb2dq'
}], ['path', {
  d: 'm5 10-3 3 3 3',
  key: '1r8ie0'
}]];
const FolderOutput = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderOutput",
  iconNode: iconNode$7z
}));
var FolderOutput$1 = FolderOutput;

const iconNode$7y = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['line', {
  x1: '12',
  y1: '10',
  x2: '12',
  y2: '16',
  key: '1fgwrs'
}], ['line', {
  x1: '9',
  y1: '13',
  x2: '15',
  y2: '13',
  key: '1nzi25'
}]];
const FolderPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderPlus",
  iconNode: iconNode$7y
}));
var FolderPlus$1 = FolderPlus;

const iconNode$7x = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['circle', {
  cx: '11.5',
  cy: '12.5',
  r: '2.5',
  key: '1ea5ju'
}], ['path', {
  d: 'M13.27 14.27 15 16',
  key: '5hsvtf'
}]];
const FolderSearch2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderSearch2",
  iconNode: iconNode$7x
}));
var FolderSearch2$1 = FolderSearch2;

const iconNode$7w = [['path', {
  d: 'M11 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v4',
  key: '1moo03'
}], ['circle', {
  cx: '17',
  cy: '17',
  r: '3',
  key: '18b49y'
}], ['path', {
  d: 'm21 21-1.5-1.5',
  key: '3sg1j'
}]];
const FolderSearch = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderSearch",
  iconNode: iconNode$7w
}));
var FolderSearch$1 = FolderSearch;

const iconNode$7v = [['path', {
  d: 'M2 9V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2',
  key: '1or2t8'
}], ['path', {
  d: 'm8 16 3-3-3-3',
  key: 'rlqrt1'
}], ['path', {
  d: 'M2 16v-1a2 2 0 0 1 2-2h6',
  key: 'pgw8ln'
}]];
const FolderSymlink = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderSymlink",
  iconNode: iconNode$7v
}));
var FolderSymlink$1 = FolderSymlink;

const iconNode$7u = [['path', {
  d: 'M13 10h7a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z',
  key: '10jzg2'
}], ['path', {
  d: 'M13 21h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.88a1 1 0 0 1-.9-.55l-.44-.9a1 1 0 0 0-.9-.55H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z',
  key: '1b9nqm'
}], ['path', {
  d: 'M3 3v2c0 1.1.9 2 2 2h3',
  key: '1wqwis'
}], ['path', {
  d: 'M3 3v13c0 1.1.9 2 2 2h3',
  key: '1bqeom'
}]];
const FolderTree = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderTree",
  iconNode: iconNode$7u
}));
var FolderTree$1 = FolderTree;

const iconNode$7t = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['path', {
  d: 'M12 10v6',
  key: '1bos4e'
}], ['path', {
  d: 'm9 13 3-3 3 3',
  key: '1pxg3c'
}]];
const FolderUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderUp",
  iconNode: iconNode$7t
}));
var FolderUp$1 = FolderUp;

const iconNode$7s = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}], ['path', {
  d: 'm9.5 10.5 5 5',
  key: 'ra9qjz'
}], ['path', {
  d: 'm14.5 10.5-5 5',
  key: 'l2rkpq'
}]];
const FolderX = props => createComponent(Icon$1, mergeProps(props, {
  name: "FolderX",
  iconNode: iconNode$7s
}));
var FolderX$1 = FolderX;

const iconNode$7r = [['path', {
  d: 'M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z',
  key: '1fr9dc'
}]];
const Folder = props => createComponent(Icon$1, mergeProps(props, {
  name: "Folder",
  iconNode: iconNode$7r
}));
var Folder$1 = Folder;

const iconNode$7q = [['path', {
  d: 'M8 17h12a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3.93a2 2 0 0 1-1.66-.9l-.82-1.2a2 2 0 0 0-1.66-.9H8a2 2 0 0 0-2 2v9c0 1.1.9 2 2 2Z',
  key: '1aska4'
}], ['path', {
  d: 'M2 8v11c0 1.1.9 2 2 2h14',
  key: 'n13cji'
}]];
const Folders = props => createComponent(Icon$1, mergeProps(props, {
  name: "Folders",
  iconNode: iconNode$7q
}));
var Folders$1 = Folders;

const iconNode$7p = [['rect', {
  x: '2',
  y: '6',
  width: '20',
  height: '12',
  rx: '2',
  key: '1wpnh2'
}], ['path', {
  d: 'M12 12h.01',
  key: '1mp3jc'
}], ['path', {
  d: 'M17 12h.01',
  key: '1m0b6t'
}], ['path', {
  d: 'M7 12h.01',
  key: 'eqddd0'
}]];
const FormInput = props => createComponent(Icon$1, mergeProps(props, {
  name: "FormInput",
  iconNode: iconNode$7p
}));
var FormInput$1 = FormInput;

const iconNode$7o = [['polyline', {
  points: '15 17 20 12 15 7',
  key: '1w3sku'
}], ['path', {
  d: 'M4 18v-2a4 4 0 0 1 4-4h12',
  key: 'jmiej9'
}]];
const Forward = props => createComponent(Icon$1, mergeProps(props, {
  name: "Forward",
  iconNode: iconNode$7o
}));
var Forward$1 = Forward;

const iconNode$7n = [['line', {
  x1: '22',
  y1: '6',
  x2: '2',
  y2: '6',
  key: '181agm'
}], ['line', {
  x1: '22',
  y1: '18',
  x2: '2',
  y2: '18',
  key: '12x4ne'
}], ['line', {
  x1: '6',
  y1: '2',
  x2: '6',
  y2: '22',
  key: 'gjs6u1'
}], ['line', {
  x1: '18',
  y1: '2',
  x2: '18',
  y2: '22',
  key: '1hbgm0'
}]];
const Frame = props => createComponent(Icon$1, mergeProps(props, {
  name: "Frame",
  iconNode: iconNode$7n
}));
var Frame$1 = Frame;

const iconNode$7m = [['path', {
  d: 'M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7',
  key: '1a2nng'
}]];
const Framer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Framer",
  iconNode: iconNode$7m
}));
var Framer$1 = Framer;

const iconNode$7l = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M16 16s-1.5-2-4-2-4 2-4 2',
  key: 'epbg0q'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '9.01',
  y2: '9',
  key: '141aaf'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '15.01',
  y2: '9',
  key: '1cyg3o'
}]];
const Frown = props => createComponent(Icon$1, mergeProps(props, {
  name: "Frown",
  iconNode: iconNode$7l
}));
var Frown$1 = Frown;

const iconNode$7k = [['line', {
  x1: '3',
  y1: '22',
  x2: '15',
  y2: '22',
  key: 'fc344c'
}], ['line', {
  x1: '4',
  y1: '9',
  x2: '14',
  y2: '9',
  key: 'htzs8q'
}], ['path', {
  d: 'M14 22V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v18',
  key: '16j0yd'
}], ['path', {
  d: 'M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 2 2h0a2 2 0 0 0 2-2V9.83a2 2 0 0 0-.59-1.42L18 5',
  key: '8ur5zv'
}]];
const Fuel = props => createComponent(Icon$1, mergeProps(props, {
  name: "Fuel",
  iconNode: iconNode$7k
}));
var Fuel$1 = Fuel;

const iconNode$7j = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3',
  key: 'm1af9g'
}], ['path', {
  d: 'M9 11.2h5.7',
  key: '3zgcl2'
}]];
const FunctionSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "FunctionSquare",
  iconNode: iconNode$7j
}));
var FunctionSquare$1 = FunctionSquare;

const iconNode$7i = [['line', {
  x1: '6',
  y1: '11',
  x2: '10',
  y2: '11',
  key: '19tls9'
}], ['line', {
  x1: '8',
  y1: '9',
  x2: '8',
  y2: '13',
  key: '6w9cvk'
}], ['line', {
  x1: '15',
  y1: '12',
  x2: '15.01',
  y2: '12',
  key: 'abmwhw'
}], ['line', {
  x1: '18',
  y1: '10',
  x2: '18.01',
  y2: '10',
  key: '19ehlv'
}], ['path', {
  d: 'M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z',
  key: 'mfqc10'
}]];
const Gamepad2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gamepad2",
  iconNode: iconNode$7i
}));
var Gamepad2$1 = Gamepad2;

const iconNode$7h = [['line', {
  x1: '6',
  y1: '12',
  x2: '10',
  y2: '12',
  key: 'xg250c'
}], ['line', {
  x1: '8',
  y1: '10',
  x2: '8',
  y2: '14',
  key: '1cn0zn'
}], ['line', {
  x1: '15',
  y1: '13',
  x2: '15.01',
  y2: '13',
  key: '1pybt0'
}], ['line', {
  x1: '18',
  y1: '11',
  x2: '18.01',
  y2: '11',
  key: '147dzq'
}], ['rect', {
  x: '2',
  y: '6',
  width: '20',
  height: '12',
  rx: '2',
  key: '1wpnh2'
}]];
const Gamepad = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gamepad",
  iconNode: iconNode$7h
}));
var Gamepad$1 = Gamepad;

const iconNode$7g = [['path', {
  d: 'm12 15 3.5-3.5',
  key: '1sfa3b'
}], ['path', {
  d: 'M20.3 18c.4-1 .7-2.2.7-3.4C21 9.8 17 6 12 6s-9 3.8-9 8.6c0 1.2.3 2.4.7 3.4',
  key: 'rcs43o'
}]];
const Gauge = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gauge",
  iconNode: iconNode$7g
}));
var Gauge$1 = Gauge;

const iconNode$7f = [['path', {
  d: 'm14 13-7.5 7.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 0 1 0-3L11 10',
  key: 'c9cbz0'
}], ['path', {
  d: 'm16 16 6-6',
  key: 'vzrcl6'
}], ['path', {
  d: 'm8 8 6-6',
  key: '18bi4p'
}], ['path', {
  d: 'm9 7 8 8',
  key: '5jnvq1'
}], ['path', {
  d: 'm21 11-8-8',
  key: 'z4y7zo'
}]];
const Gavel = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gavel",
  iconNode: iconNode$7f
}));
var Gavel$1 = Gavel;

const iconNode$7e = [['polygon', {
  points: '6 3 18 3 22 9 12 22 2 9',
  key: '1kbvml'
}], ['path', {
  d: 'm12 22 4-13-3-6',
  key: '19hoeh'
}], ['path', {
  d: 'M12 22 8 9l3-6',
  key: '1klo0r'
}], ['path', {
  d: 'M2 9h20',
  key: '16fsjt'
}]];
const Gem = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gem",
  iconNode: iconNode$7e
}));
var Gem$1 = Gem;

const iconNode$7d = [['path', {
  d: 'M9 10h.01',
  key: 'qbtxuw'
}], ['path', {
  d: 'M15 10h.01',
  key: '1qmjsl'
}], ['path', {
  d: 'M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z',
  key: 'uwwb07'
}]];
const Ghost = props => createComponent(Icon$1, mergeProps(props, {
  name: "Ghost",
  iconNode: iconNode$7d
}));
var Ghost$1 = Ghost;

const iconNode$7c = [['polyline', {
  points: '20 12 20 22 4 22 4 12',
  key: 'nda8fc'
}], ['rect', {
  x: '2',
  y: '7',
  width: '20',
  height: '5',
  key: '1k9o8g'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '7',
  key: '1tigeq'
}], ['path', {
  d: 'M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z',
  key: 'zighg4'
}], ['path', {
  d: 'M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z',
  key: '1pa5tk'
}]];
const Gift = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gift",
  iconNode: iconNode$7c
}));
var Gift$1 = Gift;

const iconNode$7b = [['path', {
  d: 'M6 3v12',
  key: 'qpgusn'
}], ['path', {
  d: 'M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z',
  key: '1d02ji'
}], ['path', {
  d: 'M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z',
  key: 'chk6ph'
}], ['path', {
  d: 'M15 6a9 9 0 0 0-9 9',
  key: 'or332x'
}], ['path', {
  d: 'M18 15v6',
  key: '9wciyi'
}], ['path', {
  d: 'M21 18h-6',
  key: '139f0c'
}]];
const GitBranchPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitBranchPlus",
  iconNode: iconNode$7b
}));
var GitBranchPlus$1 = GitBranchPlus;

const iconNode$7a = [['line', {
  x1: '6',
  y1: '3',
  x2: '6',
  y2: '15',
  key: '1o40i7'
}], ['circle', {
  cx: '18',
  cy: '6',
  r: '3',
  key: '1h7g24'
}], ['circle', {
  cx: '6',
  cy: '18',
  r: '3',
  key: 'fqmcym'
}], ['path', {
  d: 'M18 9a9 9 0 0 1-9 9',
  key: 'n2h4wq'
}]];
const GitBranch = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitBranch",
  iconNode: iconNode$7a
}));
var GitBranch$1 = GitBranch;

const iconNode$79 = [['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}], ['line', {
  x1: '3',
  y1: '12',
  x2: '9',
  y2: '12',
  key: '1vg2s9'
}], ['line', {
  x1: '15',
  y1: '12',
  x2: '21',
  y2: '12',
  key: 'fnrdho'
}]];
const GitCommit = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitCommit",
  iconNode: iconNode$79
}));
var GitCommit$1 = GitCommit;

const iconNode$78 = [['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['path', {
  d: 'M13 6h3a2 2 0 0 1 2 2v7',
  key: '1yeb86'
}], ['path', {
  d: 'M11 18H8a2 2 0 0 1-2-2V9',
  key: '19pyzm'
}]];
const GitCompare = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitCompare",
  iconNode: iconNode$78
}));
var GitCompare$1 = GitCompare;

const iconNode$77 = [['circle', {
  cx: '12',
  cy: '18',
  r: '3',
  key: '1mpf1b'
}], ['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['circle', {
  cx: '18',
  cy: '6',
  r: '3',
  key: '1h7g24'
}], ['path', {
  d: 'M18 9v1a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V9',
  key: 'c89w8i'
}], ['path', {
  d: 'M12 12v3',
  key: '158kv8'
}]];
const GitFork = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitFork",
  iconNode: iconNode$77
}));
var GitFork$1 = GitFork;

const iconNode$76 = [['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['path', {
  d: 'M6 21V9a9 9 0 0 0 9 9',
  key: '7kw0sc'
}]];
const GitMerge = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitMerge",
  iconNode: iconNode$76
}));
var GitMerge$1 = GitMerge;

const iconNode$75 = [['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['path', {
  d: 'M18 11.5V15',
  key: '65xf6f'
}], ['path', {
  d: 'm21 3-6 6',
  key: '16nqsk'
}], ['path', {
  d: 'm21 9-6-6',
  key: '9j17rh'
}], ['line', {
  x1: '6',
  y1: '9',
  x2: '6',
  y2: '21',
  key: '79th4h'
}]];
const GitPullRequestClosed = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitPullRequestClosed",
  iconNode: iconNode$75
}));
var GitPullRequestClosed$1 = GitPullRequestClosed;

const iconNode$74 = [['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['path', {
  d: 'M18 6V5',
  key: '1oao2s'
}], ['path', {
  d: 'M18 11v-1',
  key: '11c8tz'
}], ['line', {
  x1: '6',
  y1: '9',
  x2: '6',
  y2: '21',
  key: '79th4h'
}]];
const GitPullRequestDraft = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitPullRequestDraft",
  iconNode: iconNode$74
}));
var GitPullRequestDraft$1 = GitPullRequestDraft;

const iconNode$73 = [['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['path', {
  d: 'M13 6h3a2 2 0 0 1 2 2v7',
  key: '1yeb86'
}], ['line', {
  x1: '6',
  y1: '9',
  x2: '6',
  y2: '21',
  key: '79th4h'
}]];
const GitPullRequest = props => createComponent(Icon$1, mergeProps(props, {
  name: "GitPullRequest",
  iconNode: iconNode$73
}));
var GitPullRequest$1 = GitPullRequest;

const iconNode$72 = [['path', {
  d: 'M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4',
  key: 'tonef'
}], ['path', {
  d: 'M9 18c-4.51 2-5-2-7-2',
  key: '9comsn'
}]];
const Github = props => createComponent(Icon$1, mergeProps(props, {
  name: "Github",
  iconNode: iconNode$72
}));
var Github$1 = Github;

const iconNode$71 = [['path', {
  d: 'm22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z',
  key: '148pdi'
}]];
const Gitlab = props => createComponent(Icon$1, mergeProps(props, {
  name: "Gitlab",
  iconNode: iconNode$71
}));
var Gitlab$1 = Gitlab;

const iconNode$70 = [['path', {
  d: 'M15.2 22H8.8a2 2 0 0 1-2-1.79L5 3h14l-1.81 17.21A2 2 0 0 1 15.2 22Z',
  key: '48rfw3'
}], ['path', {
  d: 'M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0',
  key: 'mjntcy'
}]];
const GlassWater = props => createComponent(Icon$1, mergeProps(props, {
  name: "GlassWater",
  iconNode: iconNode$70
}));
var GlassWater$1 = GlassWater;

const iconNode$6$ = [['circle', {
  cx: '6',
  cy: '15',
  r: '4',
  key: 'vux9w4'
}], ['circle', {
  cx: '18',
  cy: '15',
  r: '4',
  key: '18o8ve'
}], ['path', {
  d: 'M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2',
  key: '1ag4bs'
}], ['path', {
  d: 'M2.5 13 5 7c.7-1.3 1.4-2 3-2',
  key: '1hm1gs'
}], ['path', {
  d: 'M21.5 13 19 7c-.7-1.3-1.5-2-3-2',
  key: '1r31ai'
}]];
const Glasses = props => createComponent(Icon$1, mergeProps(props, {
  name: "Glasses",
  iconNode: iconNode$6$
}));
var Glasses$1 = Glasses;

const iconNode$6_ = [['path', {
  d: 'M15 21v-4a2 2 0 0 1 2-2h4',
  key: '29t6hq'
}], ['path', {
  d: 'M7 4v2a3 3 0 0 0 3 2h0a2 2 0 0 1 2 2 2 2 0 0 0 4 0 2 2 0 0 1 2-2h3',
  key: '1q8o6e'
}], ['path', {
  d: 'M3 11h2a2 2 0 0 1 2 2v1a2 2 0 0 0 2 2 2 2 0 0 1 2 2v4',
  key: '10po7j'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}]];
const Globe2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Globe2",
  iconNode: iconNode$6_
}));
var Globe2$1 = Globe2;

const iconNode$6Z = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '2',
  y1: '12',
  x2: '22',
  y2: '12',
  key: 'zvmn4p'
}], ['path', {
  d: 'M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z',
  key: 'nb9nel'
}]];
const Globe = props => createComponent(Icon$1, mergeProps(props, {
  name: "Globe",
  iconNode: iconNode$6Z
}));
var Globe$1 = Globe;

const iconNode$6Y = [['path', {
  d: 'M18 11.5V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1.4',
  key: 'n5nng'
}], ['path', {
  d: 'M14 10V8a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v2',
  key: '185i9d'
}], ['path', {
  d: 'M10 9.9V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v5',
  key: '11pz95'
}], ['path', {
  d: 'M6 14v0a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0',
  key: '16yk7l'
}], ['path', {
  d: 'M18 11v0a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0',
  key: 'nzvb1c'
}]];
const Grab = props => createComponent(Icon$1, mergeProps(props, {
  name: "Grab",
  iconNode: iconNode$6Y
}));
var Grab$1 = Grab;

const iconNode$6X = [['path', {
  d: 'M22 10v6M2 10l10-5 10 5-10 5z',
  key: '1ef52a'
}], ['path', {
  d: 'M6 12v5c3 3 9 3 12 0v-5',
  key: '1f75yj'
}]];
const GraduationCap = props => createComponent(Icon$1, mergeProps(props, {
  name: "GraduationCap",
  iconNode: iconNode$6X
}));
var GraduationCap$1 = GraduationCap;

const iconNode$6W = [['path', {
  d: 'M22 5V2l-5.89 5.89',
  key: '1eenpo'
}], ['circle', {
  cx: '16.6',
  cy: '15.89',
  r: '3',
  key: 'xjtalx'
}], ['circle', {
  cx: '8.11',
  cy: '7.4',
  r: '3',
  key: 'u2fv6i'
}], ['circle', {
  cx: '12.35',
  cy: '11.65',
  r: '3',
  key: 'i6i8g7'
}], ['circle', {
  cx: '13.91',
  cy: '5.85',
  r: '3',
  key: '6ye0dv'
}], ['circle', {
  cx: '18.15',
  cy: '10.09',
  r: '3',
  key: 'snx9no'
}], ['circle', {
  cx: '6.56',
  cy: '13.2',
  r: '3',
  key: '17x4xg'
}], ['circle', {
  cx: '10.8',
  cy: '17.44',
  r: '3',
  key: '1hogw9'
}], ['circle', {
  cx: '5',
  cy: '19',
  r: '3',
  key: '1sn6vo'
}]];
const Grape = props => createComponent(Icon$1, mergeProps(props, {
  name: "Grape",
  iconNode: iconNode$6W
}));
var Grape$1 = Grape;

const iconNode$6V = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '3',
  y1: '9',
  x2: '21',
  y2: '9',
  key: '1uch6j'
}], ['line', {
  x1: '3',
  y1: '15',
  x2: '21',
  y2: '15',
  key: '1xojw2'
}], ['line', {
  x1: '9',
  y1: '3',
  x2: '9',
  y2: '21',
  key: 'nvcl17'
}], ['line', {
  x1: '15',
  y1: '3',
  x2: '15',
  y2: '21',
  key: 'jcv93v'
}]];
const Grid = props => createComponent(Icon$1, mergeProps(props, {
  name: "Grid",
  iconNode: iconNode$6V
}));
var Grid$1 = Grid;

const iconNode$6U = [['circle', {
  cx: '12',
  cy: '9',
  r: '1',
  key: '124mty'
}], ['circle', {
  cx: '19',
  cy: '9',
  r: '1',
  key: '1ruzo2'
}], ['circle', {
  cx: '5',
  cy: '9',
  r: '1',
  key: '1a8b28'
}], ['circle', {
  cx: '12',
  cy: '15',
  r: '1',
  key: '1e56xg'
}], ['circle', {
  cx: '19',
  cy: '15',
  r: '1',
  key: '1a92ep'
}], ['circle', {
  cx: '5',
  cy: '15',
  r: '1',
  key: '5r1jwy'
}]];
const GripHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "GripHorizontal",
  iconNode: iconNode$6U
}));
var GripHorizontal$1 = GripHorizontal;

const iconNode$6T = [['circle', {
  cx: '9',
  cy: '12',
  r: '1',
  key: '1vctgf'
}], ['circle', {
  cx: '9',
  cy: '5',
  r: '1',
  key: 'hp0tcf'
}], ['circle', {
  cx: '9',
  cy: '19',
  r: '1',
  key: 'fkjjf6'
}], ['circle', {
  cx: '15',
  cy: '12',
  r: '1',
  key: '1tmaij'
}], ['circle', {
  cx: '15',
  cy: '5',
  r: '1',
  key: '19l28e'
}], ['circle', {
  cx: '15',
  cy: '19',
  r: '1',
  key: 'f4zoj3'
}]];
const GripVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "GripVertical",
  iconNode: iconNode$6T
}));
var GripVertical$1 = GripVertical;

const iconNode$6S = [['path', {
  d: 'm15 12-8.5 8.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 0 1 0-3L12 9',
  key: '1afvon'
}], ['path', {
  d: 'M17.64 15 22 10.64',
  key: 'zsji6s'
}], ['path', {
  d: 'm20.91 11.7-1.25-1.25c-.6-.6-.93-1.4-.93-2.25v-.86L16.01 4.6a5.56 5.56 0 0 0-3.94-1.64H9l.92.82A6.18 6.18 0 0 1 12 8.4v1.56l2 2h2.47l2.26 1.91',
  key: 'lehyy1'
}]];
const Hammer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Hammer",
  iconNode: iconNode$6S
}));
var Hammer$1 = Hammer;

const iconNode$6R = [['path', {
  d: 'M18 12.5V10a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1.4',
  key: '7eki13'
}], ['path', {
  d: 'M14 11V9a2 2 0 1 0-4 0v2',
  key: '94qvcw'
}], ['path', {
  d: 'M10 10.5V5a2 2 0 1 0-4 0v9',
  key: 'm1ah89'
}], ['path', {
  d: 'm7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5',
  key: 't1skq1'
}]];
const HandMetal = props => createComponent(Icon$1, mergeProps(props, {
  name: "HandMetal",
  iconNode: iconNode$6R
}));
var HandMetal$1 = HandMetal;

const iconNode$6Q = [['path', {
  d: 'M18 11V6a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0',
  key: 'aigmz7'
}], ['path', {
  d: 'M14 10V4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v2',
  key: '1n6bmn'
}], ['path', {
  d: 'M10 10.5V6a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v8',
  key: 'a9iiix'
}], ['path', {
  d: 'M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15',
  key: '1s1gnw'
}]];
const Hand = props => createComponent(Icon$1, mergeProps(props, {
  name: "Hand",
  iconNode: iconNode$6Q
}));
var Hand$1 = Hand;

const iconNode$6P = [['line', {
  x1: '22',
  y1: '12',
  x2: '2',
  y2: '12',
  key: '3mrjqx'
}], ['path', {
  d: 'M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z',
  key: 'oot6mr'
}], ['line', {
  x1: '6',
  y1: '16',
  x2: '6.01',
  y2: '16',
  key: '17k2t0'
}], ['line', {
  x1: '10',
  y1: '16',
  x2: '10.01',
  y2: '16',
  key: '1oplzg'
}]];
const HardDrive = props => createComponent(Icon$1, mergeProps(props, {
  name: "HardDrive",
  iconNode: iconNode$6P
}));
var HardDrive$1 = HardDrive;

const iconNode$6O = [['path', {
  d: 'M2 18a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v2z',
  key: '1dej2m'
}], ['path', {
  d: 'M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5',
  key: '1p9q5i'
}], ['path', {
  d: 'M4 15v-3a6 6 0 0 1 6-6h0',
  key: '1uc279'
}], ['path', {
  d: 'M14 6h0a6 6 0 0 1 6 6v3',
  key: '1j9mnm'
}]];
const HardHat = props => createComponent(Icon$1, mergeProps(props, {
  name: "HardHat",
  iconNode: iconNode$6O
}));
var HardHat$1 = HardHat;

const iconNode$6N = [['line', {
  x1: '4',
  y1: '9',
  x2: '20',
  y2: '9',
  key: 'vg9vz1'
}], ['line', {
  x1: '4',
  y1: '15',
  x2: '20',
  y2: '15',
  key: '12vs86'
}], ['line', {
  x1: '10',
  y1: '3',
  x2: '8',
  y2: '21',
  key: '18wc2u'
}], ['line', {
  x1: '16',
  y1: '3',
  x2: '14',
  y2: '21',
  key: 'ohqwl5'
}]];
const Hash = props => createComponent(Icon$1, mergeProps(props, {
  name: "Hash",
  iconNode: iconNode$6N
}));
var Hash$1 = Hash;

const iconNode$6M = [['path', {
  d: 'm5.2 6.2 1.4 1.4',
  key: '17imol'
}], ['path', {
  d: 'M2 13h2',
  key: '13gyu8'
}], ['path', {
  d: 'M20 13h2',
  key: '16rner'
}], ['path', {
  d: 'm17.4 7.6 1.4-1.4',
  key: 't4xlah'
}], ['path', {
  d: 'M22 17H2',
  key: '1gtaj3'
}], ['path', {
  d: 'M22 21H2',
  key: '1gy6en'
}], ['path', {
  d: 'M16 13a4 4 0 0 0-8 0',
  key: '1dyczq'
}], ['path', {
  d: 'M12 5V2.5',
  key: '1vytko'
}]];
const Haze = props => createComponent(Icon$1, mergeProps(props, {
  name: "Haze",
  iconNode: iconNode$6M
}));
var Haze$1 = Haze;

const iconNode$6L = [['path', {
  d: 'M4 12h8',
  key: '17cfdx'
}], ['path', {
  d: 'M4 18V6',
  key: '1rz3zl'
}], ['path', {
  d: 'M12 18V6',
  key: 'zqpxq5'
}], ['path', {
  d: 'm17 12 3-2v8',
  key: '1hhhft'
}]];
const Heading1 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading1",
  iconNode: iconNode$6L
}));
var Heading1$1 = Heading1;

const iconNode$6K = [['path', {
  d: 'M4 12h8',
  key: '17cfdx'
}], ['path', {
  d: 'M4 18V6',
  key: '1rz3zl'
}], ['path', {
  d: 'M12 18V6',
  key: 'zqpxq5'
}], ['path', {
  d: 'M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1',
  key: '9jr5yi'
}]];
const Heading2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading2",
  iconNode: iconNode$6K
}));
var Heading2$1 = Heading2;

const iconNode$6J = [['path', {
  d: 'M4 12h8',
  key: '17cfdx'
}], ['path', {
  d: 'M4 18V6',
  key: '1rz3zl'
}], ['path', {
  d: 'M12 18V6',
  key: 'zqpxq5'
}], ['path', {
  d: 'M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2',
  key: '68ncm8'
}], ['path', {
  d: 'M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2',
  key: '1ejuhz'
}]];
const Heading3 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading3",
  iconNode: iconNode$6J
}));
var Heading3$1 = Heading3;

const iconNode$6I = [['path', {
  d: 'M4 12h8',
  key: '17cfdx'
}], ['path', {
  d: 'M4 18V6',
  key: '1rz3zl'
}], ['path', {
  d: 'M12 18V6',
  key: 'zqpxq5'
}], ['path', {
  d: 'M17 10v4h4',
  key: '13sv97'
}], ['path', {
  d: 'M21 10v8',
  key: '1kdml4'
}]];
const Heading4 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading4",
  iconNode: iconNode$6I
}));
var Heading4$1 = Heading4;

const iconNode$6H = [['path', {
  d: 'M4 12h8',
  key: '17cfdx'
}], ['path', {
  d: 'M4 18V6',
  key: '1rz3zl'
}], ['path', {
  d: 'M12 18V6',
  key: 'zqpxq5'
}], ['path', {
  d: 'M17 13v-3h4',
  key: '1nvgqp'
}], ['path', {
  d: 'M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17',
  key: '2nebdn'
}]];
const Heading5 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading5",
  iconNode: iconNode$6H
}));
var Heading5$1 = Heading5;

const iconNode$6G = [['path', {
  d: 'M4 12h8',
  key: '17cfdx'
}], ['path', {
  d: 'M4 18V6',
  key: '1rz3zl'
}], ['path', {
  d: 'M12 18V6',
  key: 'zqpxq5'
}], ['circle', {
  cx: '19',
  cy: '16',
  r: '2',
  key: '15mx69'
}], ['path', {
  d: 'M20 10c-2 2-3 3.5-3 6',
  key: 'f35dl0'
}]];
const Heading6 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading6",
  iconNode: iconNode$6G
}));
var Heading6$1 = Heading6;

const iconNode$6F = [['path', {
  d: 'M6 12h12',
  key: '8npq4p'
}], ['path', {
  d: 'M6 20V4',
  key: '1w1bmo'
}], ['path', {
  d: 'M18 20V4',
  key: 'o2hl4u'
}]];
const Heading = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heading",
  iconNode: iconNode$6F
}));
var Heading$1 = Heading;

const iconNode$6E = [['path', {
  d: 'M3 18v-6a9 9 0 0 1 18 0v6',
  key: 'e2ovd'
}], ['path', {
  d: 'M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z',
  key: '110y4r'
}]];
const Headphones = props => createComponent(Icon$1, mergeProps(props, {
  name: "Headphones",
  iconNode: iconNode$6E
}));
var Headphones$1 = Headphones;

const iconNode$6D = [['path', {
  d: 'M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z',
  key: '3q7jk9'
}], ['path', {
  d: 'm12 13-1-1 2-2-3-2.5 2.77-2.92',
  key: '5oba2v'
}]];
const HeartCrack = props => createComponent(Icon$1, mergeProps(props, {
  name: "HeartCrack",
  iconNode: iconNode$6D
}));
var HeartCrack$1 = HeartCrack;

const iconNode$6C = [['path', {
  d: 'M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z',
  key: '3q7jk9'
}], ['path', {
  d: 'M12 5.36 8.87 8.5a2.13 2.13 0 0 0 0 3h0a2.13 2.13 0 0 0 3 0l2.26-2.21a3 3 0 0 1 4.22 0l2.4 2.4',
  key: 't2xyyg'
}], ['path', {
  d: 'm18 15-2-2',
  key: '60u0ii'
}], ['path', {
  d: 'm15 18-2-2',
  key: '6p76be'
}]];
const HeartHandshake = props => createComponent(Icon$1, mergeProps(props, {
  name: "HeartHandshake",
  iconNode: iconNode$6C
}));
var HeartHandshake$1 = HeartHandshake;

const iconNode$6B = [['path', {
  d: 'M4.12 4.107a5.4 5.4 0 0 0-.538.473C1.46 6.7 1.33 10.28 4 13l8 8 4.5-4.5',
  key: 'yskeks'
}], ['path', {
  d: 'M19.328 13.672 20 13c2.67-2.72 2.54-6.3.42-8.42a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-2.386-1.393',
  key: '1340qr'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const HeartOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "HeartOff",
  iconNode: iconNode$6B
}));
var HeartOff$1 = HeartOff;

const iconNode$6A = [['path', {
  d: 'M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z',
  key: '3q7jk9'
}], ['path', {
  d: 'M3.5 12h6l.5-1 2 4.5 2-7 1.5 3.5h5',
  key: 'rc0z4z'
}]];
const HeartPulse = props => createComponent(Icon$1, mergeProps(props, {
  name: "HeartPulse",
  iconNode: iconNode$6A
}));
var HeartPulse$1 = HeartPulse;

const iconNode$6z = [['path', {
  d: 'M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z',
  key: '3q7jk9'
}]];
const Heart = props => createComponent(Icon$1, mergeProps(props, {
  name: "Heart",
  iconNode: iconNode$6z
}));
var Heart$1 = Heart;

const iconNode$6y = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3',
  key: '1u773s'
}], ['line', {
  x1: '12',
  y1: '17',
  x2: '12.01',
  y2: '17',
  key: 'kdstpg'
}]];
const HelpCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "HelpCircle",
  iconNode: iconNode$6y
}));
var HelpCircle$1 = HelpCircle;

const iconNode$6x = [['path', {
  d: 'M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z',
  key: 'yt0hxn'
}]];
const Hexagon = props => createComponent(Icon$1, mergeProps(props, {
  name: "Hexagon",
  iconNode: iconNode$6x
}));
var Hexagon$1 = Hexagon;

const iconNode$6w = [['path', {
  d: 'm9 11-6 6v3h9l3-3',
  key: '1a3l36'
}], ['path', {
  d: 'm22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4',
  key: '14a9rk'
}]];
const Highlighter = props => createComponent(Icon$1, mergeProps(props, {
  name: "Highlighter",
  iconNode: iconNode$6w
}));
var Highlighter$1 = Highlighter;

const iconNode$6v = [['path', {
  d: 'M3 3v5h5',
  key: '1xhq8a'
}], ['path', {
  d: 'M3.05 13A9 9 0 1 0 6 5.3L3 8',
  key: '1xoms2'
}], ['path', {
  d: 'M12 7v5l4 2',
  key: '1fdv2h'
}]];
const History = props => createComponent(Icon$1, mergeProps(props, {
  name: "History",
  iconNode: iconNode$6v
}));
var History$1 = History;

const iconNode$6u = [['path', {
  d: 'm3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z',
  key: 'y5dka4'
}], ['polyline', {
  points: '9 22 9 12 15 12 15 22',
  key: 'e2us08'
}]];
const Home = props => createComponent(Icon$1, mergeProps(props, {
  name: "Home",
  iconNode: iconNode$6u
}));
var Home$1 = Home;

const iconNode$6t = [['path', {
  d: 'M17.5 5.5C19 7 20.5 9 21 11c-1.323.265-2.646.39-4.118.226',
  key: '10j95a'
}], ['path', {
  d: 'M5.5 17.5C7 19 9 20.5 11 21c.5-2.5.5-5-1-8.5',
  key: '1mqyjd'
}], ['path', {
  d: 'M17.5 17.5c-2.5 0-4 0-6-1',
  key: '11elt5'
}], ['path', {
  d: 'M20 11.5c1 1.5 2 3.5 2 4.5',
  key: '13ezvz'
}], ['path', {
  d: 'M11.5 20c1.5 1 3.5 2 4.5 2 .5-1.5 0-3-.5-4.5',
  key: '1ufrz1'
}], ['path', {
  d: 'M22 22c-2 0-3.5-.5-5.5-1.5',
  key: '1n8vbj'
}], ['path', {
  d: 'M4.783 4.782C1.073 8.492 1 14.5 5 18c1-1 2-4.5 1.5-6.5 1.5 1 4 1 5.5.5M8.227 2.57C11.578 1.335 15.453 2.089 18 5c-.88.88-3.7 1.761-5.726 1.618',
  key: '1h85u8'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const HopOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "HopOff",
  iconNode: iconNode$6t
}));
var HopOff$1 = HopOff;

const iconNode$6s = [['path', {
  d: 'M17.5 5.5C19 7 20.5 9 21 11c-2.5.5-5 .5-8.5-1',
  key: 'l0z2za'
}], ['path', {
  d: 'M5.5 17.5C7 19 9 20.5 11 21c.5-2.5.5-5-1-8.5',
  key: '1mqyjd'
}], ['path', {
  d: 'M16.5 11.5c1 2 1 3.5 1 6-2.5 0-4 0-6-1',
  key: '10xoad'
}], ['path', {
  d: 'M20 11.5c1 1.5 2 3.5 2 4.5-1.5.5-3 0-4.5-.5',
  key: '1a4gpx'
}], ['path', {
  d: 'M11.5 20c1.5 1 3.5 2 4.5 2 .5-1.5 0-3-.5-4.5',
  key: '1ufrz1'
}], ['path', {
  d: 'M20.5 16.5c1 2 1.5 3.5 1.5 5.5-2 0-3.5-.5-5.5-1.5',
  key: '1ok5d2'
}], ['path', {
  d: 'M4.783 4.782C8.493 1.072 14.5 1 18 5c-1 1-4.5 2-6.5 1.5 1 1.5 1 4 .5 5.5-1.5.5-4 .5-5.5-.5C7 13.5 6 17 5 18c-4-3.5-3.927-9.508-.217-13.218Z',
  key: '8hlroy'
}], ['path', {
  d: 'M4.5 4.5 3 3c-.184-.185-.184-.816 0-1',
  key: 'q3aj97'
}]];
const Hop = props => createComponent(Icon$1, mergeProps(props, {
  name: "Hop",
  iconNode: iconNode$6s
}));
var Hop$1 = Hop;

const iconNode$6r = [['path', {
  d: 'M5 22h14',
  key: 'ehvnwv'
}], ['path', {
  d: 'M5 2h14',
  key: 'pdyrp9'
}], ['path', {
  d: 'M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22',
  key: '1d314k'
}], ['path', {
  d: 'M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2',
  key: '1vvvr6'
}]];
const Hourglass = props => createComponent(Icon$1, mergeProps(props, {
  name: "Hourglass",
  iconNode: iconNode$6r
}));
var Hourglass$1 = Hourglass;

const iconNode$6q = [['path', {
  d: 'M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6Zm-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0',
  key: 'g86ewz'
}], ['path', {
  d: 'M12.14 11a3.5 3.5 0 1 1 6.71 0',
  key: '4k3m1s'
}], ['path', {
  d: 'M15.5 6.5a3.5 3.5 0 1 0-7 0',
  key: 'zmuahr'
}]];
const IceCream2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "IceCream2",
  iconNode: iconNode$6q
}));
var IceCream2$1 = IceCream2;

const iconNode$6p = [['path', {
  d: 'm7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11',
  key: '1v6356'
}], ['path', {
  d: 'M17 7A5 5 0 0 0 7 7',
  key: '151p3v'
}], ['path', {
  d: 'M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4',
  key: '1sdaij'
}]];
const IceCream = props => createComponent(Icon$1, mergeProps(props, {
  name: "IceCream",
  iconNode: iconNode$6p
}));
var IceCream$1 = IceCream;

const iconNode$6o = [['path', {
  d: 'M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7',
  key: 'm87ecr'
}], ['line', {
  x1: '16',
  y1: '5',
  x2: '22',
  y2: '5',
  key: 'c5ve4s'
}], ['circle', {
  cx: '9',
  cy: '9',
  r: '2',
  key: 'af1f0g'
}], ['path', {
  d: 'm21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21',
  key: '1xmnt7'
}]];
const ImageMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "ImageMinus",
  iconNode: iconNode$6o
}));
var ImageMinus$1 = ImageMinus;

const iconNode$6n = [['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}], ['path', {
  d: 'M10.41 10.41a2 2 0 1 1-2.83-2.83',
  key: '1bzlo9'
}], ['line', {
  x1: '13.5',
  y1: '13.5',
  x2: '6',
  y2: '21',
  key: '1oc4ns'
}], ['line', {
  x1: '18',
  y1: '12',
  x2: '21',
  y2: '15',
  key: '1j50dh'
}], ['path', {
  d: 'M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59',
  key: 'mmje98'
}], ['path', {
  d: 'M21 15V5a2 2 0 0 0-2-2H9',
  key: '43el77'
}]];
const ImageOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "ImageOff",
  iconNode: iconNode$6n
}));
var ImageOff$1 = ImageOff;

const iconNode$6m = [['path', {
  d: 'M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7',
  key: '31hg93'
}], ['line', {
  x1: '16',
  y1: '5',
  x2: '22',
  y2: '5',
  key: 'c5ve4s'
}], ['line', {
  x1: '19',
  y1: '2',
  x2: '19',
  y2: '8',
  key: '12oc9j'
}], ['circle', {
  cx: '9',
  cy: '9',
  r: '2',
  key: 'af1f0g'
}], ['path', {
  d: 'm21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21',
  key: '1xmnt7'
}]];
const ImagePlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "ImagePlus",
  iconNode: iconNode$6m
}));
var ImagePlus$1 = ImagePlus;

const iconNode$6l = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['circle', {
  cx: '9',
  cy: '9',
  r: '2',
  key: 'af1f0g'
}], ['path', {
  d: 'm21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21',
  key: '1xmnt7'
}]];
const Image = props => createComponent(Icon$1, mergeProps(props, {
  name: "Image",
  iconNode: iconNode$6l
}));
var Image$1 = Image;

const iconNode$6k = [['path', {
  d: 'M12 3v12',
  key: '1x0j5s'
}], ['path', {
  d: 'm8 11 4 4 4-4',
  key: '1dohi6'
}], ['path', {
  d: 'M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4',
  key: '1ywtjm'
}]];
const Import = props => createComponent(Icon$1, mergeProps(props, {
  name: "Import",
  iconNode: iconNode$6k
}));
var Import$1 = Import;

const iconNode$6j = [['polyline', {
  points: '22 12 16 12 14 15 10 15 8 12 2 12',
  key: 'o97t9d'
}], ['path', {
  d: 'M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z',
  key: 'oot6mr'
}]];
const Inbox = props => createComponent(Icon$1, mergeProps(props, {
  name: "Inbox",
  iconNode: iconNode$6j
}));
var Inbox$1 = Inbox;

const iconNode$6i = [['polyline', {
  points: '3 8 7 12 3 16',
  key: 'f3rxhf'
}], ['line', {
  x1: '21',
  y1: '12',
  x2: '11',
  y2: '12',
  key: '1xy73i'
}], ['line', {
  x1: '21',
  y1: '6',
  x2: '11',
  y2: '6',
  key: '97xvqg'
}], ['line', {
  x1: '21',
  y1: '18',
  x2: '11',
  y2: '18',
  key: '1r7j8g'
}]];
const Indent = props => createComponent(Icon$1, mergeProps(props, {
  name: "Indent",
  iconNode: iconNode$6i
}));
var Indent$1 = Indent;

const iconNode$6h = [['path', {
  d: 'M6 3h12',
  key: 'ggurg9'
}], ['path', {
  d: 'M6 8h12',
  key: '6g4wlu'
}], ['path', {
  d: 'm6 13 8.5 8',
  key: 'u1kupk'
}], ['path', {
  d: 'M6 13h3',
  key: 'wdp6ag'
}], ['path', {
  d: 'M9 13c6.667 0 6.667-10 0-10',
  key: '1nkvk2'
}]];
const IndianRupee = props => createComponent(Icon$1, mergeProps(props, {
  name: "IndianRupee",
  iconNode: iconNode$6h
}));
var IndianRupee$1 = IndianRupee;

const iconNode$6g = [['path', {
  d: 'M18.178 8c5.096 0 5.096 8 0 8-5.095 0-7.133-8-12.739-8-4.585 0-4.585 8 0 8 5.606 0 7.644-8 12.74-8z',
  key: '13d65y'
}]];
const Infinity = props => createComponent(Icon$1, mergeProps(props, {
  name: "Infinity",
  iconNode: iconNode$6g
}));
var Infinity$1 = Infinity;

const iconNode$6f = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '12',
  y1: '16',
  x2: '12',
  y2: '12',
  key: 'dkqlv3'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12.01',
  y2: '8',
  key: '1kl4hv'
}]];
const Info = props => createComponent(Icon$1, mergeProps(props, {
  name: "Info",
  iconNode: iconNode$6f
}));
var Info$1 = Info;

const iconNode$6e = [['path', {
  d: 'M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6',
  key: '14rsvq'
}], ['path', {
  d: 'm12 12 4 10 1.7-4.3L22 16Z',
  key: '64ilsv'
}]];
const Inspect = props => createComponent(Icon$1, mergeProps(props, {
  name: "Inspect",
  iconNode: iconNode$6e
}));
var Inspect$1 = Inspect;

const iconNode$6d = [['rect', {
  x: '2',
  y: '2',
  width: '20',
  height: '20',
  rx: '5',
  ry: '5',
  key: 'cdfzoc'
}], ['path', {
  d: 'M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z',
  key: '9exkf1'
}], ['line', {
  x1: '17.5',
  y1: '6.5',
  x2: '17.51',
  y2: '6.5',
  key: '643fve'
}]];
const Instagram = props => createComponent(Icon$1, mergeProps(props, {
  name: "Instagram",
  iconNode: iconNode$6d
}));
var Instagram$1 = Instagram;

const iconNode$6c = [['line', {
  x1: '19',
  y1: '4',
  x2: '10',
  y2: '4',
  key: 'ohvhe'
}], ['line', {
  x1: '14',
  y1: '20',
  x2: '5',
  y2: '20',
  key: 'pl6qj'
}], ['line', {
  x1: '15',
  y1: '4',
  x2: '9',
  y2: '20',
  key: 'baf5vk'
}]];
const Italic = props => createComponent(Icon$1, mergeProps(props, {
  name: "Italic",
  iconNode: iconNode$6c
}));
var Italic$1 = Italic;

const iconNode$6b = [['path', {
  d: 'M12 9.5V21m0-11.5L6 3m6 6.5L18 3',
  key: '2ej80x'
}], ['path', {
  d: 'M6 15h12',
  key: '1hwgt5'
}], ['path', {
  d: 'M6 11h12',
  key: 'wf4gp6'
}]];
const JapaneseYen = props => createComponent(Icon$1, mergeProps(props, {
  name: "JapaneseYen",
  iconNode: iconNode$6b
}));
var JapaneseYen$1 = JapaneseYen;

const iconNode$6a = [['path', {
  d: 'M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z',
  key: 'jg2n2t'
}], ['path', {
  d: 'M6 15v-2',
  key: 'gd6mvg'
}], ['path', {
  d: 'M12 15V9',
  key: '8c7uyn'
}], ['circle', {
  cx: '12',
  cy: '6',
  r: '3',
  key: '1gm2ql'
}]];
const Joystick = props => createComponent(Icon$1, mergeProps(props, {
  name: "Joystick",
  iconNode: iconNode$6a
}));
var Joystick$1 = Joystick;

const iconNode$69 = [['path', {
  d: 'm21 2-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0 3 3L22 7l-3-3m-3.5 3.5L19 4',
  key: '1b7wfm'
}]];
const Key = props => createComponent(Icon$1, mergeProps(props, {
  name: "Key",
  iconNode: iconNode$69
}));
var Key$1 = Key;

const iconNode$68 = [['rect', {
  x: '2',
  y: '4',
  width: '20',
  height: '16',
  rx: '2',
  ry: '2',
  key: 'xgg3gf'
}], ['path', {
  d: 'M6 8h.001',
  key: '1ej0i3'
}], ['path', {
  d: 'M10 8h.001',
  key: '1x2st2'
}], ['path', {
  d: 'M14 8h.001',
  key: '1vkmyp'
}], ['path', {
  d: 'M18 8h.001',
  key: 'kfsenl'
}], ['path', {
  d: 'M8 12h.001',
  key: '1sjpby'
}], ['path', {
  d: 'M12 12h.001',
  key: 'al75ts'
}], ['path', {
  d: 'M16 12h.001',
  key: '931bgk'
}], ['path', {
  d: 'M7 16h10',
  key: 'wp8him'
}]];
const Keyboard = props => createComponent(Icon$1, mergeProps(props, {
  name: "Keyboard",
  iconNode: iconNode$68
}));
var Keyboard$1 = Keyboard;

const iconNode$67 = [['path', {
  d: 'M12 2v5',
  key: 'nd4vlx'
}], ['path', {
  d: 'M6 7h12l4 9H2l4-9Z',
  key: '123d64'
}], ['path', {
  d: 'M9.17 16a3 3 0 1 0 5.66 0',
  key: '1061mw'
}]];
const LampCeiling = props => createComponent(Icon$1, mergeProps(props, {
  name: "LampCeiling",
  iconNode: iconNode$67
}));
var LampCeiling$1 = LampCeiling;

const iconNode$66 = [['path', {
  d: 'm14 5-3 3 2 7 8-8-7-2Z',
  key: '1b0msb'
}], ['path', {
  d: 'm14 5-3 3-3-3 3-3 3 3Z',
  key: '1uemms'
}], ['path', {
  d: 'M9.5 6.5 4 12l3 6',
  key: '1bx08v'
}], ['path', {
  d: 'M3 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H3Z',
  key: 'wap775'
}]];
const LampDesk = props => createComponent(Icon$1, mergeProps(props, {
  name: "LampDesk",
  iconNode: iconNode$66
}));
var LampDesk$1 = LampDesk;

const iconNode$65 = [['path', {
  d: 'M9 2h6l3 7H6l3-7Z',
  key: 'wcx6mj'
}], ['path', {
  d: 'M12 9v13',
  key: '3n1su1'
}], ['path', {
  d: 'M9 22h6',
  key: '1rlq3v'
}]];
const LampFloor = props => createComponent(Icon$1, mergeProps(props, {
  name: "LampFloor",
  iconNode: iconNode$65
}));
var LampFloor$1 = LampFloor;

const iconNode$64 = [['path', {
  d: 'M11 13h6l3 7H8l3-7Z',
  key: '9n3qlo'
}], ['path', {
  d: 'M14 13V8a2 2 0 0 0-2-2H8',
  key: '1hu4hb'
}], ['path', {
  d: 'M4 9h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H4v6Z',
  key: 's053bc'
}]];
const LampWallDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "LampWallDown",
  iconNode: iconNode$64
}));
var LampWallDown$1 = LampWallDown;

const iconNode$63 = [['path', {
  d: 'M11 4h6l3 7H8l3-7Z',
  key: '11x1ee'
}], ['path', {
  d: 'M14 11v5a2 2 0 0 1-2 2H8',
  key: 'eutp5o'
}], ['path', {
  d: 'M4 15h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H4v-6Z',
  key: '1iuthr'
}]];
const LampWallUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "LampWallUp",
  iconNode: iconNode$63
}));
var LampWallUp$1 = LampWallUp;

const iconNode$62 = [['path', {
  d: 'M8 2h8l4 10H4L8 2Z',
  key: '9dma5w'
}], ['path', {
  d: 'M12 12v6',
  key: '3ahymv'
}], ['path', {
  d: 'M8 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H8Z',
  key: 'mwf4oh'
}]];
const Lamp = props => createComponent(Icon$1, mergeProps(props, {
  name: "Lamp",
  iconNode: iconNode$62
}));
var Lamp$1 = Lamp;

const iconNode$61 = [['line', {
  x1: '3',
  y1: '22',
  x2: '21',
  y2: '22',
  key: '1mkv49'
}], ['line', {
  x1: '6',
  y1: '18',
  x2: '6',
  y2: '11',
  key: 'shpxqa'
}], ['line', {
  x1: '10',
  y1: '18',
  x2: '10',
  y2: '11',
  key: '6quq76'
}], ['line', {
  x1: '14',
  y1: '18',
  x2: '14',
  y2: '11',
  key: 'qxd7vm'
}], ['line', {
  x1: '18',
  y1: '18',
  x2: '18',
  y2: '11',
  key: '1m478d'
}], ['polygon', {
  points: '12 2 20 7 4 7',
  key: 'jkujk7'
}]];
const Landmark = props => createComponent(Icon$1, mergeProps(props, {
  name: "Landmark",
  iconNode: iconNode$61
}));
var Landmark$1 = Landmark;

const iconNode$60 = [['path', {
  d: 'm5 8 6 6',
  key: '1wu5hv'
}], ['path', {
  d: 'm4 14 6-6 2-3',
  key: '1k1g8d'
}], ['path', {
  d: 'M2 5h12',
  key: 'or177f'
}], ['path', {
  d: 'M7 2h1',
  key: '1t2jsx'
}], ['path', {
  d: 'm22 22-5-10-5 10',
  key: 'don7ne'
}], ['path', {
  d: 'M14 18h6',
  key: '1m8k6r'
}]];
const Languages = props => createComponent(Icon$1, mergeProps(props, {
  name: "Languages",
  iconNode: iconNode$60
}));
var Languages$1 = Languages;

const iconNode$5$ = [['rect', {
  x: '3',
  y: '4',
  width: '18',
  height: '12',
  rx: '2',
  ry: '2',
  key: '8tl1gx'
}], ['line', {
  x1: '2',
  y1: '20',
  x2: '22',
  y2: '20',
  key: '1pxzem'
}]];
const Laptop2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Laptop2",
  iconNode: iconNode$5$
}));
var Laptop2$1 = Laptop2;

const iconNode$5_ = [['path', {
  d: 'M20 16V7a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9m16 0H4m16 0 1.28 2.55a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45L4 16',
  key: 'tarvll'
}]];
const Laptop = props => createComponent(Icon$1, mergeProps(props, {
  name: "Laptop",
  iconNode: iconNode$5_
}));
var Laptop$1 = Laptop;

const iconNode$5Z = [['path', {
  d: 'M7 22a5 5 0 0 1-2-4',
  key: 'umushi'
}], ['path', {
  d: 'M7 16.93c.96.43 1.96.74 2.99.91',
  key: 'ybbtv3'
}], ['path', {
  d: 'M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2',
  key: 'gt5e1w'
}], ['path', {
  d: 'M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z',
  key: 'bq3ynw'
}], ['path', {
  d: 'M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14v0z',
  key: '1bawls'
}]];
const LassoSelect = props => createComponent(Icon$1, mergeProps(props, {
  name: "LassoSelect",
  iconNode: iconNode$5Z
}));
var LassoSelect$1 = LassoSelect;

const iconNode$5Y = [['path', {
  d: 'M7 22a5 5 0 0 1-2-4',
  key: 'umushi'
}], ['path', {
  d: 'M3.3 14A6.8 6.8 0 0 1 2 10c0-4.4 4.5-8 10-8s10 3.6 10 8-4.5 8-10 8a12 12 0 0 1-5-1',
  key: '146dds'
}], ['path', {
  d: 'M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z',
  key: 'bq3ynw'
}]];
const Lasso = props => createComponent(Icon$1, mergeProps(props, {
  name: "Lasso",
  iconNode: iconNode$5Y
}));
var Lasso$1 = Lasso;

const iconNode$5X = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z',
  key: 'b2q4dd'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '9.01',
  y2: '9',
  key: '141aaf'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '15.01',
  y2: '9',
  key: '1cyg3o'
}]];
const Laugh = props => createComponent(Icon$1, mergeProps(props, {
  name: "Laugh",
  iconNode: iconNode$5X
}));
var Laugh$1 = Laugh;

const iconNode$5W = [['polygon', {
  points: '12 2 2 7 12 12 22 7 12 2',
  key: '1b0ttc'
}], ['polyline', {
  points: '2 17 12 22 22 17',
  key: 'imjtdl'
}], ['polyline', {
  points: '2 12 12 17 22 12',
  key: '5dexcv'
}]];
const Layers = props => createComponent(Icon$1, mergeProps(props, {
  name: "Layers",
  iconNode: iconNode$5W
}));
var Layers$1 = Layers;

const iconNode$5V = [['rect', {
  x: '3',
  y: '3',
  width: '7',
  height: '9',
  key: '1eurd7'
}], ['rect', {
  x: '14',
  y: '3',
  width: '7',
  height: '5',
  key: 'zff5ux'
}], ['rect', {
  x: '14',
  y: '12',
  width: '7',
  height: '9',
  key: '1oiq0r'
}], ['rect', {
  x: '3',
  y: '16',
  width: '7',
  height: '5',
  key: '1145ac'
}]];
const LayoutDashboard = props => createComponent(Icon$1, mergeProps(props, {
  name: "LayoutDashboard",
  iconNode: iconNode$5V
}));
var LayoutDashboard$1 = LayoutDashboard;

const iconNode$5U = [['rect', {
  x: '3',
  y: '3',
  width: '7',
  height: '7',
  key: '1q9d4d'
}], ['rect', {
  x: '14',
  y: '3',
  width: '7',
  height: '7',
  key: '1kofyi'
}], ['rect', {
  x: '14',
  y: '14',
  width: '7',
  height: '7',
  key: '18jxcw'
}], ['rect', {
  x: '3',
  y: '14',
  width: '7',
  height: '7',
  key: '1omegr'
}]];
const LayoutGrid = props => createComponent(Icon$1, mergeProps(props, {
  name: "LayoutGrid",
  iconNode: iconNode$5U
}));
var LayoutGrid$1 = LayoutGrid;

const iconNode$5T = [['rect', {
  x: '3',
  y: '14',
  width: '7',
  height: '7',
  key: '1omegr'
}], ['rect', {
  x: '3',
  y: '3',
  width: '7',
  height: '7',
  key: '1q9d4d'
}], ['line', {
  x1: '14',
  y1: '4',
  x2: '21',
  y2: '4',
  key: '1klf7b'
}], ['line', {
  x1: '14',
  y1: '9',
  x2: '21',
  y2: '9',
  key: '1kf9x0'
}], ['line', {
  x1: '14',
  y1: '15',
  x2: '21',
  y2: '15',
  key: 's6i7v1'
}], ['line', {
  x1: '14',
  y1: '20',
  x2: '21',
  y2: '20',
  key: 'yxpbil'
}]];
const LayoutList = props => createComponent(Icon$1, mergeProps(props, {
  name: "LayoutList",
  iconNode: iconNode$5T
}));
var LayoutList$1 = LayoutList;

const iconNode$5S = [['path', {
  d: 'M21 3H3v7h18V3z',
  key: 'cq2tmr'
}], ['path', {
  d: 'M21 14h-5v7h5v-7z',
  key: '1dv32i'
}], ['path', {
  d: 'M12 14H3v7h9v-7z',
  key: '1k92lm'
}]];
const LayoutTemplate = props => createComponent(Icon$1, mergeProps(props, {
  name: "LayoutTemplate",
  iconNode: iconNode$5S
}));
var LayoutTemplate$1 = LayoutTemplate;

const iconNode$5R = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '3',
  y1: '9',
  x2: '21',
  y2: '9',
  key: '1uch6j'
}], ['line', {
  x1: '9',
  y1: '21',
  x2: '9',
  y2: '9',
  key: '97zt75'
}]];
const Layout = props => createComponent(Icon$1, mergeProps(props, {
  name: "Layout",
  iconNode: iconNode$5R
}));
var Layout$1 = Layout;

const iconNode$5Q = [['path', {
  d: 'M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z',
  key: 'nnexq3'
}], ['path', {
  d: 'M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12',
  key: 'mt58a7'
}]];
const Leaf = props => createComponent(Icon$1, mergeProps(props, {
  name: "Leaf",
  iconNode: iconNode$5Q
}));
var Leaf$1 = Leaf;

const iconNode$5P = [['path', {
  d: 'm16 6 4 14',
  key: 'ji33uf'
}], ['path', {
  d: 'M12 6v14',
  key: '1n7gus'
}], ['path', {
  d: 'M8 8v12',
  key: '1gg7y9'
}], ['path', {
  d: 'M4 4v16',
  key: '6qkkli'
}]];
const Library = props => createComponent(Icon$1, mergeProps(props, {
  name: "Library",
  iconNode: iconNode$5P
}));
var Library$1 = Library;

const iconNode$5O = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '4',
  key: '4exip2'
}], ['line', {
  x1: '4.93',
  y1: '4.93',
  x2: '9.17',
  y2: '9.17',
  key: '1akcti'
}], ['line', {
  x1: '14.83',
  y1: '14.83',
  x2: '19.07',
  y2: '19.07',
  key: 'js56sr'
}], ['line', {
  x1: '14.83',
  y1: '9.17',
  x2: '19.07',
  y2: '4.93',
  key: 'ca9a8b'
}], ['line', {
  x1: '14.83',
  y1: '9.17',
  x2: '18.36',
  y2: '5.64',
  key: 'dsbuwx'
}], ['line', {
  x1: '4.93',
  y1: '19.07',
  x2: '9.17',
  y2: '14.83',
  key: '1lkv3n'
}]];
const LifeBuoy = props => createComponent(Icon$1, mergeProps(props, {
  name: "LifeBuoy",
  iconNode: iconNode$5O
}));
var LifeBuoy$1 = LifeBuoy;

const iconNode$5N = [['path', {
  d: 'M9 18h6',
  key: 'x1upvd'
}], ['path', {
  d: 'M10 22h4',
  key: 'ceow96'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}], ['path', {
  d: 'M9 2.804A6 6 0 0 1 18 8a4.65 4.65 0 0 1-1.03 3',
  key: '1v6krz'
}], ['path', {
  d: 'M8.91 14a4.61 4.61 0 0 0-1.41-2.5C6.23 10.23 6 9 6 8a6 6 0 0 1 .084-1',
  key: '1jxmct'
}]];
const LightbulbOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "LightbulbOff",
  iconNode: iconNode$5N
}));
var LightbulbOff$1 = LightbulbOff;

const iconNode$5M = [['line', {
  x1: '9',
  y1: '18',
  x2: '15',
  y2: '18',
  key: 'poumom'
}], ['line', {
  x1: '10',
  y1: '22',
  x2: '14',
  y2: '22',
  key: '1oekqc'
}], ['path', {
  d: 'M15.09 14c.18-.98.65-1.74 1.41-2.5A4.65 4.65 0 0 0 18 8 6 6 0 0 0 6 8c0 1 .23 2.23 1.5 3.5A4.61 4.61 0 0 1 8.91 14',
  key: 'a9yf0y'
}]];
const Lightbulb = props => createComponent(Icon$1, mergeProps(props, {
  name: "Lightbulb",
  iconNode: iconNode$5M
}));
var Lightbulb$1 = Lightbulb;

const iconNode$5L = [['path', {
  d: 'M3 3v18h18',
  key: '1s2lah'
}], ['path', {
  d: 'm19 9-5 5-4-4-3 3',
  key: '2osh9i'
}]];
const LineChart = props => createComponent(Icon$1, mergeProps(props, {
  name: "LineChart",
  iconNode: iconNode$5L
}));
var LineChart$1 = LineChart;

const iconNode$5K = [['path', {
  d: 'M9 17H7A5 5 0 0 1 7 7',
  key: '10o201'
}], ['path', {
  d: 'M15 7h2a5 5 0 0 1 4 8',
  key: '1d3206'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '12',
  y2: '12',
  key: '1drbw0'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const Link2Off = props => createComponent(Icon$1, mergeProps(props, {
  name: "Link2Off",
  iconNode: iconNode$5K
}));
var Link2Off$1 = Link2Off;

const iconNode$5J = [['path', {
  d: 'M9 17H7A5 5 0 0 1 7 7h2',
  key: '8i5ue5'
}], ['path', {
  d: 'M15 7h2a5 5 0 1 1 0 10h-2',
  key: '1b9ql8'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}]];
const Link2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Link2",
  iconNode: iconNode$5J
}));
var Link2$1 = Link2;

const iconNode$5I = [['path', {
  d: 'M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71',
  key: '1cjeqo'
}], ['path', {
  d: 'M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71',
  key: '19qd67'
}]];
const Link = props => createComponent(Icon$1, mergeProps(props, {
  name: "Link",
  iconNode: iconNode$5I
}));
var Link$1 = Link;

const iconNode$5H = [['path', {
  d: 'M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z',
  key: 'c2jq9f'
}], ['rect', {
  x: '2',
  y: '9',
  width: '4',
  height: '12',
  key: 'fu1a4h'
}], ['circle', {
  cx: '4',
  cy: '4',
  r: '2',
  key: 'bt5ra8'
}]];
const Linkedin = props => createComponent(Icon$1, mergeProps(props, {
  name: "Linkedin",
  iconNode: iconNode$5H
}));
var Linkedin$1 = Linkedin;

const iconNode$5G = [['line', {
  x1: '10',
  y1: '6',
  x2: '21',
  y2: '6',
  key: 'g7ikjt'
}], ['line', {
  x1: '10',
  y1: '12',
  x2: '21',
  y2: '12',
  key: 'xgqux5'
}], ['line', {
  x1: '10',
  y1: '18',
  x2: '21',
  y2: '18',
  key: '1q4fbe'
}], ['polyline', {
  points: '3 6 4 7 6 5',
  key: 'ectua5'
}], ['polyline', {
  points: '3 12 4 13 6 11',
  key: 'gtbhyw'
}], ['polyline', {
  points: '3 18 4 19 6 17',
  key: 'qzp18e'
}]];
const ListChecks = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListChecks",
  iconNode: iconNode$5G
}));
var ListChecks$1 = ListChecks;

const iconNode$5F = [['path', {
  d: 'M16 12H3',
  key: '1a2rj7'
}], ['path', {
  d: 'M16 6H3',
  key: '1wxfjs'
}], ['path', {
  d: 'M10 18H3',
  key: '13769t'
}], ['path', {
  d: 'M21 6v10a2 2 0 0 1-2 2h-4',
  key: '1snekz'
}], ['path', {
  d: 'm16 16-2 2 2 2',
  key: 'kkc6pm'
}]];
const ListEnd = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListEnd",
  iconNode: iconNode$5F
}));
var ListEnd$1 = ListEnd;

const iconNode$5E = [['path', {
  d: 'M11 12H3',
  key: '51ecnj'
}], ['path', {
  d: 'M16 6H3',
  key: '1wxfjs'
}], ['path', {
  d: 'M16 18H3',
  key: '12xzn7'
}], ['path', {
  d: 'M21 12h-6',
  key: 'bt1uis'
}]];
const ListMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListMinus",
  iconNode: iconNode$5E
}));
var ListMinus$1 = ListMinus;

const iconNode$5D = [['path', {
  d: 'M21 15V6',
  key: 'h1cx4g'
}], ['path', {
  d: 'M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z',
  key: '8saifv'
}], ['path', {
  d: 'M12 12H3',
  key: '18klou'
}], ['path', {
  d: 'M16 6H3',
  key: '1wxfjs'
}], ['path', {
  d: 'M12 18H3',
  key: '11ftsu'
}]];
const ListMusic = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListMusic",
  iconNode: iconNode$5D
}));
var ListMusic$1 = ListMusic;

const iconNode$5C = [['line', {
  x1: '10',
  y1: '6',
  x2: '21',
  y2: '6',
  key: 'g7ikjt'
}], ['line', {
  x1: '10',
  y1: '12',
  x2: '21',
  y2: '12',
  key: 'xgqux5'
}], ['line', {
  x1: '10',
  y1: '18',
  x2: '21',
  y2: '18',
  key: '1q4fbe'
}], ['path', {
  d: 'M4 6h1v4',
  key: 'cnovpq'
}], ['path', {
  d: 'M4 10h2',
  key: '16xx2s'
}], ['path', {
  d: 'M6 18H4c0-1 2-2 2-3s-1-1.5-2-1',
  key: 'm9a95d'
}]];
const ListOrdered = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListOrdered",
  iconNode: iconNode$5C
}));
var ListOrdered$1 = ListOrdered;

const iconNode$5B = [['path', {
  d: 'M11 12H3',
  key: '51ecnj'
}], ['path', {
  d: 'M16 6H3',
  key: '1wxfjs'
}], ['path', {
  d: 'M16 18H3',
  key: '12xzn7'
}], ['path', {
  d: 'M18 9v6',
  key: '1twb98'
}], ['path', {
  d: 'M21 12h-6',
  key: 'bt1uis'
}]];
const ListPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListPlus",
  iconNode: iconNode$5B
}));
var ListPlus$1 = ListPlus;

const iconNode$5A = [['path', {
  d: 'M16 12H3',
  key: '1a2rj7'
}], ['path', {
  d: 'M16 18H3',
  key: '12xzn7'
}], ['path', {
  d: 'M10 6H3',
  key: 'lf8lx7'
}], ['path', {
  d: 'M21 18V8a2 2 0 0 0-2-2h-5',
  key: '1hghli'
}], ['path', {
  d: 'm16 8-2-2 2-2',
  key: '160uvd'
}]];
const ListStart = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListStart",
  iconNode: iconNode$5A
}));
var ListStart$1 = ListStart;

const iconNode$5z = [['path', {
  d: 'M12 12H3',
  key: '18klou'
}], ['path', {
  d: 'M16 6H3',
  key: '1wxfjs'
}], ['path', {
  d: 'M12 18H3',
  key: '11ftsu'
}], ['path', {
  d: 'm16 12 5 3-5 3v-6Z',
  key: 'zpskkp'
}]];
const ListVideo = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListVideo",
  iconNode: iconNode$5z
}));
var ListVideo$1 = ListVideo;

const iconNode$5y = [['path', {
  d: 'M11 12H3',
  key: '51ecnj'
}], ['path', {
  d: 'M16 6H3',
  key: '1wxfjs'
}], ['path', {
  d: 'M16 18H3',
  key: '12xzn7'
}], ['path', {
  d: 'm19 10-4 4',
  key: '1tz659'
}], ['path', {
  d: 'm15 10 4 4',
  key: '1n7nei'
}]];
const ListX = props => createComponent(Icon$1, mergeProps(props, {
  name: "ListX",
  iconNode: iconNode$5y
}));
var ListX$1 = ListX;

const iconNode$5x = [['line', {
  x1: '8',
  y1: '6',
  x2: '21',
  y2: '6',
  key: '1kveod'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '21',
  y2: '12',
  key: '120u6p'
}], ['line', {
  x1: '8',
  y1: '18',
  x2: '21',
  y2: '18',
  key: '1k409v'
}], ['line', {
  x1: '3',
  y1: '6',
  x2: '3.01',
  y2: '6',
  key: '13co06'
}], ['line', {
  x1: '3',
  y1: '12',
  x2: '3.01',
  y2: '12',
  key: '11tec3'
}], ['line', {
  x1: '3',
  y1: '18',
  x2: '3.01',
  y2: '18',
  key: '14wug1'
}]];
const List = props => createComponent(Icon$1, mergeProps(props, {
  name: "List",
  iconNode: iconNode$5x
}));
var List$1 = List;

const iconNode$5w = [['path', {
  d: 'M21 12a9 9 0 1 1-6.219-8.56',
  key: '13zald'
}]];
const Loader2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Loader2",
  iconNode: iconNode$5w
}));
var Loader2$1 = Loader2;

const iconNode$5v = [['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '6',
  key: '1pduqs'
}], ['line', {
  x1: '12',
  y1: '18',
  x2: '12',
  y2: '22',
  key: '1b94uv'
}], ['line', {
  x1: '4.93',
  y1: '4.93',
  x2: '7.76',
  y2: '7.76',
  key: '1a736z'
}], ['line', {
  x1: '16.24',
  y1: '16.24',
  x2: '19.07',
  y2: '19.07',
  key: 'gt096z'
}], ['line', {
  x1: '2',
  y1: '12',
  x2: '6',
  y2: '12',
  key: 'rkbu33'
}], ['line', {
  x1: '18',
  y1: '12',
  x2: '22',
  y2: '12',
  key: '1vrbnu'
}], ['line', {
  x1: '4.93',
  y1: '19.07',
  x2: '7.76',
  y2: '16.24',
  key: '59c6el'
}], ['line', {
  x1: '16.24',
  y1: '7.76',
  x2: '19.07',
  y2: '4.93',
  key: '8m03gt'
}]];
const Loader = props => createComponent(Icon$1, mergeProps(props, {
  name: "Loader",
  iconNode: iconNode$5v
}));
var Loader$1 = Loader;

const iconNode$5u = [['line', {
  x1: '2',
  x2: '5',
  y1: '12',
  y2: '12',
  key: 'bvdh0s'
}], ['line', {
  x1: '19',
  x2: '22',
  y1: '12',
  y2: '12',
  key: '1tbv5k'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '2',
  y2: '5',
  key: '11lu5j'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '19',
  y2: '22',
  key: 'x3vr5v'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '7',
  key: 'fim9np'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}]];
const LocateFixed = props => createComponent(Icon$1, mergeProps(props, {
  name: "LocateFixed",
  iconNode: iconNode$5u
}));
var LocateFixed$1 = LocateFixed;

const iconNode$5t = [['line', {
  x1: '2',
  x2: '5',
  y1: '12',
  y2: '12',
  key: 'bvdh0s'
}], ['line', {
  x1: '19',
  x2: '22',
  y1: '12',
  y2: '12',
  key: '1tbv5k'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '2',
  y2: '5',
  key: '11lu5j'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '19',
  y2: '22',
  key: 'x3vr5v'
}], ['path', {
  d: 'M7.11 7.11C5.83 8.39 5 10.1 5 12c0 3.87 3.13 7 7 7 1.9 0 3.61-.83 4.89-2.11',
  key: '1oh7ia'
}], ['path', {
  d: 'M18.71 13.96c.19-.63.29-1.29.29-1.96 0-3.87-3.13-7-7-7-.67 0-1.33.1-1.96.29',
  key: '3qdecy'
}], ['line', {
  x1: '2',
  x2: '22',
  y1: '2',
  y2: '22',
  key: 'a6p6uj'
}]];
const LocateOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "LocateOff",
  iconNode: iconNode$5t
}));
var LocateOff$1 = LocateOff;

const iconNode$5s = [['line', {
  x1: '2',
  x2: '5',
  y1: '12',
  y2: '12',
  key: 'bvdh0s'
}], ['line', {
  x1: '19',
  x2: '22',
  y1: '12',
  y2: '12',
  key: '1tbv5k'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '2',
  y2: '5',
  key: '11lu5j'
}], ['line', {
  x1: '12',
  x2: '12',
  y1: '19',
  y2: '22',
  key: 'x3vr5v'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '7',
  key: 'fim9np'
}]];
const Locate = props => createComponent(Icon$1, mergeProps(props, {
  name: "Locate",
  iconNode: iconNode$5s
}));
var Locate$1 = Locate;

const iconNode$5r = [['rect', {
  x: '3',
  y: '11',
  width: '18',
  height: '11',
  rx: '2',
  ry: '2',
  key: 'biyj2e'
}], ['path', {
  d: 'M7 11V7a5 5 0 0 1 10 0v4',
  key: 'fwvmzm'
}]];
const Lock = props => createComponent(Icon$1, mergeProps(props, {
  name: "Lock",
  iconNode: iconNode$5r
}));
var Lock$1 = Lock;

const iconNode$5q = [['path', {
  d: 'M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4',
  key: 'u53s6r'
}], ['polyline', {
  points: '10 17 15 12 10 7',
  key: '1ail0h'
}], ['line', {
  x1: '15',
  y1: '12',
  x2: '3',
  y2: '12',
  key: '80e4vw'
}]];
const LogIn = props => createComponent(Icon$1, mergeProps(props, {
  name: "LogIn",
  iconNode: iconNode$5q
}));
var LogIn$1 = LogIn;

const iconNode$5p = [['path', {
  d: 'M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4',
  key: '1uf3rs'
}], ['polyline', {
  points: '16 17 21 12 16 7',
  key: '1gabdz'
}], ['line', {
  x1: '21',
  y1: '12',
  x2: '9',
  y2: '12',
  key: '1stwgr'
}]];
const LogOut = props => createComponent(Icon$1, mergeProps(props, {
  name: "LogOut",
  iconNode: iconNode$5p
}));
var LogOut$1 = LogOut;

const iconNode$5o = [['path', {
  d: 'M6 20h0a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h0',
  key: '1h5fkc'
}], ['path', {
  d: 'M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14',
  key: '1l99gc'
}], ['path', {
  d: 'M10 20h4',
  key: 'ni2waw'
}], ['circle', {
  cx: '16',
  cy: '20',
  r: '2',
  key: '1vifvg'
}], ['circle', {
  cx: '8',
  cy: '20',
  r: '2',
  key: 'ckkr5m'
}]];
const Luggage = props => createComponent(Icon$1, mergeProps(props, {
  name: "Luggage",
  iconNode: iconNode$5o
}));
var Luggage$1 = Luggage;

const iconNode$5n = [['path', {
  d: 'm6 15-4-4 6.75-6.77a7.79 7.79 0 0 1 11 11L13 22l-4-4 6.39-6.36a2.14 2.14 0 0 0-3-3L6 15',
  key: '1i3lhw'
}], ['path', {
  d: 'm5 8 4 4',
  key: 'j6kj7e'
}], ['path', {
  d: 'm12 15 4 4',
  key: 'lnac28'
}]];
const Magnet = props => createComponent(Icon$1, mergeProps(props, {
  name: "Magnet",
  iconNode: iconNode$5n
}));
var Magnet$1 = Magnet;

const iconNode$5m = [['path', {
  d: 'M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8',
  key: '12jkf8'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'm16 19 2 2 4-4',
  key: '1b14m6'
}]];
const MailCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailCheck",
  iconNode: iconNode$5m
}));
var MailCheck$1 = MailCheck;

const iconNode$5l = [['path', {
  d: 'M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8',
  key: 'fuxbkv'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'M16 19h6',
  key: 'xwg31i'
}]];
const MailMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailMinus",
  iconNode: iconNode$5l
}));
var MailMinus$1 = MailMinus;

const iconNode$5k = [['path', {
  d: 'M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z',
  key: '1jhwl8'
}], ['path', {
  d: 'm22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10',
  key: '1qfld7'
}]];
const MailOpen = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailOpen",
  iconNode: iconNode$5k
}));
var MailOpen$1 = MailOpen;

const iconNode$5j = [['path', {
  d: 'M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8',
  key: '12jkf8'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'M19 16v6',
  key: 'tddt3s'
}], ['path', {
  d: 'M16 19h6',
  key: 'xwg31i'
}]];
const MailPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailPlus",
  iconNode: iconNode$5j
}));
var MailPlus$1 = MailPlus;

const iconNode$5i = [['path', {
  d: 'M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5',
  key: 'e61zoh'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2',
  key: '7z9rxb'
}], ['path', {
  d: 'M20 22v.01',
  key: '12bgn6'
}]];
const MailQuestion = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailQuestion",
  iconNode: iconNode$5i
}));
var MailQuestion$1 = MailQuestion;

const iconNode$5h = [['path', {
  d: 'M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5',
  key: 'w80f2v'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6v0Z',
  key: 'mgbru4'
}], ['circle', {
  cx: '18',
  cy: '18',
  r: '3',
  key: '1xkwt0'
}], ['path', {
  d: 'm22 22-1.5-1.5',
  key: '1x83k4'
}]];
const MailSearch = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailSearch",
  iconNode: iconNode$5h
}));
var MailSearch$1 = MailSearch;

const iconNode$5g = [['path', {
  d: 'M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5',
  key: 'e61zoh'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'M20 14v4',
  key: '1hm744'
}], ['path', {
  d: 'M20 22v.01',
  key: '12bgn6'
}]];
const MailWarning = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailWarning",
  iconNode: iconNode$5g
}));
var MailWarning$1 = MailWarning;

const iconNode$5f = [['path', {
  d: 'M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9',
  key: '1j9vog'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}], ['path', {
  d: 'm17 17 4 4',
  key: '1b3523'
}], ['path', {
  d: 'm21 17-4 4',
  key: 'uinynz'
}]];
const MailX = props => createComponent(Icon$1, mergeProps(props, {
  name: "MailX",
  iconNode: iconNode$5f
}));
var MailX$1 = MailX;

const iconNode$5e = [['rect', {
  x: '2',
  y: '4',
  width: '20',
  height: '16',
  rx: '2',
  key: 'izxlao'
}], ['path', {
  d: 'm22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7',
  key: '1ocrg3'
}]];
const Mail = props => createComponent(Icon$1, mergeProps(props, {
  name: "Mail",
  iconNode: iconNode$5e
}));
var Mail$1 = Mail;

const iconNode$5d = [['rect', {
  x: '6',
  y: '4',
  width: '16',
  height: '13',
  rx: '2',
  key: 'q6n4z8'
}], ['path', {
  d: 'm22 7-7.1 3.78c-.57.3-1.23.3-1.8 0L6 7',
  key: 'xn252p'
}], ['path', {
  d: 'M2 8v11c0 1.1.9 2 2 2h14',
  key: 'n13cji'
}]];
const Mails = props => createComponent(Icon$1, mergeProps(props, {
  name: "Mails",
  iconNode: iconNode$5d
}));
var Mails$1 = Mails;

const iconNode$5c = [['path', {
  d: 'M5.43 5.43A8.06 8.06 0 0 0 4 10c0 6 8 12 8 12a29.94 29.94 0 0 0 5-5',
  key: '12a8pk'
}], ['path', {
  d: 'M19.18 13.52A8.66 8.66 0 0 0 20 10a8 8 0 0 0-8-8 7.88 7.88 0 0 0-3.52.82',
  key: '1r9f6y'
}], ['path', {
  d: 'M9.13 9.13A2.78 2.78 0 0 0 9 10a3 3 0 0 0 3 3 2.78 2.78 0 0 0 .87-.13',
  key: 'erynq7'
}], ['path', {
  d: 'M14.9 9.25a3 3 0 0 0-2.15-2.16',
  key: '1hwwmx'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const MapPinOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "MapPinOff",
  iconNode: iconNode$5c
}));
var MapPinOff$1 = MapPinOff;

const iconNode$5b = [['path', {
  d: 'M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z',
  key: '2oe9fu'
}], ['circle', {
  cx: '12',
  cy: '10',
  r: '3',
  key: 'ilqhr7'
}]];
const MapPin = props => createComponent(Icon$1, mergeProps(props, {
  name: "MapPin",
  iconNode: iconNode$5b
}));
var MapPin$1 = MapPin;

const iconNode$5a = [['polygon', {
  points: '3 6 9 3 15 6 21 3 21 18 15 21 9 18 3 21',
  key: 'ok2ie8'
}], ['line', {
  x1: '9',
  y1: '3',
  x2: '9',
  y2: '18',
  key: '3zqglt'
}], ['line', {
  x1: '15',
  y1: '6',
  x2: '15',
  y2: '21',
  key: '1c9xoo'
}]];
const Map = props => createComponent(Icon$1, mergeProps(props, {
  name: "Map",
  iconNode: iconNode$5a
}));
var Map$1 = Map;

const iconNode$59 = [['path', {
  d: 'M8 22h8',
  key: 'rmew8v'
}], ['path', {
  d: 'M12 11v11',
  key: 'ur9y6a'
}], ['path', {
  d: 'm19 3-7 8-7-8Z',
  key: '1sgpiw'
}]];
const Martini = props => createComponent(Icon$1, mergeProps(props, {
  name: "Martini",
  iconNode: iconNode$59
}));
var Martini$1 = Martini;

const iconNode$58 = [['polyline', {
  points: '15 3 21 3 21 9',
  key: 'mznyad'
}], ['polyline', {
  points: '9 21 3 21 3 15',
  key: '1avn1i'
}], ['line', {
  x1: '21',
  y1: '3',
  x2: '14',
  y2: '10',
  key: '8isubj'
}], ['line', {
  x1: '3',
  y1: '21',
  x2: '10',
  y2: '14',
  key: 'c1a6xr'
}]];
const Maximize2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Maximize2",
  iconNode: iconNode$58
}));
var Maximize2$1 = Maximize2;

const iconNode$57 = [['path', {
  d: 'M8 3H5a2 2 0 0 0-2 2v3',
  key: '1dcmit'
}], ['path', {
  d: 'M21 8V5a2 2 0 0 0-2-2h-3',
  key: '1e4gt3'
}], ['path', {
  d: 'M3 16v3a2 2 0 0 0 2 2h3',
  key: 'wsl5sc'
}], ['path', {
  d: 'M16 21h3a2 2 0 0 0 2-2v-3',
  key: '18trek'
}]];
const Maximize = props => createComponent(Icon$1, mergeProps(props, {
  name: "Maximize",
  iconNode: iconNode$57
}));
var Maximize$1 = Maximize;

const iconNode$56 = [['path', {
  d: 'M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15',
  key: '143lza'
}], ['path', {
  d: 'M11 12 5.12 2.2',
  key: 'qhuxz6'
}], ['path', {
  d: 'm13 12 5.88-9.8',
  key: 'hbye0f'
}], ['path', {
  d: 'M8 7h8',
  key: 'i86dvs'
}], ['circle', {
  cx: '12',
  cy: '17',
  r: '5',
  key: 'qbz8iq'
}], ['path', {
  d: 'M12 18v-2h-.5',
  key: 'fawc4q'
}]];
const Medal = props => createComponent(Icon$1, mergeProps(props, {
  name: "Medal",
  iconNode: iconNode$56
}));
var Medal$1 = Medal;

const iconNode$55 = [['path', {
  d: 'M9.26 9.26 3 11v3l14.14 3.14',
  key: '3429n'
}], ['path', {
  d: 'M21 15.34V6l-7.31 2.03',
  key: '4o1dh8'
}], ['path', {
  d: 'M11.6 16.8a3 3 0 1 1-5.8-1.6',
  key: '1yl0tm'
}], ['line', {
  x1: '2',
  x2: '22',
  y1: '2',
  y2: '22',
  key: 'a6p6uj'
}]];
const MegaphoneOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "MegaphoneOff",
  iconNode: iconNode$55
}));
var MegaphoneOff$1 = MegaphoneOff;

const iconNode$54 = [['path', {
  d: 'm3 11 18-5v12L3 14v-3z',
  key: 'n962bs'
}], ['path', {
  d: 'M11.6 16.8a3 3 0 1 1-5.8-1.6',
  key: '1yl0tm'
}]];
const Megaphone = props => createComponent(Icon$1, mergeProps(props, {
  name: "Megaphone",
  iconNode: iconNode$54
}));
var Megaphone$1 = Megaphone;

const iconNode$53 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '8',
  y1: '15',
  x2: '16',
  y2: '15',
  key: '29ieok'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '9.01',
  y2: '9',
  key: '141aaf'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '15.01',
  y2: '9',
  key: '1cyg3o'
}]];
const Meh = props => createComponent(Icon$1, mergeProps(props, {
  name: "Meh",
  iconNode: iconNode$53
}));
var Meh$1 = Meh;

const iconNode$52 = [['line', {
  x1: '4',
  y1: '12',
  x2: '20',
  y2: '12',
  key: '1q6rtp'
}], ['line', {
  x1: '4',
  y1: '6',
  x2: '20',
  y2: '6',
  key: '1jr6gt'
}], ['line', {
  x1: '4',
  y1: '18',
  x2: '20',
  y2: '18',
  key: '98tuvx'
}]];
const Menu = props => createComponent(Icon$1, mergeProps(props, {
  name: "Menu",
  iconNode: iconNode$52
}));
var Menu$1 = Menu;

const iconNode$51 = [['path', {
  d: 'M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z',
  key: '5iho0c'
}]];
const MessageCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "MessageCircle",
  iconNode: iconNode$51
}));
var MessageCircle$1 = MessageCircle;

const iconNode$50 = [['path', {
  d: 'M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z',
  key: '1lielz'
}]];
const MessageSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "MessageSquare",
  iconNode: iconNode$50
}));
var MessageSquare$1 = MessageSquare;

const iconNode$4$ = [['path', {
  d: 'm12 8-9.04 9.06a2.82 2.82 0 1 0 3.98 3.98L16 12',
  key: 'zoua8r'
}], ['circle', {
  cx: '17',
  cy: '7',
  r: '5',
  key: '1fomce'
}]];
const Mic2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Mic2",
  iconNode: iconNode$4$
}));
var Mic2$1 = Mic2;

const iconNode$4_ = [['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}], ['path', {
  d: 'M18.89 13.23A7.12 7.12 0 0 0 19 12v-2',
  key: '80xlxr'
}], ['path', {
  d: 'M5 10v2a7 7 0 0 0 12 5',
  key: 'p2k8kg'
}], ['path', {
  d: 'M15 9.34V5a3 3 0 0 0-5.68-1.33',
  key: '1gzdoj'
}], ['path', {
  d: 'M9 9v3a3 3 0 0 0 5.12 2.12',
  key: 'r2i35w'
}], ['line', {
  x1: '12',
  y1: '19',
  x2: '12',
  y2: '22',
  key: '1l505v'
}]];
const MicOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "MicOff",
  iconNode: iconNode$4_
}));
var MicOff$1 = MicOff;

const iconNode$4Z = [['path', {
  d: 'M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z',
  key: '131961'
}], ['path', {
  d: 'M19 10v2a7 7 0 0 1-14 0v-2',
  key: '1vc78b'
}], ['line', {
  x1: '12',
  y1: '19',
  x2: '12',
  y2: '22',
  key: '1l505v'
}]];
const Mic = props => createComponent(Icon$1, mergeProps(props, {
  name: "Mic",
  iconNode: iconNode$4Z
}));
var Mic$1 = Mic;

const iconNode$4Y = [['path', {
  d: 'M6 18h8',
  key: '1borvv'
}], ['path', {
  d: 'M3 22h18',
  key: '8prr45'
}], ['path', {
  d: 'M14 22a7 7 0 1 0 0-14h-1',
  key: '1jwaiy'
}], ['path', {
  d: 'M9 14h2',
  key: '197e7h'
}], ['path', {
  d: 'M8 6h4',
  key: 'i9thid'
}], ['path', {
  d: 'M13 10V6.5a.5.5 0 0 0-.5-.5.5.5 0 0 1-.5-.5V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2.5a.5.5 0 0 1-.5.5.5.5 0 0 0-.5.5V10c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2Z',
  key: 'z62yqi'
}]];
const Microscope = props => createComponent(Icon$1, mergeProps(props, {
  name: "Microscope",
  iconNode: iconNode$4Y
}));
var Microscope$1 = Microscope;

const iconNode$4X = [['rect', {
  x: '2',
  y: '4',
  width: '20',
  height: '15',
  rx: '2',
  key: '1rfv8z'
}], ['rect', {
  x: '6',
  y: '8',
  width: '8',
  height: '7',
  rx: '1',
  key: 'i43qc1'
}], ['path', {
  d: 'M18 8v7',
  key: 'o5zi4n'
}], ['path', {
  d: 'M6 19v2',
  key: '1loha6'
}], ['path', {
  d: 'M18 19v2',
  key: '1dawf0'
}]];
const Microwave = props => createComponent(Icon$1, mergeProps(props, {
  name: "Microwave",
  iconNode: iconNode$4X
}));
var Microwave$1 = Microwave;

const iconNode$4W = [['path', {
  d: 'M18 6H5a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h13l4-3.5L18 6Z',
  key: '1mp5s7'
}], ['path', {
  d: 'M12 13v9',
  key: 'keea1l'
}], ['path', {
  d: 'M12 2v4',
  key: '3427ic'
}]];
const Milestone = props => createComponent(Icon$1, mergeProps(props, {
  name: "Milestone",
  iconNode: iconNode$4W
}));
var Milestone$1 = Milestone;

const iconNode$4V = [['path', {
  d: 'M8 2h8',
  key: '1ssgc1'
}], ['path', {
  d: 'M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3',
  key: 'y0ejgx'
}], ['path', {
  d: 'M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435',
  key: 'iaxqsy'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const MilkOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "MilkOff",
  iconNode: iconNode$4V
}));
var MilkOff$1 = MilkOff;

const iconNode$4U = [['path', {
  d: 'M8 2h8',
  key: '1ssgc1'
}], ['path', {
  d: 'M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2',
  key: 'qtp12x'
}], ['path', {
  d: 'M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0',
  key: 'ygeh44'
}]];
const Milk = props => createComponent(Icon$1, mergeProps(props, {
  name: "Milk",
  iconNode: iconNode$4U
}));
var Milk$1 = Milk;

const iconNode$4T = [['polyline', {
  points: '4 14 10 14 10 20',
  key: '11kfnr'
}], ['polyline', {
  points: '20 10 14 10 14 4',
  key: 'rlmsce'
}], ['line', {
  x1: '14',
  y1: '10',
  x2: '21',
  y2: '3',
  key: '6dvi8v'
}], ['line', {
  x1: '3',
  y1: '21',
  x2: '10',
  y2: '14',
  key: 'c1a6xr'
}]];
const Minimize2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Minimize2",
  iconNode: iconNode$4T
}));
var Minimize2$1 = Minimize2;

const iconNode$4S = [['path', {
  d: 'M8 3v3a2 2 0 0 1-2 2H3',
  key: 'hohbtr'
}], ['path', {
  d: 'M21 8h-3a2 2 0 0 1-2-2V3',
  key: '5jw1f3'
}], ['path', {
  d: 'M3 16h3a2 2 0 0 1 2 2v3',
  key: '198tvr'
}], ['path', {
  d: 'M16 21v-3a2 2 0 0 1 2-2h3',
  key: 'ph8mxp'
}]];
const Minimize = props => createComponent(Icon$1, mergeProps(props, {
  name: "Minimize",
  iconNode: iconNode$4S
}));
var Minimize$1 = Minimize;

const iconNode$4R = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}]];
const MinusCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "MinusCircle",
  iconNode: iconNode$4R
}));
var MinusCircle$1 = MinusCircle;

const iconNode$4Q = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}]];
const MinusSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "MinusSquare",
  iconNode: iconNode$4Q
}));
var MinusSquare$1 = MinusSquare;

const iconNode$4P = [['line', {
  x1: '5',
  y1: '12',
  x2: '19',
  y2: '12',
  key: '1smlys'
}]];
const Minus = props => createComponent(Icon$1, mergeProps(props, {
  name: "Minus",
  iconNode: iconNode$4P
}));
var Minus$1 = Minus;

const iconNode$4O = [['path', {
  d: 'M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2',
  key: 'k0q8oc'
}], ['path', {
  d: 'M22 15V5a2 2 0 0 0-2-2H9',
  key: 'cp1ac0'
}], ['path', {
  d: 'M8 21h8',
  key: '1ev6f3'
}], ['path', {
  d: 'M12 17v4',
  key: '1riwvh'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}]];
const MonitorOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "MonitorOff",
  iconNode: iconNode$4O
}));
var MonitorOff$1 = MonitorOff;

const iconNode$4N = [['path', {
  d: 'M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8',
  key: '10dyio'
}], ['path', {
  d: 'M10 19v-3.96 3.15',
  key: '1irgej'
}], ['path', {
  d: 'M7 19h5',
  key: 'qswx4l'
}], ['rect', {
  x: '16',
  y: '12',
  width: '6',
  height: '10',
  rx: '2',
  key: 'k4sdfk'
}]];
const MonitorSmartphone = props => createComponent(Icon$1, mergeProps(props, {
  name: "MonitorSmartphone",
  iconNode: iconNode$4N
}));
var MonitorSmartphone$1 = MonitorSmartphone;

const iconNode$4M = [['path', {
  d: 'M5.5 20H8',
  key: '1k40s5'
}], ['path', {
  d: 'M17 9h.01',
  key: '1j24nn'
}], ['rect', {
  x: '12',
  y: '4',
  width: '10',
  height: '16',
  rx: '2',
  key: '1gi0i2'
}], ['path', {
  d: 'M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4',
  key: '1mp6e1'
}], ['circle', {
  cx: '17',
  cy: '15',
  r: '1',
  key: 'tqvash'
}]];
const MonitorSpeaker = props => createComponent(Icon$1, mergeProps(props, {
  name: "MonitorSpeaker",
  iconNode: iconNode$4M
}));
var MonitorSpeaker$1 = MonitorSpeaker;

const iconNode$4L = [['rect', {
  x: '2',
  y: '3',
  width: '20',
  height: '14',
  rx: '2',
  ry: '2',
  key: '1q87ek'
}], ['line', {
  x1: '8',
  y1: '21',
  x2: '16',
  y2: '21',
  key: 'bcbiac'
}], ['line', {
  x1: '12',
  y1: '17',
  x2: '12',
  y2: '21',
  key: '1v4d7v'
}]];
const Monitor = props => createComponent(Icon$1, mergeProps(props, {
  name: "Monitor",
  iconNode: iconNode$4L
}));
var Monitor$1 = Monitor;

const iconNode$4K = [['path', {
  d: 'M12 3a6.364 6.364 0 0 0 9 9 9 9 0 1 1-9-9Z',
  key: '1rit1i'
}]];
const Moon = props => createComponent(Icon$1, mergeProps(props, {
  name: "Moon",
  iconNode: iconNode$4K
}));
var Moon$1 = Moon;

const iconNode$4J = [['circle', {
  cx: '12',
  cy: '12',
  r: '1',
  key: '41hilf'
}], ['circle', {
  cx: '19',
  cy: '12',
  r: '1',
  key: '1wjl8i'
}], ['circle', {
  cx: '5',
  cy: '12',
  r: '1',
  key: '1pcz8c'
}]];
const MoreHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "MoreHorizontal",
  iconNode: iconNode$4J
}));
var MoreHorizontal$1 = MoreHorizontal;

const iconNode$4I = [['circle', {
  cx: '12',
  cy: '12',
  r: '1',
  key: '41hilf'
}], ['circle', {
  cx: '12',
  cy: '5',
  r: '1',
  key: 'gxeob9'
}], ['circle', {
  cx: '12',
  cy: '19',
  r: '1',
  key: 'lyex9k'
}]];
const MoreVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "MoreVertical",
  iconNode: iconNode$4I
}));
var MoreVertical$1 = MoreVertical;

const iconNode$4H = [['path', {
  d: 'm8 3 4 8 5-5 5 15H2L8 3z',
  key: 'otkl63'
}], ['path', {
  d: 'M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19',
  key: '1pvmmp'
}]];
const MountainSnow = props => createComponent(Icon$1, mergeProps(props, {
  name: "MountainSnow",
  iconNode: iconNode$4H
}));
var MountainSnow$1 = MountainSnow;

const iconNode$4G = [['path', {
  d: 'm8 3 4 8 5-5 5 15H2L8 3z',
  key: 'otkl63'
}]];
const Mountain = props => createComponent(Icon$1, mergeProps(props, {
  name: "Mountain",
  iconNode: iconNode$4G
}));
var Mountain$1 = Mountain;

const iconNode$4F = [['path', {
  d: 'm4 4 7.07 17 2.51-7.39L21 11.07z',
  key: '1vqm48'
}]];
const MousePointer2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "MousePointer2",
  iconNode: iconNode$4F
}));
var MousePointer2$1 = MousePointer2;

const iconNode$4E = [['path', {
  d: 'm9 9 5 12 1.774-5.226L21 14 9 9z',
  key: '1qd44z'
}], ['path', {
  d: 'm16.071 16.071 4.243 4.243',
  key: 'wfhsjb'
}], ['path', {
  d: 'm7.188 2.239.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656-2.12 2.122',
  key: '1bk8fz'
}]];
const MousePointerClick = props => createComponent(Icon$1, mergeProps(props, {
  name: "MousePointerClick",
  iconNode: iconNode$4E
}));
var MousePointerClick$1 = MousePointerClick;

const iconNode$4D = [['path', {
  d: 'm3 3 7.07 16.97 2.51-7.39 7.39-2.51L3 3z',
  key: 'y2ucgo'
}], ['path', {
  d: 'm13 13 6 6',
  key: '1nhxnf'
}]];
const MousePointer = props => createComponent(Icon$1, mergeProps(props, {
  name: "MousePointer",
  iconNode: iconNode$4D
}));
var MousePointer$1 = MousePointer;

const iconNode$4C = [['rect', {
  x: '6',
  y: '3',
  width: '12',
  height: '18',
  rx: '6',
  key: 'wskjtk'
}], ['path', {
  d: 'M12 7v4',
  key: 'xawao1'
}]];
const Mouse = props => createComponent(Icon$1, mergeProps(props, {
  name: "Mouse",
  iconNode: iconNode$4C
}));
var Mouse$1 = Mouse;

const iconNode$4B = [['path', {
  d: 'M5 3v16h16',
  key: '1mqmf9'
}], ['path', {
  d: 'm5 19 6-6',
  key: 'jh6hbb'
}], ['path', {
  d: 'm2 6 3-3 3 3',
  key: 'tkyvxa'
}], ['path', {
  d: 'm18 16 3 3-3 3',
  key: '1d4glt'
}]];
const Move3d = props => createComponent(Icon$1, mergeProps(props, {
  name: "Move3d",
  iconNode: iconNode$4B
}));
var Move3d$1 = Move3d;

const iconNode$4A = [['polyline', {
  points: '5 11 5 5 11 5',
  key: 'ncfzxk'
}], ['polyline', {
  points: '19 13 19 19 13 19',
  key: '1mk7hk'
}], ['line', {
  x1: '5',
  y1: '5',
  x2: '19',
  y2: '19',
  key: '4tvgsr'
}]];
const MoveDiagonal2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "MoveDiagonal2",
  iconNode: iconNode$4A
}));
var MoveDiagonal2$1 = MoveDiagonal2;

const iconNode$4z = [['polyline', {
  points: '13 5 19 5 19 11',
  key: '11219e'
}], ['polyline', {
  points: '11 19 5 19 5 13',
  key: 'sfq3wq'
}], ['line', {
  x1: '19',
  y1: '5',
  x2: '5',
  y2: '19',
  key: 't1677v'
}]];
const MoveDiagonal = props => createComponent(Icon$1, mergeProps(props, {
  name: "MoveDiagonal",
  iconNode: iconNode$4z
}));
var MoveDiagonal$1 = MoveDiagonal;

const iconNode$4y = [['polyline', {
  points: '18 8 22 12 18 16',
  key: '1hqrds'
}], ['polyline', {
  points: '6 8 2 12 6 16',
  key: 'f0ernq'
}], ['line', {
  x1: '2',
  y1: '12',
  x2: '22',
  y2: '12',
  key: 'zvmn4p'
}]];
const MoveHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "MoveHorizontal",
  iconNode: iconNode$4y
}));
var MoveHorizontal$1 = MoveHorizontal;

const iconNode$4x = [['polyline', {
  points: '8 18 12 22 16 18',
  key: '1uutw3'
}], ['polyline', {
  points: '8 6 12 2 16 6',
  key: 'd60sxy'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '22',
  key: '1k6o5o'
}]];
const MoveVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "MoveVertical",
  iconNode: iconNode$4x
}));
var MoveVertical$1 = MoveVertical;

const iconNode$4w = [['polyline', {
  points: '5 9 2 12 5 15',
  key: '1r5uj5'
}], ['polyline', {
  points: '9 5 12 2 15 5',
  key: '5v383o'
}], ['polyline', {
  points: '15 19 12 22 9 19',
  key: 'g7qi8m'
}], ['polyline', {
  points: '19 9 22 12 19 15',
  key: 'tpp73q'
}], ['line', {
  x1: '2',
  y1: '12',
  x2: '22',
  y2: '12',
  key: 'zvmn4p'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '22',
  key: '1k6o5o'
}]];
const Move = props => createComponent(Icon$1, mergeProps(props, {
  name: "Move",
  iconNode: iconNode$4w
}));
var Move$1 = Move;

const iconNode$4v = [['circle', {
  cx: '8',
  cy: '18',
  r: '4',
  key: '1fc0mg'
}], ['path', {
  d: 'M12 18V2l7 4',
  key: 'g04rme'
}]];
const Music2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Music2",
  iconNode: iconNode$4v
}));
var Music2$1 = Music2;

const iconNode$4u = [['circle', {
  cx: '12',
  cy: '18',
  r: '4',
  key: 'm3r9ws'
}], ['path', {
  d: 'M16 18V2',
  key: '40x2m5'
}]];
const Music3 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Music3",
  iconNode: iconNode$4u
}));
var Music3$1 = Music3;

const iconNode$4t = [['path', {
  d: 'M9 18V5l12-2v13',
  key: '1jmyc2'
}], ['path', {
  d: 'm9 9 12-2',
  key: '1e64n2'
}], ['circle', {
  cx: '6',
  cy: '18',
  r: '3',
  key: 'fqmcym'
}], ['circle', {
  cx: '18',
  cy: '16',
  r: '3',
  key: '1hluhg'
}]];
const Music4 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Music4",
  iconNode: iconNode$4t
}));
var Music4$1 = Music4;

const iconNode$4s = [['path', {
  d: 'M9 18V5l12-2v13',
  key: '1jmyc2'
}], ['circle', {
  cx: '6',
  cy: '18',
  r: '3',
  key: 'fqmcym'
}], ['circle', {
  cx: '18',
  cy: '16',
  r: '3',
  key: '1hluhg'
}]];
const Music = props => createComponent(Icon$1, mergeProps(props, {
  name: "Music",
  iconNode: iconNode$4s
}));
var Music$1 = Music;

const iconNode$4r = [['path', {
  d: 'M9.31 9.31 5 21l7-4 7 4-1.17-3.17',
  key: 'qoq2o2'
}], ['path', {
  d: 'M14.53 8.88 12 2l-1.17 3.17',
  key: 'k3sjzy'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const Navigation2Off = props => createComponent(Icon$1, mergeProps(props, {
  name: "Navigation2Off",
  iconNode: iconNode$4r
}));
var Navigation2Off$1 = Navigation2Off;

const iconNode$4q = [['polygon', {
  points: '12 2 19 21 12 17 5 21 12 2',
  key: 'x8c0qg'
}]];
const Navigation2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Navigation2",
  iconNode: iconNode$4q
}));
var Navigation2$1 = Navigation2;

const iconNode$4p = [['path', {
  d: 'M8.43 8.43 3 11l8 2 2 8 2.57-5.43',
  key: '1vdtb7'
}], ['path', {
  d: 'M17.39 11.73 22 2l-9.73 4.61',
  key: 'tya3r6'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const NavigationOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "NavigationOff",
  iconNode: iconNode$4p
}));
var NavigationOff$1 = NavigationOff;

const iconNode$4o = [['polygon', {
  points: '3 11 22 2 13 21 11 13 3 11',
  key: '1ltx0t'
}]];
const Navigation = props => createComponent(Icon$1, mergeProps(props, {
  name: "Navigation",
  iconNode: iconNode$4o
}));
var Navigation$1 = Navigation;

const iconNode$4n = [['rect', {
  x: '9',
  y: '2',
  width: '6',
  height: '6',
  key: '1iwon9'
}], ['rect', {
  x: '16',
  y: '16',
  width: '6',
  height: '6',
  key: 'gonbwd'
}], ['rect', {
  x: '2',
  y: '16',
  width: '6',
  height: '6',
  key: '1q0lzr'
}], ['path', {
  d: 'M5 16v-4h14v4',
  key: '8njgxx'
}], ['path', {
  d: 'M12 12V8',
  key: '2874zd'
}]];
const Network = props => createComponent(Icon$1, mergeProps(props, {
  name: "Network",
  iconNode: iconNode$4n
}));
var Network$1 = Network;

const iconNode$4m = [['path', {
  d: 'M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-2 2Zm0 0a2 2 0 0 1-2-2v-9c0-1.1.9-2 2-2h2',
  key: '7pis2x'
}], ['path', {
  d: 'M18 14h-8',
  key: 'sponae'
}], ['path', {
  d: 'M15 18h-5',
  key: '95g1m2'
}], ['path', {
  d: 'M10 6h8v4h-8V6Z',
  key: 'smlsk5'
}]];
const Newspaper = props => createComponent(Icon$1, mergeProps(props, {
  name: "Newspaper",
  iconNode: iconNode$4m
}));
var Newspaper$1 = Newspaper;

const iconNode$4l = [['path', {
  d: 'M12 4V2',
  key: '1k5q1u'
}], ['path', {
  d: 'M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939',
  key: '1xcvy9'
}], ['path', {
  d: 'M19 10v3.343',
  key: '163tfc'
}], ['path', {
  d: 'M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192',
  key: '17914v'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const NutOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "NutOff",
  iconNode: iconNode$4l
}));
var NutOff$1 = NutOff;

const iconNode$4k = [['path', {
  d: 'M12 4V2',
  key: '1k5q1u'
}], ['path', {
  d: 'M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4',
  key: '1tgyif'
}], ['path', {
  d: 'M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z',
  key: 'tnsqj'
}]];
const Nut = props => createComponent(Icon$1, mergeProps(props, {
  name: "Nut",
  iconNode: iconNode$4k
}));
var Nut$1 = Nut;

const iconNode$4j = [['polygon', {
  points: '7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2',
  key: 'h1p8hx'
}]];
const Octagon = props => createComponent(Icon$1, mergeProps(props, {
  name: "Octagon",
  iconNode: iconNode$4j
}));
var Octagon$1 = Octagon;

const iconNode$4i = [['path', {
  d: 'M3 3h6l6 18h6',
  key: 'ph9rgk'
}], ['path', {
  d: 'M14 3h7',
  key: '16f0ms'
}]];
const Option = props => createComponent(Icon$1, mergeProps(props, {
  name: "Option",
  iconNode: iconNode$4i
}));
var Option$1 = Option;

const iconNode$4h = [['polyline', {
  points: '7 8 3 12 7 16',
  key: '2j60jr'
}], ['line', {
  x1: '21',
  y1: '12',
  x2: '11',
  y2: '12',
  key: '1xy73i'
}], ['line', {
  x1: '21',
  y1: '6',
  x2: '11',
  y2: '6',
  key: '97xvqg'
}], ['line', {
  x1: '21',
  y1: '18',
  x2: '11',
  y2: '18',
  key: '1r7j8g'
}]];
const Outdent = props => createComponent(Icon$1, mergeProps(props, {
  name: "Outdent",
  iconNode: iconNode$4h
}));
var Outdent$1 = Outdent;

const iconNode$4g = [['path', {
  d: 'M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z',
  key: '1ront0'
}], ['path', {
  d: 'm3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9',
  key: '19h2x1'
}], ['path', {
  d: 'M12 3v6',
  key: '1holv5'
}]];
const Package2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Package2",
  iconNode: iconNode$4g
}));
var Package2$1 = Package2;

const iconNode$4f = [['path', {
  d: 'm16 16 2 2 4-4',
  key: 'gfu2re'
}], ['path', {
  d: 'M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14',
  key: 'e7tb2h'
}], ['path', {
  d: 'M16.5 9.4 7.55 4.24',
  key: '10qotr'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}]];
const PackageCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "PackageCheck",
  iconNode: iconNode$4f
}));
var PackageCheck$1 = PackageCheck;

const iconNode$4e = [['path', {
  d: 'M16 16h6',
  key: '100bgy'
}], ['path', {
  d: 'M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14',
  key: 'e7tb2h'
}], ['path', {
  d: 'M16.5 9.4 7.55 4.24',
  key: '10qotr'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}]];
const PackageMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "PackageMinus",
  iconNode: iconNode$4e
}));
var PackageMinus$1 = PackageMinus;

const iconNode$4d = [['path', {
  d: 'M20.91 8.84 8.56 2.23a1.93 1.93 0 0 0-1.81 0L3.1 4.13a2.12 2.12 0 0 0-.05 3.69l12.22 6.93a2 2 0 0 0 1.94 0L21 12.51a2.12 2.12 0 0 0-.09-3.67Z',
  key: '1vy178'
}], ['path', {
  d: 'm3.09 8.84 12.35-6.61a1.93 1.93 0 0 1 1.81 0l3.65 1.9a2.12 2.12 0 0 1 .1 3.69L8.73 14.75a2 2 0 0 1-1.94 0L3 12.51a2.12 2.12 0 0 1 .09-3.67Z',
  key: 's3bv25'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '13',
  key: '15r0fr'
}], ['path', {
  d: 'M20 13.5v3.37a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13.5',
  key: '1na2nq'
}]];
const PackageOpen = props => createComponent(Icon$1, mergeProps(props, {
  name: "PackageOpen",
  iconNode: iconNode$4d
}));
var PackageOpen$1 = PackageOpen;

const iconNode$4c = [['path', {
  d: 'M16 16h6',
  key: '100bgy'
}], ['path', {
  d: 'M19 13v6',
  key: '85cyf1'
}], ['path', {
  d: 'M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14',
  key: 'e7tb2h'
}], ['path', {
  d: 'M16.5 9.4 7.55 4.24',
  key: '10qotr'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}]];
const PackagePlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "PackagePlus",
  iconNode: iconNode$4c
}));
var PackagePlus$1 = PackagePlus;

const iconNode$4b = [['path', {
  d: 'M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14',
  key: 'e7tb2h'
}], ['path', {
  d: 'M16.5 9.4 7.55 4.24',
  key: '10qotr'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}], ['circle', {
  cx: '18.5',
  cy: '15.5',
  r: '2.5',
  key: 'b5zd12'
}], ['path', {
  d: 'M20.27 17.27 22 19',
  key: '1l4muz'
}]];
const PackageSearch = props => createComponent(Icon$1, mergeProps(props, {
  name: "PackageSearch",
  iconNode: iconNode$4b
}));
var PackageSearch$1 = PackageSearch;

const iconNode$4a = [['path', {
  d: 'M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14',
  key: 'e7tb2h'
}], ['path', {
  d: 'M16.5 9.4 7.55 4.24',
  key: '10qotr'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}], ['path', {
  d: 'm17 13 5 5m-5 0 5-5',
  key: 'im3w4b'
}]];
const PackageX = props => createComponent(Icon$1, mergeProps(props, {
  name: "PackageX",
  iconNode: iconNode$4a
}));
var PackageX$1 = PackageX;

const iconNode$49 = [['line', {
  x1: '16.5',
  y1: '9.4',
  x2: '7.5',
  y2: '4.21',
  key: 'i6f8yp'
}], ['path', {
  d: 'M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z',
  key: 'yt0hxn'
}], ['polyline', {
  points: '3.29 7 12 12 20.71 7',
  key: 'ousv84'
}], ['line', {
  x1: '12',
  y1: '22',
  x2: '12',
  y2: '12',
  key: 'gdv6h4'
}]];
const Package = props => createComponent(Icon$1, mergeProps(props, {
  name: "Package",
  iconNode: iconNode$49
}));
var Package$1 = Package;

const iconNode$48 = [['path', {
  d: 'm19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z',
  key: 'irua1i'
}], ['path', {
  d: 'm5 2 5 5',
  key: '1lls2c'
}], ['path', {
  d: 'M2 13h15',
  key: '1hkzvu'
}], ['path', {
  d: 'M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z',
  key: 'xk76lq'
}]];
const PaintBucket = props => createComponent(Icon$1, mergeProps(props, {
  name: "PaintBucket",
  iconNode: iconNode$48
}));
var PaintBucket$1 = PaintBucket;

const iconNode$47 = [['path', {
  d: 'M14 19.9V16h3a2 2 0 0 0 2-2v-2H5v2c0 1.1.9 2 2 2h3v3.9a2 2 0 1 0 4 0Z',
  key: '1c8kta'
}], ['path', {
  d: 'M6 12V2h12v10',
  key: '1esbnf'
}], ['path', {
  d: 'M14 2v4',
  key: 'qmzblu'
}], ['path', {
  d: 'M10 2v2',
  key: '7u0qdc'
}]];
const Paintbrush2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Paintbrush2",
  iconNode: iconNode$47
}));
var Paintbrush2$1 = Paintbrush2;

const iconNode$46 = [['path', {
  d: 'M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z',
  key: 'm6k5sh'
}], ['path', {
  d: 'M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7',
  key: 'arzq70'
}], ['path', {
  d: 'M14.5 17.5 4.5 15',
  key: 's7fvrz'
}]];
const Paintbrush = props => createComponent(Icon$1, mergeProps(props, {
  name: "Paintbrush",
  iconNode: iconNode$46
}));
var Paintbrush$1 = Paintbrush;

const iconNode$45 = [['circle', {
  cx: '13.5',
  cy: '6.5',
  r: '.5',
  key: '1xcu5'
}], ['circle', {
  cx: '17.5',
  cy: '10.5',
  r: '.5',
  key: '736e4u'
}], ['circle', {
  cx: '8.5',
  cy: '7.5',
  r: '.5',
  key: 'clrty'
}], ['circle', {
  cx: '6.5',
  cy: '12.5',
  r: '.5',
  key: '1s4xz9'
}], ['path', {
  d: 'M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z',
  key: '12rzf8'
}]];
const Palette = props => createComponent(Icon$1, mergeProps(props, {
  name: "Palette",
  iconNode: iconNode$45
}));
var Palette$1 = Palette;

const iconNode$44 = [['path', {
  d: 'M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4',
  key: 'foxbe7'
}], ['path', {
  d: 'M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3',
  key: '18arnh'
}], ['path', {
  d: 'M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35z',
  key: 'epoumf'
}], ['path', {
  d: 'M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14',
  key: 'ft0feo'
}]];
const Palmtree = props => createComponent(Icon$1, mergeProps(props, {
  name: "Palmtree",
  iconNode: iconNode$44
}));
var Palmtree$1 = Palmtree;

const iconNode$43 = [['path', {
  d: 'm21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48',
  key: '1u3ebp'
}]];
const Paperclip = props => createComponent(Icon$1, mergeProps(props, {
  name: "Paperclip",
  iconNode: iconNode$43
}));
var Paperclip$1 = Paperclip;

const iconNode$42 = [['path', {
  d: 'M5.8 11.3 2 22l10.7-3.79',
  key: 'gwxi1d'
}], ['path', {
  d: 'M4 3h.01',
  key: '1vcuye'
}], ['path', {
  d: 'M22 8h.01',
  key: '1mrtc2'
}], ['path', {
  d: 'M15 2h.01',
  key: '1cjtqr'
}], ['path', {
  d: 'M22 20h.01',
  key: '1mrys2'
}], ['path', {
  d: 'm22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12v0c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10',
  key: 'bpx1uq'
}], ['path', {
  d: 'm22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11v0c-.11.7-.72 1.22-1.43 1.22H17',
  key: '1pd0s7'
}], ['path', {
  d: 'm11 2 .33.82c.34.86-.2 1.82-1.11 1.98v0C9.52 4.9 9 5.52 9 6.23V7',
  key: 'zq5xbz'
}], ['path', {
  d: 'M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z',
  key: '4kbmks'
}]];
const PartyPopper = props => createComponent(Icon$1, mergeProps(props, {
  name: "PartyPopper",
  iconNode: iconNode$42
}));
var PartyPopper$1 = PartyPopper;

const iconNode$41 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '10',
  y1: '15',
  x2: '10',
  y2: '9',
  key: '2cxng6'
}], ['line', {
  x1: '14',
  y1: '15',
  x2: '14',
  y2: '9',
  key: 'wsglx2'
}]];
const PauseCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "PauseCircle",
  iconNode: iconNode$41
}));
var PauseCircle$1 = PauseCircle;

const iconNode$40 = [['path', {
  d: 'M10 15V9',
  key: '1lckn7'
}], ['path', {
  d: 'M14 15V9',
  key: '1muqhk'
}], ['path', {
  d: 'M7.714 2h8.572L22 7.714v8.572L16.286 22H7.714L2 16.286V7.714L7.714 2z',
  key: '1m7qra'
}]];
const PauseOctagon = props => createComponent(Icon$1, mergeProps(props, {
  name: "PauseOctagon",
  iconNode: iconNode$40
}));
var PauseOctagon$1 = PauseOctagon;

const iconNode$3$ = [['rect', {
  x: '6',
  y: '4',
  width: '4',
  height: '16',
  key: '5yltu4'
}], ['rect', {
  x: '14',
  y: '4',
  width: '4',
  height: '16',
  key: 'duxydb'
}]];
const Pause = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pause",
  iconNode: iconNode$3$
}));
var Pause$1 = Pause;

const iconNode$3_ = [['path', {
  d: 'm12 19 7-7 3 3-7 7-3-3z',
  key: 'rklqx2'
}], ['path', {
  d: 'm18 13-1.5-7.5L2 2l3.5 14.5L13 18l5-5z',
  key: '1et58u'
}], ['path', {
  d: 'm2 2 7.586 7.586',
  key: 'etlp93'
}], ['circle', {
  cx: '11',
  cy: '11',
  r: '2',
  key: 'xmgehs'
}]];
const PenTool = props => createComponent(Icon$1, mergeProps(props, {
  name: "PenTool",
  iconNode: iconNode$3_
}));
var PenTool$1 = PenTool;

const iconNode$3Z = [['line', {
  x1: '18',
  y1: '2',
  x2: '22',
  y2: '6',
  key: '1k5sg2'
}], ['path', {
  d: 'M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z',
  key: '12iwkt'
}]];
const Pencil = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pencil",
  iconNode: iconNode$3Z
}));
var Pencil$1 = Pencil;

const iconNode$3Y = [['line', {
  x1: '19',
  y1: '5',
  x2: '5',
  y2: '19',
  key: 't1677v'
}], ['circle', {
  cx: '6.5',
  cy: '6.5',
  r: '2.5',
  key: '4mh3h7'
}], ['circle', {
  cx: '17.5',
  cy: '17.5',
  r: '2.5',
  key: '1mdrzq'
}]];
const Percent = props => createComponent(Icon$1, mergeProps(props, {
  name: "Percent",
  iconNode: iconNode$3Y
}));
var Percent$1 = Percent;

const iconNode$3X = [['circle', {
  cx: '12',
  cy: '5',
  r: '1',
  key: 'gxeob9'
}], ['path', {
  d: 'm9 20 3-6 3 6',
  key: 'se2kox'
}], ['path', {
  d: 'm6 8 6 2 6-2',
  key: '4o3us4'
}], ['path', {
  d: 'M12 10v4',
  key: '1kjpxc'
}]];
const PersonStanding = props => createComponent(Icon$1, mergeProps(props, {
  name: "PersonStanding",
  iconNode: iconNode$3X
}));
var PersonStanding$1 = PersonStanding;

const iconNode$3W = [['path', {
  d: 'M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z',
  key: 'foiqr5'
}], ['path', {
  d: 'M14.05 2a9 9 0 0 1 8 7.94',
  key: 'vmijpz'
}], ['path', {
  d: 'M14.05 6A5 5 0 0 1 18 10',
  key: '13nbpp'
}]];
const PhoneCall = props => createComponent(Icon$1, mergeProps(props, {
  name: "PhoneCall",
  iconNode: iconNode$3W
}));
var PhoneCall$1 = PhoneCall;

const iconNode$3V = [['polyline', {
  points: '18 2 22 6 18 10',
  key: '6vjanh'
}], ['line', {
  x1: '14',
  y1: '6',
  x2: '22',
  y2: '6',
  key: '1yuov7'
}], ['path', {
  d: 'M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z',
  key: 'foiqr5'
}]];
const PhoneForwarded = props => createComponent(Icon$1, mergeProps(props, {
  name: "PhoneForwarded",
  iconNode: iconNode$3V
}));
var PhoneForwarded$1 = PhoneForwarded;

const iconNode$3U = [['polyline', {
  points: '16 2 16 8 22 8',
  key: '1ygljm'
}], ['line', {
  x1: '22',
  y1: '2',
  x2: '16',
  y2: '8',
  key: 'kb9lty'
}], ['path', {
  d: 'M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z',
  key: 'foiqr5'
}]];
const PhoneIncoming = props => createComponent(Icon$1, mergeProps(props, {
  name: "PhoneIncoming",
  iconNode: iconNode$3U
}));
var PhoneIncoming$1 = PhoneIncoming;

const iconNode$3T = [['line', {
  x1: '22',
  y1: '2',
  x2: '16',
  y2: '8',
  key: 'kb9lty'
}], ['line', {
  x1: '16',
  y1: '2',
  x2: '22',
  y2: '8',
  key: '11291p'
}], ['path', {
  d: 'M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z',
  key: 'foiqr5'
}]];
const PhoneMissed = props => createComponent(Icon$1, mergeProps(props, {
  name: "PhoneMissed",
  iconNode: iconNode$3T
}));
var PhoneMissed$1 = PhoneMissed;

const iconNode$3S = [['path', {
  d: 'M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91',
  key: 'z86iuo'
}], ['line', {
  x1: '22',
  y1: '2',
  x2: '2',
  y2: '22',
  key: '1sphze'
}]];
const PhoneOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "PhoneOff",
  iconNode: iconNode$3S
}));
var PhoneOff$1 = PhoneOff;

const iconNode$3R = [['polyline', {
  points: '22 8 22 2 16 2',
  key: '1g204g'
}], ['line', {
  x1: '16',
  y1: '8',
  x2: '22',
  y2: '2',
  key: '1hkegm'
}], ['path', {
  d: 'M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z',
  key: 'foiqr5'
}]];
const PhoneOutgoing = props => createComponent(Icon$1, mergeProps(props, {
  name: "PhoneOutgoing",
  iconNode: iconNode$3R
}));
var PhoneOutgoing$1 = PhoneOutgoing;

const iconNode$3Q = [['path', {
  d: 'M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z',
  key: 'foiqr5'
}]];
const Phone = props => createComponent(Icon$1, mergeProps(props, {
  name: "Phone",
  iconNode: iconNode$3Q
}));
var Phone$1 = Phone;

const iconNode$3P = [['path', {
  d: 'M21.21 15.89A10 10 0 1 1 8 2.83',
  key: 'k2fpak'
}], ['path', {
  d: 'M22 12A10 10 0 0 0 12 2v10z',
  key: '1rfc4y'
}]];
const PieChart = props => createComponent(Icon$1, mergeProps(props, {
  name: "PieChart",
  iconNode: iconNode$3P
}));
var PieChart$1 = PieChart;

const iconNode$3O = [['path', {
  d: 'M19 5c-1.5 0-2.8 1.4-3 2-3.5-1.5-11-.3-11 5 0 1.8 0 3 2 4.5V20h4v-2h3v2h4v-4c1-.5 1.7-1 2-2h2v-4h-2c0-1-.5-1.5-1-2h0V5z',
  key: 'uf6l00'
}], ['path', {
  d: 'M2 9v1c0 1.1.9 2 2 2h1',
  key: 'nm575m'
}], ['path', {
  d: 'M16 11h0',
  key: 'k2aug8'
}]];
const PiggyBank = props => createComponent(Icon$1, mergeProps(props, {
  name: "PiggyBank",
  iconNode: iconNode$3O
}));
var PiggyBank$1 = PiggyBank;

const iconNode$3N = [['path', {
  d: 'M13 4v16',
  key: '8vvj80'
}], ['path', {
  d: 'M17 4v16',
  key: '7dpous'
}], ['path', {
  d: 'M19 4H9.5a4.5 4.5 0 0 0 0 9H13',
  key: 'sh4n9v'
}]];
const Pilcrow = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pilcrow",
  iconNode: iconNode$3N
}));
var Pilcrow$1 = Pilcrow;

const iconNode$3M = [['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}], ['line', {
  x1: '12',
  y1: '17',
  x2: '12',
  y2: '22',
  key: 'fb3qrx'
}], ['path', {
  d: 'M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V17h12',
  key: '13x2n8'
}], ['path', {
  d: 'M15 9.34V6h1a2 2 0 0 0 0-4H7.89',
  key: 'reo3ki'
}]];
const PinOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "PinOff",
  iconNode: iconNode$3M
}));
var PinOff$1 = PinOff;

const iconNode$3L = [['line', {
  x1: '12',
  y1: '17',
  x2: '12',
  y2: '22',
  key: 'fb3qrx'
}], ['path', {
  d: 'M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z',
  key: '13yl11'
}]];
const Pin = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pin",
  iconNode: iconNode$3L
}));
var Pin$1 = Pin;

const iconNode$3K = [['path', {
  d: 'm2 22 1-1h3l9-9',
  key: '1sre89'
}], ['path', {
  d: 'M3 21v-3l9-9',
  key: 'hpe2y6'
}], ['path', {
  d: 'm15 6 3.4-3.4a2.1 2.1 0 1 1 3 3L18 9l.4.4a2.1 2.1 0 1 1-3 3l-3.8-3.8a2.1 2.1 0 1 1 3-3l.4.4Z',
  key: '196du1'
}]];
const Pipette = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pipette",
  iconNode: iconNode$3K
}));
var Pipette$1 = Pipette;

const iconNode$3J = [['path', {
  d: 'M15 11h.01',
  key: 'rns66s'
}], ['path', {
  d: 'M11 15h.01',
  key: 'k85uqc'
}], ['path', {
  d: 'M16 16h.01',
  key: '1f9h7w'
}], ['path', {
  d: 'm2 16 20 6-6-20c-3.36.9-6.42 2.67-8.88 5.12A19.876 19.876 0 0 0 2 16Z',
  key: '1akyvp'
}], ['path', {
  d: 'M17 6c-6.29 1.47-9.43 5.13-11 11',
  key: '1dsok0'
}]];
const Pizza = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pizza",
  iconNode: iconNode$3J
}));
var Pizza$1 = Pizza;

const iconNode$3I = [['path', {
  d: 'M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z',
  key: '1v9wt8'
}]];
const Plane = props => createComponent(Icon$1, mergeProps(props, {
  name: "Plane",
  iconNode: iconNode$3I
}));
var Plane$1 = Plane;

const iconNode$3H = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['polygon', {
  points: '10 8 16 12 10 16 10 8',
  key: '1cimsy'
}]];
const PlayCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "PlayCircle",
  iconNode: iconNode$3H
}));
var PlayCircle$1 = PlayCircle;

const iconNode$3G = [['polygon', {
  points: '5 3 19 12 5 21 5 3',
  key: '191637'
}]];
const Play = props => createComponent(Icon$1, mergeProps(props, {
  name: "Play",
  iconNode: iconNode$3G
}));
var Play$1 = Play;

const iconNode$3F = [['path', {
  d: 'M9 2v6',
  key: '17ngun'
}], ['path', {
  d: 'M15 2v6',
  key: 's7yy2p'
}], ['path', {
  d: 'M12 17v5',
  key: 'bb1du9'
}], ['path', {
  d: 'M5 8h14',
  key: 'pcz4l3'
}], ['path', {
  d: 'M6 11V8h12v3a6 6 0 1 1-12 0v0Z',
  key: 'nd4hoy'
}]];
const Plug2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Plug2",
  iconNode: iconNode$3F
}));
var Plug2$1 = Plug2;

const iconNode$3E = [['path', {
  d: 'm13 2-2 2.5h3L12 7',
  key: '1me98u'
}], ['path', {
  d: 'M12 22v-3',
  key: 'kmzjlo'
}], ['path', {
  d: 'M10 13v-2.5',
  key: '1g2mrq'
}], ['path', {
  d: 'M10 12.5v-2',
  key: 'pcvzbb'
}], ['path', {
  d: 'M14 12.5v-2',
  key: 'qv1toj'
}], ['path', {
  d: 'M16 15a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-2z',
  key: '17xmdd'
}]];
const PlugZap = props => createComponent(Icon$1, mergeProps(props, {
  name: "PlugZap",
  iconNode: iconNode$3E
}));
var PlugZap$1 = PlugZap;

const iconNode$3D = [['path', {
  d: 'M12 22v-5',
  key: '1ega77'
}], ['path', {
  d: 'M9 7V2',
  key: '1r97uf'
}], ['path', {
  d: 'M15 7V2',
  key: '1uo4jc'
}], ['path', {
  d: 'M6 13V8h12v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4Z',
  key: '1xki7n'
}]];
const Plug = props => createComponent(Icon$1, mergeProps(props, {
  name: "Plug",
  iconNode: iconNode$3D
}));
var Plug$1 = Plug;

const iconNode$3C = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '16',
  key: '55jlg'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}]];
const PlusCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "PlusCircle",
  iconNode: iconNode$3C
}));
var PlusCircle$1 = PlusCircle;

const iconNode$3B = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '16',
  key: '55jlg'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '16',
  y2: '12',
  key: '1myapg'
}]];
const PlusSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "PlusSquare",
  iconNode: iconNode$3B
}));
var PlusSquare$1 = PlusSquare;

const iconNode$3A = [['line', {
  x1: '12',
  y1: '5',
  x2: '12',
  y2: '19',
  key: 'myz83a'
}], ['line', {
  x1: '5',
  y1: '12',
  x2: '19',
  y2: '12',
  key: '1smlys'
}]];
const Plus = props => createComponent(Icon$1, mergeProps(props, {
  name: "Plus",
  iconNode: iconNode$3A
}));
var Plus$1 = Plus;

const iconNode$3z = [['path', {
  d: 'M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z',
  key: '1mz881'
}], ['polyline', {
  points: '8 10 12 14 16 10',
  key: 'w4mbv5'
}]];
const Pocket = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pocket",
  iconNode: iconNode$3z
}));
var Pocket$1 = Pocket;

const iconNode$3y = [['circle', {
  cx: '12',
  cy: '11',
  r: '1',
  key: '1gvufo'
}], ['path', {
  d: 'M11 17a1 1 0 0 1 2 0c0 .5-.34 3-.5 4.5a.5.5 0 0 1-1 0c-.16-1.5-.5-4-.5-4.5Z',
  key: '1n5fvv'
}], ['path', {
  d: 'M8 14a5 5 0 1 1 8 0',
  key: 'fc81rn'
}], ['path', {
  d: 'M17 18.5a9 9 0 1 0-10 0',
  key: 'jqtxkf'
}]];
const Podcast = props => createComponent(Icon$1, mergeProps(props, {
  name: "Podcast",
  iconNode: iconNode$3y
}));
var Podcast$1 = Podcast;

const iconNode$3x = [['path', {
  d: 'M22 14a8 8 0 0 1-8 8',
  key: '56vcr3'
}], ['path', {
  d: 'M18 11v-1a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0',
  key: '1pp0yd'
}], ['path', {
  d: 'M14 10V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1',
  key: 'u654g'
}], ['path', {
  d: 'M10 9.5V4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v10',
  key: '1e2dtv'
}], ['path', {
  d: 'M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15',
  key: 'g6ys72'
}]];
const Pointer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Pointer",
  iconNode: iconNode$3x
}));
var Pointer$1 = Pointer;

const iconNode$3w = [['path', {
  d: 'M18 7c0-5.333-8-5.333-8 0',
  key: '1prm2n'
}], ['path', {
  d: 'M10 7v14',
  key: '18tmcs'
}], ['path', {
  d: 'M6 21h12',
  key: '4dkmi1'
}], ['path', {
  d: 'M6 13h10',
  key: 'ybwr4a'
}]];
const PoundSterling = props => createComponent(Icon$1, mergeProps(props, {
  name: "PoundSterling",
  iconNode: iconNode$3w
}));
var PoundSterling$1 = PoundSterling;

const iconNode$3v = [['path', {
  d: 'M18.36 6.64A9 9 0 0 1 20.77 15',
  key: 'dxknvb'
}], ['path', {
  d: 'M6.16 6.16a9 9 0 1 0 12.68 12.68',
  key: '1x7qb5'
}], ['path', {
  d: 'M12 2v4',
  key: '3427ic'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}]];
const PowerOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "PowerOff",
  iconNode: iconNode$3v
}));
var PowerOff$1 = PowerOff;

const iconNode$3u = [['path', {
  d: 'M18.36 6.64a9 9 0 1 1-12.73 0',
  key: 'phirl6'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '12',
  key: '1d1p48'
}]];
const Power = props => createComponent(Icon$1, mergeProps(props, {
  name: "Power",
  iconNode: iconNode$3u
}));
var Power$1 = Power;

const iconNode$3t = [['polyline', {
  points: '6 9 6 2 18 2 18 9',
  key: '1306q4'
}], ['path', {
  d: 'M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2',
  key: '143wyd'
}], ['rect', {
  x: '6',
  y: '14',
  width: '12',
  height: '8',
  key: 'emw7yt'
}]];
const Printer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Printer",
  iconNode: iconNode$3t
}));
var Printer$1 = Printer;

const iconNode$3s = [['path', {
  d: 'M19.439 7.85c-.049.322.059.648.289.878l1.568 1.568c.47.47.706 1.087.706 1.704s-.235 1.233-.706 1.704l-1.611 1.611a.98.98 0 0 1-.837.276c-.47-.07-.802-.48-.968-.925a2.501 2.501 0 1 0-3.214 3.214c.446.166.855.497.925.968a.979.979 0 0 1-.276.837l-1.61 1.61a2.404 2.404 0 0 1-1.705.707 2.402 2.402 0 0 1-1.704-.706l-1.568-1.568a1.026 1.026 0 0 0-.877-.29c-.493.074-.84.504-1.02.968a2.5 2.5 0 1 1-3.237-3.237c.464-.18.894-.527.967-1.02a1.026 1.026 0 0 0-.289-.877l-1.568-1.568A2.402 2.402 0 0 1 1.998 12c0-.617.236-1.234.706-1.704L4.23 8.77c.24-.24.581-.353.917-.303.515.077.877.528 1.073 1.01a2.5 2.5 0 1 0 3.259-3.259c-.482-.196-.933-.558-1.01-1.073-.05-.336.062-.676.303-.917l1.525-1.525A2.402 2.402 0 0 1 12 1.998c.617 0 1.234.236 1.704.706l1.568 1.568c.23.23.556.338.877.29.493-.074.84-.504 1.02-.968a2.5 2.5 0 1 1 3.237 3.237c-.464.18-.894.527-.967 1.02Z',
  key: 'i0oyt7'
}]];
const Puzzle = props => createComponent(Icon$1, mergeProps(props, {
  name: "Puzzle",
  iconNode: iconNode$3s
}));
var Puzzle$1 = Puzzle;

const iconNode$3r = [['rect', {
  x: '3',
  y: '3',
  width: '5',
  height: '5',
  rx: '1',
  key: 'fue5ao'
}], ['rect', {
  x: '16',
  y: '3',
  width: '5',
  height: '5',
  rx: '1',
  key: '1narh3'
}], ['rect', {
  x: '3',
  y: '16',
  width: '5',
  height: '5',
  rx: '1',
  key: '1ovwlo'
}], ['path', {
  d: 'M21 16h-3a2 2 0 0 0-2 2v3',
  key: '177gqh'
}], ['path', {
  d: 'M21 21v.01',
  key: 'ents32'
}], ['path', {
  d: 'M12 7v3a2 2 0 0 1-2 2H7',
  key: '8crl2c'
}], ['path', {
  d: 'M3 12h.01',
  key: 'nlz23k'
}], ['path', {
  d: 'M12 3h.01',
  key: 'n36tog'
}], ['path', {
  d: 'M12 16v.01',
  key: '133mhm'
}], ['path', {
  d: 'M16 12h1',
  key: '1slzba'
}], ['path', {
  d: 'M21 12v.01',
  key: '1lwtk9'
}], ['path', {
  d: 'M12 21v-1',
  key: '1880an'
}]];
const QrCode = props => createComponent(Icon$1, mergeProps(props, {
  name: "QrCode",
  iconNode: iconNode$3r
}));
var QrCode$1 = QrCode;

const iconNode$3q = [['path', {
  d: 'M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z',
  key: '4rm80e'
}], ['path', {
  d: 'M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z',
  key: '10za9r'
}]];
const Quote = props => createComponent(Icon$1, mergeProps(props, {
  name: "Quote",
  iconNode: iconNode$3q
}));
var Quote$1 = Quote;

const iconNode$3p = [['path', {
  d: 'M5 16v2',
  key: 'g5qcv5'
}], ['path', {
  d: 'M19 16v2',
  key: '1gbaio'
}], ['rect', {
  x: '2',
  y: '8',
  width: '20',
  height: '8',
  rx: '2',
  key: '1xflse'
}], ['path', {
  d: 'M18 12h0',
  key: '1ucjzd'
}]];
const RadioReceiver = props => createComponent(Icon$1, mergeProps(props, {
  name: "RadioReceiver",
  iconNode: iconNode$3p
}));
var RadioReceiver$1 = RadioReceiver;

const iconNode$3o = [['circle', {
  cx: '12',
  cy: '12',
  r: '2',
  key: '1c9p78'
}], ['path', {
  d: 'M4.93 19.07a10 10 0 0 1 0-14.14',
  key: 'r41b39'
}], ['path', {
  d: 'M7.76 16.24a6 6 0 0 1-1.3-1.95 6 6 0 0 1 0-4.59 6 6 0 0 1 1.3-1.95',
  key: '1pc8et'
}], ['path', {
  d: 'M16.24 7.76a6 6 0 0 1 1.3 2 6 6 0 0 1 0 4.59 6 6 0 0 1-1.3 1.95',
  key: '8dzjga'
}], ['path', {
  d: 'M19.07 4.93a10 10 0 0 1 0 14.14',
  key: '1kegas'
}]];
const Radio = props => createComponent(Icon$1, mergeProps(props, {
  name: "Radio",
  iconNode: iconNode$3o
}));
var Radio$1 = Radio;

const iconNode$3n = [['rect', {
  x: '2',
  y: '6',
  width: '20',
  height: '12',
  rx: '2',
  key: '1wpnh2'
}]];
const RectangleHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "RectangleHorizontal",
  iconNode: iconNode$3n
}));
var RectangleHorizontal$1 = RectangleHorizontal;

const iconNode$3m = [['rect', {
  x: '6',
  y: '2',
  width: '12',
  height: '20',
  rx: '2',
  key: '749fme'
}]];
const RectangleVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "RectangleVertical",
  iconNode: iconNode$3m
}));
var RectangleVertical$1 = RectangleVertical;

const iconNode$3l = [['path', {
  d: 'M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5',
  key: 'x6z5xu'
}], ['path', {
  d: 'M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12',
  key: '1x4zh5'
}], ['path', {
  d: 'm14 16-3 3 3 3',
  key: 'f6jyew'
}], ['path', {
  d: 'M8.293 13.596 7.196 9.5 3.1 10.598',
  key: 'wf1obh'
}], ['path', {
  d: 'm9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843',
  key: '9tzpgr'
}], ['path', {
  d: 'm13.378 9.633 4.096 1.098 1.097-4.096',
  key: '1oe83g'
}]];
const Recycle = props => createComponent(Icon$1, mergeProps(props, {
  name: "Recycle",
  iconNode: iconNode$3l
}));
var Recycle$1 = Recycle;

const iconNode$3k = [['path', {
  d: 'm15 14 5-5-5-5',
  key: '12vg1m'
}], ['path', {
  d: 'M20 9H9.5A5.5 5.5 0 0 0 4 14.5v0A5.5 5.5 0 0 0 9.5 20H13',
  key: '19mnr4'
}]];
const Redo2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Redo2",
  iconNode: iconNode$3k
}));
var Redo2$1 = Redo2;

const iconNode$3j = [['path', {
  d: 'M21 7v6h-6',
  key: '3ptur4'
}], ['path', {
  d: 'M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7',
  key: '1kgawr'
}]];
const Redo = props => createComponent(Icon$1, mergeProps(props, {
  name: "Redo",
  iconNode: iconNode$3j
}));
var Redo$1 = Redo;

const iconNode$3i = [['path', {
  d: 'M3 2v6h6',
  key: '18ldww'
}], ['path', {
  d: 'M21 12A9 9 0 0 0 6 5.3L3 8',
  key: '1pbrqz'
}], ['path', {
  d: 'M21 22v-6h-6',
  key: 'usdfbe'
}], ['path', {
  d: 'M3 12a9 9 0 0 0 15 6.7l3-2.7',
  key: '1hosoe'
}]];
const RefreshCcw = props => createComponent(Icon$1, mergeProps(props, {
  name: "RefreshCcw",
  iconNode: iconNode$3i
}));
var RefreshCcw$1 = RefreshCcw;

const iconNode$3h = [['path', {
  d: 'M21 2v6h-6',
  key: '1lwg0q'
}], ['path', {
  d: 'M3 12a9 9 0 0 1 15-6.7L21 8',
  key: 'vaktt2'
}], ['path', {
  d: 'M3 22v-6h6',
  key: '6llvyv'
}], ['path', {
  d: 'M21 12a9 9 0 0 1-15 6.7L3 16',
  key: 'i52hsp'
}]];
const RefreshCw = props => createComponent(Icon$1, mergeProps(props, {
  name: "RefreshCw",
  iconNode: iconNode$3h
}));
var RefreshCw$1 = RefreshCw;

const iconNode$3g = [['path', {
  d: 'M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z',
  key: 'fpq118'
}], ['path', {
  d: 'M5 10h14',
  key: 'elsbfy'
}], ['path', {
  d: 'M15 7v6',
  key: '1nx30x'
}]];
const Refrigerator = props => createComponent(Icon$1, mergeProps(props, {
  name: "Refrigerator",
  iconNode: iconNode$3g
}));
var Refrigerator$1 = Refrigerator;

const iconNode$3f = [['path', {
  d: 'M17 3v10',
  key: '15fgeh'
}], ['path', {
  d: 'm12.67 5.5 8.66 5',
  key: '1gpheq'
}], ['path', {
  d: 'm12.67 10.5 8.66-5',
  key: '1dkfa6'
}], ['path', {
  d: 'M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z',
  key: 'swwfx4'
}]];
const Regex = props => createComponent(Icon$1, mergeProps(props, {
  name: "Regex",
  iconNode: iconNode$3f
}));
var Regex$1 = Regex;

const iconNode$3e = [['path', {
  d: 'm17 2 4 4-4 4',
  key: 'nntrym'
}], ['path', {
  d: 'M3 11v-1a4 4 0 0 1 4-4h14',
  key: '84bu3i'
}], ['path', {
  d: 'm7 22-4-4 4-4',
  key: '1wqhfi'
}], ['path', {
  d: 'M21 13v1a4 4 0 0 1-4 4H3',
  key: '1rx37r'
}], ['path', {
  d: 'M11 10h1v4',
  key: '70cz1p'
}]];
const Repeat1 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Repeat1",
  iconNode: iconNode$3e
}));
var Repeat1$1 = Repeat1;

const iconNode$3d = [['path', {
  d: 'm17 2 4 4-4 4',
  key: 'nntrym'
}], ['path', {
  d: 'M3 11v-1a4 4 0 0 1 4-4h14',
  key: '84bu3i'
}], ['path', {
  d: 'm7 22-4-4 4-4',
  key: '1wqhfi'
}], ['path', {
  d: 'M21 13v1a4 4 0 0 1-4 4H3',
  key: '1rx37r'
}]];
const Repeat = props => createComponent(Icon$1, mergeProps(props, {
  name: "Repeat",
  iconNode: iconNode$3d
}));
var Repeat$1 = Repeat;

const iconNode$3c = [['polyline', {
  points: '7 17 2 12 7 7',
  key: 't83bqg'
}], ['polyline', {
  points: '12 17 7 12 12 7',
  key: '1g4ajm'
}], ['path', {
  d: 'M22 18v-2a4 4 0 0 0-4-4H7',
  key: '1fcyog'
}]];
const ReplyAll = props => createComponent(Icon$1, mergeProps(props, {
  name: "ReplyAll",
  iconNode: iconNode$3c
}));
var ReplyAll$1 = ReplyAll;

const iconNode$3b = [['polyline', {
  points: '9 17 4 12 9 7',
  key: 'hvgpf2'
}], ['path', {
  d: 'M20 18v-2a4 4 0 0 0-4-4H4',
  key: '5vmcpk'
}]];
const Reply = props => createComponent(Icon$1, mergeProps(props, {
  name: "Reply",
  iconNode: iconNode$3b
}));
var Reply$1 = Reply;

const iconNode$3a = [['polygon', {
  points: '11 19 2 12 11 5 11 19',
  key: '14yba5'
}], ['polygon', {
  points: '22 19 13 12 22 5 22 19',
  key: '1pi1cj'
}]];
const Rewind = props => createComponent(Icon$1, mergeProps(props, {
  name: "Rewind",
  iconNode: iconNode$3a
}));
var Rewind$1 = Rewind;

const iconNode$39 = [['path', {
  d: 'M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z',
  key: 'm3kijz'
}], ['path', {
  d: 'm12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z',
  key: '1fmvmk'
}], ['path', {
  d: 'M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0',
  key: '1f8sc4'
}], ['path', {
  d: 'M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5',
  key: 'qeys4'
}]];
const Rocket = props => createComponent(Icon$1, mergeProps(props, {
  name: "Rocket",
  iconNode: iconNode$39
}));
var Rocket$1 = Rocket;

const iconNode$38 = [['polyline', {
  points: '3.5 2 6.5 12.5 18 12.5',
  key: 'y3iy52'
}], ['line', {
  x1: '9.5',
  y1: '12.5',
  x2: '5.5',
  y2: '20',
  key: 'ivgihp'
}], ['line', {
  x1: '15',
  y1: '12.5',
  x2: '18.5',
  y2: '20',
  key: '1palb4'
}], ['path', {
  d: 'M2.75 18a13 13 0 0 0 18.5 0',
  key: '1nquas'
}]];
const RockingChair = props => createComponent(Icon$1, mergeProps(props, {
  name: "RockingChair",
  iconNode: iconNode$38
}));
var RockingChair$1 = RockingChair;

const iconNode$37 = [['path', {
  d: 'M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2',
  key: '10n0gc'
}], ['path', {
  d: 'm15.194 13.707 3.814 1.86-1.86 3.814',
  key: '16shm9'
}], ['path', {
  d: 'M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4',
  key: '1lxi77'
}]];
const Rotate3d = props => createComponent(Icon$1, mergeProps(props, {
  name: "Rotate3d",
  iconNode: iconNode$37
}));
var Rotate3d$1 = Rotate3d;

const iconNode$36 = [['path', {
  d: 'M3 2v6h6',
  key: '18ldww'
}], ['path', {
  d: 'M3 13a9 9 0 1 0 3-7.7L3 8',
  key: 'aahkch'
}]];
const RotateCcw = props => createComponent(Icon$1, mergeProps(props, {
  name: "RotateCcw",
  iconNode: iconNode$36
}));
var RotateCcw$1 = RotateCcw;

const iconNode$35 = [['path', {
  d: 'M21 2v6h-6',
  key: '1lwg0q'
}], ['path', {
  d: 'M21 13a9 9 0 1 1-3-7.7L21 8',
  key: 'vix499'
}]];
const RotateCw = props => createComponent(Icon$1, mergeProps(props, {
  name: "RotateCw",
  iconNode: iconNode$35
}));
var RotateCw$1 = RotateCw;

const iconNode$34 = [['path', {
  d: 'M4 11a9 9 0 0 1 9 9',
  key: 'pv89mb'
}], ['path', {
  d: 'M4 4a16 16 0 0 1 16 16',
  key: 'k0647b'
}], ['circle', {
  cx: '5',
  cy: '19',
  r: '1',
  key: 'bfqh0e'
}]];
const Rss = props => createComponent(Icon$1, mergeProps(props, {
  name: "Rss",
  iconNode: iconNode$34
}));
var Rss$1 = Rss;

const iconNode$33 = [['path', {
  d: 'M21.3 8.7 8.7 21.3c-1 1-2.5 1-3.4 0l-2.6-2.6c-1-1-1-2.5 0-3.4L15.3 2.7c1-1 2.5-1 3.4 0l2.6 2.6c1 1 1 2.5 0 3.4Z',
  key: '14xb44'
}], ['path', {
  d: 'm7.5 10.5 2 2',
  key: '3h1c69'
}], ['path', {
  d: 'm10.5 7.5 2 2',
  key: '1lvsmz'
}], ['path', {
  d: 'm13.5 4.5 2 2',
  key: '1i616n'
}], ['path', {
  d: 'm4.5 13.5 2 2',
  key: '16iojn'
}]];
const Ruler = props => createComponent(Icon$1, mergeProps(props, {
  name: "Ruler",
  iconNode: iconNode$33
}));
var Ruler$1 = Ruler;

const iconNode$32 = [['path', {
  d: 'M14 11c5.333 0 5.333-8 0-8',
  key: '92e629'
}], ['path', {
  d: 'M6 11h8',
  key: '1cr2u4'
}], ['path', {
  d: 'M6 15h8',
  key: '1y8f6l'
}], ['path', {
  d: 'M9 21V3',
  key: '1jd2g6'
}], ['path', {
  d: 'M9 3h5',
  key: '8bgvcw'
}]];
const RussianRuble = props => createComponent(Icon$1, mergeProps(props, {
  name: "RussianRuble",
  iconNode: iconNode$32
}));
var RussianRuble$1 = RussianRuble;

const iconNode$31 = [['path', {
  d: 'M22 18H2a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4Z',
  key: '1404fh'
}], ['path', {
  d: 'M21 14 10 2 3 14h18Z',
  key: '1nzg7v'
}], ['path', {
  d: 'M10 2v16',
  key: '1labyt'
}]];
const Sailboat = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sailboat",
  iconNode: iconNode$31
}));
var Sailboat$1 = Sailboat;

const iconNode$30 = [['path', {
  d: 'M7 21h10',
  key: '1b0cd5'
}], ['path', {
  d: 'M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z',
  key: '4rw317'
}], ['path', {
  d: 'M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1',
  key: '10xrj0'
}], ['path', {
  d: 'm13 12 4-4',
  key: '1hckqy'
}], ['path', {
  d: 'M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2',
  key: '1p4srx'
}]];
const Salad = props => createComponent(Icon$1, mergeProps(props, {
  name: "Salad",
  iconNode: iconNode$30
}));
var Salad$1 = Salad;

const iconNode$2$ = [['path', {
  d: 'M3 11v3a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-3',
  key: '34v9d7'
}], ['path', {
  d: 'M12 19H4a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3.83',
  key: '1k5vfb'
}], ['path', {
  d: 'm3 11 7.77-6.04a2 2 0 0 1 2.46 0L21 11H3Z',
  key: '1oe7l6'
}], ['path', {
  d: 'M12.97 19.77 7 15h12.5l-3.75 4.5a2 2 0 0 1-2.78.27Z',
  key: '1ts2ri'
}]];
const Sandwich = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sandwich",
  iconNode: iconNode$2$
}));
var Sandwich$1 = Sandwich;

const iconNode$2_ = [['path', {
  d: 'M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z',
  key: '1owoqh'
}], ['polyline', {
  points: '17 21 17 13 7 13 7 21',
  key: '1md35c'
}], ['polyline', {
  points: '7 3 7 8 15 8',
  key: '8nz8an'
}]];
const Save = props => createComponent(Icon$1, mergeProps(props, {
  name: "Save",
  iconNode: iconNode$2_
}));
var Save$1 = Save;

const iconNode$2Z = [['path', {
  d: 'M5 7v12h12',
  key: 'vtaa4r'
}], ['path', {
  d: 'm5 19 6-6',
  key: 'jh6hbb'
}], ['rect', {
  x: '3',
  y: '3',
  width: '4',
  height: '4',
  rx: '1',
  key: '1qeirs'
}], ['rect', {
  x: '17',
  y: '17',
  width: '4',
  height: '4',
  rx: '1',
  key: 'b22pg0'
}]];
const Scale3d = props => createComponent(Icon$1, mergeProps(props, {
  name: "Scale3d",
  iconNode: iconNode$2Z
}));
var Scale3d$1 = Scale3d;

const iconNode$2Y = [['path', {
  d: 'm16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z',
  key: '7g6ntu'
}], ['path', {
  d: 'm2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z',
  key: 'ijws7r'
}], ['path', {
  d: 'M7 21h10',
  key: '1b0cd5'
}], ['path', {
  d: 'M12 3v18',
  key: '108xh3'
}], ['path', {
  d: 'M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2',
  key: '3gwbw2'
}]];
const Scale = props => createComponent(Icon$1, mergeProps(props, {
  name: "Scale",
  iconNode: iconNode$2Y
}));
var Scale$1 = Scale;

const iconNode$2X = [['path', {
  d: 'M21 3 9 15',
  key: '15kdhq'
}], ['path', {
  d: 'M12 3H3v18h18v-9',
  key: '8suug0'
}], ['path', {
  d: 'M16 3h5v5',
  key: '1806ms'
}], ['path', {
  d: 'M14 15H9v-5',
  key: 'pi4jk9'
}]];
const Scaling = props => createComponent(Icon$1, mergeProps(props, {
  name: "Scaling",
  iconNode: iconNode$2X
}));
var Scaling$1 = Scaling;

const iconNode$2W = [['path', {
  d: 'M3 7V5a2 2 0 0 1 2-2h2',
  key: 'aa7l1z'
}], ['path', {
  d: 'M17 3h2a2 2 0 0 1 2 2v2',
  key: '4qcy5o'
}], ['path', {
  d: 'M21 17v2a2 2 0 0 1-2 2h-2',
  key: '6vwrx8'
}], ['path', {
  d: 'M7 21H5a2 2 0 0 1-2-2v-2',
  key: 'ioqczr'
}], ['path', {
  d: 'M8 14s1.5 2 4 2 4-2 4-2',
  key: '1y1vjs'
}], ['path', {
  d: 'M9 9h.01',
  key: '1q5me6'
}], ['path', {
  d: 'M15 9h.01',
  key: 'x1ddxp'
}]];
const ScanFace = props => createComponent(Icon$1, mergeProps(props, {
  name: "ScanFace",
  iconNode: iconNode$2W
}));
var ScanFace$1 = ScanFace;

const iconNode$2V = [['path', {
  d: 'M3 7V5a2 2 0 0 1 2-2h2',
  key: 'aa7l1z'
}], ['path', {
  d: 'M17 3h2a2 2 0 0 1 2 2v2',
  key: '4qcy5o'
}], ['path', {
  d: 'M21 17v2a2 2 0 0 1-2 2h-2',
  key: '6vwrx8'
}], ['path', {
  d: 'M7 21H5a2 2 0 0 1-2-2v-2',
  key: 'ioqczr'
}], ['line', {
  x1: '7',
  y1: '12',
  x2: '17',
  y2: '12',
  key: 'bc9tui'
}]];
const ScanLine = props => createComponent(Icon$1, mergeProps(props, {
  name: "ScanLine",
  iconNode: iconNode$2V
}));
var ScanLine$1 = ScanLine;

const iconNode$2U = [['path', {
  d: 'M3 7V5a2 2 0 0 1 2-2h2',
  key: 'aa7l1z'
}], ['path', {
  d: 'M17 3h2a2 2 0 0 1 2 2v2',
  key: '4qcy5o'
}], ['path', {
  d: 'M21 17v2a2 2 0 0 1-2 2h-2',
  key: '6vwrx8'
}], ['path', {
  d: 'M7 21H5a2 2 0 0 1-2-2v-2',
  key: 'ioqczr'
}]];
const Scan = props => createComponent(Icon$1, mergeProps(props, {
  name: "Scan",
  iconNode: iconNode$2U
}));
var Scan$1 = Scan;

const iconNode$2T = [['circle', {
  cx: '6',
  cy: '6',
  r: '3',
  key: '1lh9wr'
}], ['circle', {
  cx: '6',
  cy: '18',
  r: '3',
  key: 'fqmcym'
}], ['line', {
  x1: '20',
  y1: '4',
  x2: '8.12',
  y2: '15.88',
  key: '3cwkde'
}], ['line', {
  x1: '14.47',
  y1: '14.48',
  x2: '20',
  y2: '20',
  key: '1keerz'
}], ['line', {
  x1: '8.12',
  y1: '8.12',
  x2: '12',
  y2: '12',
  key: 'spxzcb'
}]];
const Scissors = props => createComponent(Icon$1, mergeProps(props, {
  name: "Scissors",
  iconNode: iconNode$2T
}));
var Scissors$1 = Scissors;

const iconNode$2S = [['path', {
  d: 'M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3',
  key: 'i8wdob'
}], ['path', {
  d: 'M8 21h8',
  key: '1ev6f3'
}], ['path', {
  d: 'M12 17v4',
  key: '1riwvh'
}], ['path', {
  d: 'm22 3-5 5',
  key: '12jva0'
}], ['path', {
  d: 'm17 3 5 5',
  key: 'k36vhe'
}]];
const ScreenShareOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "ScreenShareOff",
  iconNode: iconNode$2S
}));
var ScreenShareOff$1 = ScreenShareOff;

const iconNode$2R = [['path', {
  d: 'M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3',
  key: 'i8wdob'
}], ['path', {
  d: 'M8 21h8',
  key: '1ev6f3'
}], ['path', {
  d: 'M12 17v4',
  key: '1riwvh'
}], ['path', {
  d: 'm17 8 5-5',
  key: 'fqif7o'
}], ['path', {
  d: 'M17 3h5v5',
  key: '1o3tu8'
}]];
const ScreenShare = props => createComponent(Icon$1, mergeProps(props, {
  name: "ScreenShare",
  iconNode: iconNode$2R
}));
var ScreenShare$1 = ScreenShare;

const iconNode$2Q = [['path', {
  d: 'M10 17v2a2 2 0 0 1-2 2v0a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v3h3',
  key: '1knuaj'
}], ['path', {
  d: 'M22 17v2a2 2 0 0 1-2 2H8',
  key: '62edg8'
}], ['path', {
  d: 'M19 17V5a2 2 0 0 0-2-2H4',
  key: 'zz82l3'
}], ['path', {
  d: 'M22 17H10',
  key: '1dr9mz'
}]];
const Scroll = props => createComponent(Icon$1, mergeProps(props, {
  name: "Scroll",
  iconNode: iconNode$2Q
}));
var Scroll$1 = Scroll;

const iconNode$2P = [['circle', {
  cx: '11',
  cy: '11',
  r: '8',
  key: '4ej97u'
}], ['line', {
  x1: '21',
  y1: '21',
  x2: '16.65',
  y2: '16.65',
  key: '1p50m8'
}]];
const Search = props => createComponent(Icon$1, mergeProps(props, {
  name: "Search",
  iconNode: iconNode$2P
}));
var Search$1 = Search;

const iconNode$2O = [['line', {
  x1: '22',
  y1: '2',
  x2: '11',
  y2: '13',
  key: '10auo0'
}], ['polygon', {
  points: '22 2 15 22 11 13 2 9 22 2',
  key: '12uapv'
}]];
const Send = props => createComponent(Icon$1, mergeProps(props, {
  name: "Send",
  iconNode: iconNode$2O
}));
var Send$1 = Send;

const iconNode$2N = [['line', {
  x1: '3',
  y1: '12',
  x2: '21',
  y2: '12',
  key: '1aui40'
}], ['polyline', {
  points: '8 8 12 4 16 8',
  key: 'zo8t4w'
}], ['polyline', {
  points: '16 16 12 20 8 16',
  key: '1oyrid'
}]];
const SeparatorHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "SeparatorHorizontal",
  iconNode: iconNode$2N
}));
var SeparatorHorizontal$1 = SeparatorHorizontal;

const iconNode$2M = [['line', {
  x1: '12',
  y1: '3',
  x2: '12',
  y2: '21',
  key: 'essbwb'
}], ['polyline', {
  points: '8 8 4 12 8 16',
  key: 'bnfmv4'
}], ['polyline', {
  points: '16 16 20 12 16 8',
  key: 'u90052'
}]];
const SeparatorVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "SeparatorVertical",
  iconNode: iconNode$2M
}));
var SeparatorVertical$1 = SeparatorVertical;

const iconNode$2L = [['path', {
  d: 'M5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-1',
  key: '1qm4no'
}], ['path', {
  d: 'M5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-1',
  key: '1lpaho'
}], ['path', {
  d: 'M6 6h.01',
  key: '1utrut'
}], ['path', {
  d: 'M6 18h.01',
  key: 'uhywen'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}], ['path', {
  d: 'M12 8v1',
  key: '1rj8u4'
}], ['path', {
  d: 'M12 15v1',
  key: '1ovrzm'
}], ['path', {
  d: 'M16 12h-1',
  key: '1qpdyp'
}], ['path', {
  d: 'M9 12H8',
  key: '1l15iv'
}], ['path', {
  d: 'm15 9-.88.88',
  key: '3hwatj'
}], ['path', {
  d: 'M9.88 14.12 9 15',
  key: '13ldc9'
}], ['path', {
  d: 'm15 15-.88-.88',
  key: '45priv'
}], ['path', {
  d: 'M9.88 9.88 9 9',
  key: '1ladhj'
}]];
const ServerCog = props => createComponent(Icon$1, mergeProps(props, {
  name: "ServerCog",
  iconNode: iconNode$2L
}));
var ServerCog$1 = ServerCog;

const iconNode$2K = [['path', {
  d: 'M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2',
  key: '4b9dqc'
}], ['path', {
  d: 'M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2',
  key: '22nnkd'
}], ['path', {
  d: 'M6 6h.01',
  key: '1utrut'
}], ['path', {
  d: 'M6 18h.01',
  key: 'uhywen'
}], ['path', {
  d: 'm13 6-4 6h6l-4 6',
  key: '14hqih'
}]];
const ServerCrash = props => createComponent(Icon$1, mergeProps(props, {
  name: "ServerCrash",
  iconNode: iconNode$2K
}));
var ServerCrash$1 = ServerCrash;

const iconNode$2J = [['path', {
  d: 'M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5',
  key: 'bt2siv'
}], ['path', {
  d: 'M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z',
  key: '1hjrv1'
}], ['path', {
  d: 'M22 17v-1a2 2 0 0 0-2-2h-1',
  key: '1iynyr'
}], ['path', {
  d: 'M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z',
  key: '161ggg'
}], ['path', {
  d: 'M6 18h.01',
  key: 'uhywen'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}]];
const ServerOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "ServerOff",
  iconNode: iconNode$2J
}));
var ServerOff$1 = ServerOff;

const iconNode$2I = [['rect', {
  x: '2',
  y: '2',
  width: '20',
  height: '8',
  rx: '2',
  ry: '2',
  key: 'e1v5fq'
}], ['rect', {
  x: '2',
  y: '14',
  width: '20',
  height: '8',
  rx: '2',
  ry: '2',
  key: '10c4lq'
}], ['line', {
  x1: '6',
  y1: '6',
  x2: '6.01',
  y2: '6',
  key: '1g0o6g'
}], ['line', {
  x1: '6',
  y1: '18',
  x2: '6.01',
  y2: '18',
  key: 'y2j7fo'
}]];
const Server = props => createComponent(Icon$1, mergeProps(props, {
  name: "Server",
  iconNode: iconNode$2I
}));
var Server$1 = Server;

const iconNode$2H = [['path', {
  d: 'M20 7h-9',
  key: '3s1dr2'
}], ['path', {
  d: 'M14 17H5',
  key: 'gfn3mx'
}], ['circle', {
  cx: '17',
  cy: '17',
  r: '3',
  key: '18b49y'
}], ['circle', {
  cx: '7',
  cy: '7',
  r: '3',
  key: 'dfmy0x'
}]];
const Settings2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Settings2",
  iconNode: iconNode$2H
}));
var Settings2$1 = Settings2;

const iconNode$2G = [['path', {
  d: 'M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z',
  key: '1qme2f'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}]];
const Settings = props => createComponent(Icon$1, mergeProps(props, {
  name: "Settings",
  iconNode: iconNode$2G
}));
var Settings$1 = Settings;

const iconNode$2F = [['circle', {
  cx: '18',
  cy: '5',
  r: '3',
  key: 'gq8acd'
}], ['circle', {
  cx: '6',
  cy: '12',
  r: '3',
  key: 'w7nqdw'
}], ['circle', {
  cx: '18',
  cy: '19',
  r: '3',
  key: '1xt0gg'
}], ['line', {
  x1: '8.59',
  y1: '13.51',
  x2: '15.42',
  y2: '17.49',
  key: '10dsx0'
}], ['line', {
  x1: '15.41',
  y1: '6.51',
  x2: '8.59',
  y2: '10.49',
  key: '1qn9hm'
}]];
const Share2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Share2",
  iconNode: iconNode$2F
}));
var Share2$1 = Share2;

const iconNode$2E = [['path', {
  d: 'M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8',
  key: '1b2hhj'
}], ['polyline', {
  points: '16 6 12 2 8 6',
  key: 'm901s6'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '15',
  key: '1sxkij'
}]];
const Share = props => createComponent(Icon$1, mergeProps(props, {
  name: "Share",
  iconNode: iconNode$2E
}));
var Share$1 = Share;

const iconNode$2D = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '3',
  y1: '9',
  x2: '21',
  y2: '9',
  key: '1uch6j'
}], ['line', {
  x1: '3',
  y1: '15',
  x2: '21',
  y2: '15',
  key: '1xojw2'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '9',
  y2: '21',
  key: 'x5ianl'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '15',
  y2: '21',
  key: '13a17d'
}]];
const Sheet = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sheet",
  iconNode: iconNode$2D
}));
var Sheet$1 = Sheet;

const iconNode$2C = [['path', {
  d: 'M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z',
  key: '3xmgem'
}], ['path', {
  d: 'M12 8v4',
  key: '1got3b'
}], ['path', {
  d: 'M12 16h.01',
  key: '1drbdi'
}]];
const ShieldAlert = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShieldAlert",
  iconNode: iconNode$2C
}));
var ShieldAlert$1 = ShieldAlert;

const iconNode$2B = [['path', {
  d: 'M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z',
  key: '3xmgem'
}], ['path', {
  d: 'm9 12 2 2 4-4',
  key: 'dzmm74'
}]];
const ShieldCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShieldCheck",
  iconNode: iconNode$2B
}));
var ShieldCheck$1 = ShieldCheck;

const iconNode$2A = [['path', {
  d: 'M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z',
  key: '3xmgem'
}], ['line', {
  x1: '9.5',
  y1: '9',
  x2: '14.5',
  y2: '14',
  key: '154127'
}], ['line', {
  x1: '14.5',
  y1: '9',
  x2: '9.5',
  y2: '14',
  key: '1rm6h8'
}]];
const ShieldClose = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShieldClose",
  iconNode: iconNode$2A
}));
var ShieldClose$1 = ShieldClose;

const iconNode$2z = [['path', {
  d: 'M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18',
  key: 'ungvgc'
}], ['path', {
  d: 'M4.73 4.73 4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38',
  key: '1qf5yw'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const ShieldOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShieldOff",
  iconNode: iconNode$2z
}));
var ShieldOff$1 = ShieldOff;

const iconNode$2y = [['path', {
  d: 'M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z',
  key: '3xmgem'
}]];
const Shield = props => createComponent(Icon$1, mergeProps(props, {
  name: "Shield",
  iconNode: iconNode$2y
}));
var Shield$1 = Shield;

const iconNode$2x = [['path', {
  d: 'M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z',
  key: '1wgbhj'
}]];
const Shirt = props => createComponent(Icon$1, mergeProps(props, {
  name: "Shirt",
  iconNode: iconNode$2x
}));
var Shirt$1 = Shirt;

const iconNode$2w = [['path', {
  d: 'M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z',
  key: '14a4hr'
}], ['line', {
  x1: '3',
  y1: '6',
  x2: '21',
  y2: '6',
  key: '1tp2lp'
}], ['path', {
  d: 'M16 10a4 4 0 0 1-8 0',
  key: '1ltviw'
}]];
const ShoppingBag = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShoppingBag",
  iconNode: iconNode$2w
}));
var ShoppingBag$1 = ShoppingBag;

const iconNode$2v = [['circle', {
  cx: '8',
  cy: '21',
  r: '1',
  key: 'jimo8o'
}], ['circle', {
  cx: '19',
  cy: '21',
  r: '1',
  key: '13723u'
}], ['path', {
  d: 'M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12',
  key: '9zh506'
}]];
const ShoppingCart = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShoppingCart",
  iconNode: iconNode$2v
}));
var ShoppingCart$1 = ShoppingCart;

const iconNode$2u = [['path', {
  d: 'M2 22v-5l5-5 5 5-5 5z',
  key: '1fh25c'
}], ['path', {
  d: 'M9.5 14.5 16 8',
  key: '1smz5x'
}], ['path', {
  d: 'm17 2 5 5-.5.5a3.53 3.53 0 0 1-5 0s0 0 0 0a3.53 3.53 0 0 1 0-5L17 2',
  key: '1q8uv5'
}]];
const Shovel = props => createComponent(Icon$1, mergeProps(props, {
  name: "Shovel",
  iconNode: iconNode$2u
}));
var Shovel$1 = Shovel;

const iconNode$2t = [['path', {
  d: 'm4 4 2.5 2.5',
  key: 'uv2vmf'
}], ['path', {
  d: 'M13.5 6.5a4.95 4.95 0 0 0-7 7',
  key: 'frdkwv'
}], ['path', {
  d: 'M15 5 5 15',
  key: '1ag8rq'
}], ['path', {
  d: 'M14 17v.01',
  key: 'eokfpp'
}], ['path', {
  d: 'M10 16v.01',
  key: '14uyyl'
}], ['path', {
  d: 'M13 13v.01',
  key: '1v1k97'
}], ['path', {
  d: 'M16 10v.01',
  key: '5169yg'
}], ['path', {
  d: 'M11 20v.01',
  key: 'cj92p8'
}], ['path', {
  d: 'M17 14v.01',
  key: '11cswd'
}], ['path', {
  d: 'M20 11v.01',
  key: '19e0od'
}]];
const ShowerHead = props => createComponent(Icon$1, mergeProps(props, {
  name: "ShowerHead",
  iconNode: iconNode$2t
}));
var ShowerHead$1 = ShowerHead;

const iconNode$2s = [['path', {
  d: 'm15 15 6 6m-6-6v4.8m0-4.8h4.8',
  key: '17vawe'
}], ['path', {
  d: 'M9 19.8V15m0 0H4.2M9 15l-6 6',
  key: 'chjx8e'
}], ['path', {
  d: 'M15 4.2V9m0 0h4.8M15 9l6-6',
  key: 'lav6yq'
}], ['path', {
  d: 'M9 4.2V9m0 0H4.2M9 9 3 3',
  key: '1pxi2q'
}]];
const Shrink = props => createComponent(Icon$1, mergeProps(props, {
  name: "Shrink",
  iconNode: iconNode$2s
}));
var Shrink$1 = Shrink;

const iconNode$2r = [['path', {
  d: 'M12 22v-7l-2-2',
  key: 'eqv9mc'
}], ['path', {
  d: 'M17 8v.8A6 6 0 0 1 13.8 20v0H10v0A6.5 6.5 0 0 1 7 8h0a5 5 0 0 1 10 0Z',
  key: '12jcau'
}], ['path', {
  d: 'm14 14-2 2',
  key: '847xa2'
}]];
const Shrub = props => createComponent(Icon$1, mergeProps(props, {
  name: "Shrub",
  iconNode: iconNode$2r
}));
var Shrub$1 = Shrub;

const iconNode$2q = [['polyline', {
  points: '16 3 21 3 21 8',
  key: '11391h'
}], ['line', {
  x1: '4',
  y1: '20',
  x2: '21',
  y2: '3',
  key: 'pnd031'
}], ['polyline', {
  points: '21 16 21 21 16 21',
  key: '1j0gwc'
}], ['line', {
  x1: '15',
  y1: '15',
  x2: '21',
  y2: '21',
  key: 'ygtzor'
}], ['line', {
  x1: '4',
  y1: '4',
  x2: '9',
  y2: '9',
  key: 'q17lez'
}]];
const Shuffle = props => createComponent(Icon$1, mergeProps(props, {
  name: "Shuffle",
  iconNode: iconNode$2q
}));
var Shuffle$1 = Shuffle;

const iconNode$2p = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M9 3v18',
  key: 'fh3hqa'
}], ['path', {
  d: 'm16 15-3-3 3-3',
  key: '14y99z'
}]];
const SidebarClose = props => createComponent(Icon$1, mergeProps(props, {
  name: "SidebarClose",
  iconNode: iconNode$2p
}));
var SidebarClose$1 = SidebarClose;

const iconNode$2o = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['path', {
  d: 'M9 3v18',
  key: 'fh3hqa'
}], ['path', {
  d: 'm14 9 3 3-3 3',
  key: '8010ee'
}]];
const SidebarOpen = props => createComponent(Icon$1, mergeProps(props, {
  name: "SidebarOpen",
  iconNode: iconNode$2o
}));
var SidebarOpen$1 = SidebarOpen;

const iconNode$2n = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '9',
  y1: '3',
  x2: '9',
  y2: '21',
  key: 'nvcl17'
}]];
const Sidebar = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sidebar",
  iconNode: iconNode$2n
}));
var Sidebar$1 = Sidebar;

const iconNode$2m = [['path', {
  d: 'M18 7V4H6l6 8-6 8h12v-3',
  key: 'zis8ev'
}]];
const Sigma = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sigma",
  iconNode: iconNode$2m
}));
var Sigma$1 = Sigma;

const iconNode$2l = [['path', {
  d: 'M2 20h.01',
  key: '4haj6o'
}], ['path', {
  d: 'M7 20v-4',
  key: 'j294jx'
}], ['path', {
  d: 'M12 20v-8',
  key: 'i3yub9'
}], ['path', {
  d: 'M17 20V8',
  key: '1tkaf5'
}]];
const SignalHigh = props => createComponent(Icon$1, mergeProps(props, {
  name: "SignalHigh",
  iconNode: iconNode$2l
}));
var SignalHigh$1 = SignalHigh;

const iconNode$2k = [['path', {
  d: 'M2 20h.01',
  key: '4haj6o'
}], ['path', {
  d: 'M7 20v-4',
  key: 'j294jx'
}]];
const SignalLow = props => createComponent(Icon$1, mergeProps(props, {
  name: "SignalLow",
  iconNode: iconNode$2k
}));
var SignalLow$1 = SignalLow;

const iconNode$2j = [['path', {
  d: 'M2 20h.01',
  key: '4haj6o'
}], ['path', {
  d: 'M7 20v-4',
  key: 'j294jx'
}], ['path', {
  d: 'M12 20v-8',
  key: 'i3yub9'
}]];
const SignalMedium = props => createComponent(Icon$1, mergeProps(props, {
  name: "SignalMedium",
  iconNode: iconNode$2j
}));
var SignalMedium$1 = SignalMedium;

const iconNode$2i = [['path', {
  d: 'M2 20h.01',
  key: '4haj6o'
}]];
const SignalZero = props => createComponent(Icon$1, mergeProps(props, {
  name: "SignalZero",
  iconNode: iconNode$2i
}));
var SignalZero$1 = SignalZero;

const iconNode$2h = [['path', {
  d: 'M2 20h.01',
  key: '4haj6o'
}], ['path', {
  d: 'M7 20v-4',
  key: 'j294jx'
}], ['path', {
  d: 'M12 20v-8',
  key: 'i3yub9'
}], ['path', {
  d: 'M17 20V8',
  key: '1tkaf5'
}], ['path', {
  d: 'M22 4v16',
  key: 'sih9yq'
}]];
const Signal = props => createComponent(Icon$1, mergeProps(props, {
  name: "Signal",
  iconNode: iconNode$2h
}));
var Signal$1 = Signal;

const iconNode$2g = [['path', {
  d: 'M7 12a5 5 0 0 1 5-5v0a5 5 0 0 1 5 5v6H7v-6Z',
  key: 'rmc51c'
}], ['path', {
  d: 'M5 20a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v2H5v-2Z',
  key: 'yyvmjy'
}], ['path', {
  d: 'M21 12h1',
  key: 'jtio3y'
}], ['path', {
  d: 'M18.5 4.5 18 5',
  key: 'g5sp9y'
}], ['path', {
  d: 'M2 12h1',
  key: '1uaihz'
}], ['path', {
  d: 'M12 2v1',
  key: '11qlp1'
}], ['path', {
  d: 'm4.929 4.929.707.707',
  key: '1i51kw'
}], ['path', {
  d: 'M12 12v6',
  key: '3ahymv'
}]];
const Siren = props => createComponent(Icon$1, mergeProps(props, {
  name: "Siren",
  iconNode: iconNode$2g
}));
var Siren$1 = Siren;

const iconNode$2f = [['polygon', {
  points: '19 20 9 12 19 4 19 20',
  key: 'o2sva'
}], ['line', {
  x1: '5',
  y1: '19',
  x2: '5',
  y2: '5',
  key: '1qxvzh'
}]];
const SkipBack = props => createComponent(Icon$1, mergeProps(props, {
  name: "SkipBack",
  iconNode: iconNode$2f
}));
var SkipBack$1 = SkipBack;

const iconNode$2e = [['polygon', {
  points: '5 4 15 12 5 20 5 4',
  key: '16p6eg'
}], ['line', {
  x1: '19',
  y1: '5',
  x2: '19',
  y2: '19',
  key: '5lndli'
}]];
const SkipForward = props => createComponent(Icon$1, mergeProps(props, {
  name: "SkipForward",
  iconNode: iconNode$2e
}));
var SkipForward$1 = SkipForward;

const iconNode$2d = [['circle', {
  cx: '9',
  cy: '12',
  r: '1',
  key: '1vctgf'
}], ['circle', {
  cx: '15',
  cy: '12',
  r: '1',
  key: '1tmaij'
}], ['path', {
  d: 'M8 20v2h8v-2',
  key: 'ded4og'
}], ['path', {
  d: 'm12.5 17-.5-1-.5 1h1z',
  key: '3me087'
}], ['path', {
  d: 'M16 20a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20',
  key: 'xq9p5u'
}]];
const Skull = props => createComponent(Icon$1, mergeProps(props, {
  name: "Skull",
  iconNode: iconNode$2d
}));
var Skull$1 = Skull;

const iconNode$2c = [['rect', {
  x: '13',
  y: '2',
  width: '3',
  height: '8',
  rx: '1.5',
  key: '134gbe'
}], ['path', {
  d: 'M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5',
  key: '183iwg'
}], ['rect', {
  x: '8',
  y: '14',
  width: '3',
  height: '8',
  rx: '1.5',
  key: '6p48jh'
}], ['path', {
  d: 'M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5',
  key: '76g71w'
}], ['rect', {
  x: '14',
  y: '13',
  width: '8',
  height: '3',
  rx: '1.5',
  key: '1gabf9'
}], ['path', {
  d: 'M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5',
  key: 'jc4sz0'
}], ['rect', {
  x: '2',
  y: '8',
  width: '8',
  height: '3',
  rx: '1.5',
  key: '1bingn'
}], ['path', {
  d: 'M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5',
  key: '16f3cl'
}]];
const Slack = props => createComponent(Icon$1, mergeProps(props, {
  name: "Slack",
  iconNode: iconNode$2c
}));
var Slack$1 = Slack;

const iconNode$2b = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '4.93',
  y1: '4.93',
  x2: '19.07',
  y2: '19.07',
  key: 'bqqkff'
}]];
const Slash = props => createComponent(Icon$1, mergeProps(props, {
  name: "Slash",
  iconNode: iconNode$2b
}));
var Slash$1 = Slash;

const iconNode$2a = [['path', {
  d: 'm8 14-6 6h9v-3',
  key: 'zo3j9a'
}], ['path', {
  d: 'M18.37 3.63 8 14l3 3L21.37 6.63a2.12 2.12 0 1 0-3-3Z',
  key: '1dzx0j'
}]];
const Slice = props => createComponent(Icon$1, mergeProps(props, {
  name: "Slice",
  iconNode: iconNode$2a
}));
var Slice$1 = Slice;

const iconNode$29 = [['line', {
  x1: '21',
  y1: '4',
  x2: '14',
  y2: '4',
  key: 'ujuyh9'
}], ['line', {
  x1: '10',
  y1: '4',
  x2: '3',
  y2: '4',
  key: '5ejmvt'
}], ['line', {
  x1: '21',
  y1: '12',
  x2: '12',
  y2: '12',
  key: 'inadxn'
}], ['line', {
  x1: '8',
  y1: '12',
  x2: '3',
  y2: '12',
  key: 'apa8u8'
}], ['line', {
  x1: '21',
  y1: '20',
  x2: '16',
  y2: '20',
  key: 'w4k2j3'
}], ['line', {
  x1: '12',
  y1: '20',
  x2: '3',
  y2: '20',
  key: '15hqih'
}], ['line', {
  x1: '14',
  y1: '2',
  x2: '14',
  y2: '6',
  key: '19ksk4'
}], ['line', {
  x1: '8',
  y1: '10',
  x2: '8',
  y2: '14',
  key: '1cn0zn'
}], ['line', {
  x1: '16',
  y1: '18',
  x2: '16',
  y2: '22',
  key: '1vfncj'
}]];
const SlidersHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "SlidersHorizontal",
  iconNode: iconNode$29
}));
var SlidersHorizontal$1 = SlidersHorizontal;

const iconNode$28 = [['line', {
  x1: '4',
  y1: '21',
  x2: '4',
  y2: '14',
  key: '2cpl65'
}], ['line', {
  x1: '4',
  y1: '10',
  x2: '4',
  y2: '3',
  key: '1b26kg'
}], ['line', {
  x1: '12',
  y1: '21',
  x2: '12',
  y2: '12',
  key: 'fxobwr'
}], ['line', {
  x1: '12',
  y1: '8',
  x2: '12',
  y2: '3',
  key: 'bkspcw'
}], ['line', {
  x1: '20',
  y1: '21',
  x2: '20',
  y2: '16',
  key: 'b7lt1r'
}], ['line', {
  x1: '20',
  y1: '12',
  x2: '20',
  y2: '3',
  key: 'inamez'
}], ['line', {
  x1: '2',
  y1: '14',
  x2: '6',
  y2: '14',
  key: 'tezuxb'
}], ['line', {
  x1: '10',
  y1: '8',
  x2: '14',
  y2: '8',
  key: '1w8tme'
}], ['line', {
  x1: '18',
  y1: '16',
  x2: '22',
  y2: '16',
  key: '1gnq8h'
}]];
const Sliders = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sliders",
  iconNode: iconNode$28
}));
var Sliders$1 = Sliders;

const iconNode$27 = [['rect', {
  x: '5',
  y: '2',
  width: '14',
  height: '20',
  rx: '2',
  ry: '2',
  key: '1gcc4z'
}], ['path', {
  d: 'M12.667 8 10 12h4l-2.667 4',
  key: 'h9lk2d'
}]];
const SmartphoneCharging = props => createComponent(Icon$1, mergeProps(props, {
  name: "SmartphoneCharging",
  iconNode: iconNode$27
}));
var SmartphoneCharging$1 = SmartphoneCharging;

const iconNode$26 = [['rect', {
  x: '5',
  y: '2',
  width: '14',
  height: '20',
  rx: '2',
  ry: '2',
  key: '1gcc4z'
}], ['path', {
  d: 'M12 18h.01',
  key: 'mhygvu'
}]];
const Smartphone = props => createComponent(Icon$1, mergeProps(props, {
  name: "Smartphone",
  iconNode: iconNode$26
}));
var Smartphone$1 = Smartphone;

const iconNode$25 = [['path', {
  d: 'M22 11v1a10 10 0 1 1-9-10',
  key: 'ew0xw9'
}], ['path', {
  d: 'M8 14s1.5 2 4 2 4-2 4-2',
  key: '1y1vjs'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '9.01',
  y2: '9',
  key: '141aaf'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '15.01',
  y2: '9',
  key: '1cyg3o'
}], ['path', {
  d: 'M16 5h6',
  key: '1vod17'
}], ['path', {
  d: 'M19 2v6',
  key: '4bpg5p'
}]];
const SmilePlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "SmilePlus",
  iconNode: iconNode$25
}));
var SmilePlus$1 = SmilePlus;

const iconNode$24 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['path', {
  d: 'M8 14s1.5 2 4 2 4-2 4-2',
  key: '1y1vjs'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '9.01',
  y2: '9',
  key: '141aaf'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '15.01',
  y2: '9',
  key: '1cyg3o'
}]];
const Smile = props => createComponent(Icon$1, mergeProps(props, {
  name: "Smile",
  iconNode: iconNode$24
}));
var Smile$1 = Smile;

const iconNode$23 = [['line', {
  x1: '2',
  y1: '12',
  x2: '22',
  y2: '12',
  key: 'zvmn4p'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '22',
  key: '1k6o5o'
}], ['path', {
  d: 'm20 16-4-4 4-4',
  key: 'rquw4f'
}], ['path', {
  d: 'm4 8 4 4-4 4',
  key: '12s3z9'
}], ['path', {
  d: 'm16 4-4 4-4-4',
  key: '1tumq1'
}], ['path', {
  d: 'm8 20 4-4 4 4',
  key: '9p200w'
}]];
const Snowflake = props => createComponent(Icon$1, mergeProps(props, {
  name: "Snowflake",
  iconNode: iconNode$23
}));
var Snowflake$1 = Snowflake;

const iconNode$22 = [['path', {
  d: 'M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3',
  key: '1dgpiv'
}], ['path', {
  d: 'M2 11v5a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v2H6v-2a2 2 0 0 0-4 0Z',
  key: 'u5qfb7'
}], ['path', {
  d: 'M4 18v2',
  key: 'jwo5n2'
}], ['path', {
  d: 'M20 18v2',
  key: '1ar1qi'
}], ['path', {
  d: 'M12 4v9',
  key: 'oqhhn3'
}]];
const Sofa = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sofa",
  iconNode: iconNode$22
}));
var Sofa$1 = Sofa;

const iconNode$21 = [['path', {
  d: 'M11 11h4',
  key: '1iu023'
}], ['path', {
  d: 'M11 15h7',
  key: '23lz64'
}], ['path', {
  d: 'M11 19h10',
  key: '11t30w'
}], ['path', {
  d: 'M9 7 6 4 3 7',
  key: '1s6vko'
}], ['path', {
  d: 'M6 6v14',
  key: '1s15cj'
}]];
const SortAsc = props => createComponent(Icon$1, mergeProps(props, {
  name: "SortAsc",
  iconNode: iconNode$21
}));
var SortAsc$1 = SortAsc;

const iconNode$20 = [['path', {
  d: 'M11 5h10',
  key: '1cz7ny'
}], ['path', {
  d: 'M11 9h7',
  key: '13ra05'
}], ['path', {
  d: 'M11 13h4',
  key: '1p7l4v'
}], ['path', {
  d: 'm3 17 3 3 3-3',
  key: 'd2bl7z'
}], ['path', {
  d: 'M6 18V4',
  key: '20vmay'
}]];
const SortDesc = props => createComponent(Icon$1, mergeProps(props, {
  name: "SortDesc",
  iconNode: iconNode$20
}));
var SortDesc$1 = SortDesc;

const iconNode$1$ = [['path', {
  d: 'M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z',
  key: '4rw317'
}], ['path', {
  d: 'M7 21h10',
  key: '1b0cd5'
}], ['path', {
  d: 'M19.5 12 22 6',
  key: 'shfsr5'
}], ['path', {
  d: 'M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62',
  key: 'rpc6vp'
}], ['path', {
  d: 'M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62',
  key: '1lf63m'
}], ['path', {
  d: 'M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62',
  key: '97tijn'
}]];
const Soup = props => createComponent(Icon$1, mergeProps(props, {
  name: "Soup",
  iconNode: iconNode$1$
}));
var Soup$1 = Soup;

const iconNode$1_ = [['rect', {
  x: '4',
  y: '2',
  width: '16',
  height: '20',
  rx: '2',
  ry: '2',
  key: '152kg8'
}], ['circle', {
  cx: '12',
  cy: '14',
  r: '4',
  key: '1jruaj'
}], ['line', {
  x1: '12',
  y1: '6',
  x2: '12.01',
  y2: '6',
  key: 'fpk8as'
}]];
const Speaker = props => createComponent(Icon$1, mergeProps(props, {
  name: "Speaker",
  iconNode: iconNode$1_
}));
var Speaker$1 = Speaker;

const iconNode$1Z = [['path', {
  d: 'M21 6V4c0-.6-.4-1-1-1h-2a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h2c.6 0 1-.4 1-1Z',
  key: '1alwvo'
}], ['path', {
  d: 'M7 20v-2c0-.6-.4-1-1-1H4a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h2c.6 0 1-.4 1-1Z',
  key: 'f14zj6'
}], ['path', {
  d: 'M5 17A12 12 0 0 1 17 5',
  key: '1okkup'
}]];
const Spline = props => createComponent(Icon$1, mergeProps(props, {
  name: "Spline",
  iconNode: iconNode$1Z
}));
var Spline$1 = Spline;

const iconNode$1Y = [['path', {
  d: 'M7 20h10',
  key: 'e6iznv'
}], ['path', {
  d: 'M10 20c5.5-2.5.8-6.4 3-10',
  key: '161w41'
}], ['path', {
  d: 'M9.5 9.4c1.1.8 1.8 2.2 2.3 3.7-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2 2.8-.5 4.4 0 5.5.8z',
  key: '9gtqwd'
}], ['path', {
  d: 'M14.1 6a7 7 0 0 0-1.1 4c1.9-.1 3.3-.6 4.3-1.4 1-1 1.6-2.3 1.7-4.6-2.7.1-4 1-4.9 2z',
  key: 'bkxnd2'
}]];
const Sprout = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sprout",
  iconNode: iconNode$1Y
}));
var Sprout$1 = Sprout;

const iconNode$1X = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}]];
const Square = props => createComponent(Icon$1, mergeProps(props, {
  name: "Square",
  iconNode: iconNode$1X
}));
var Square$1 = Square;

const iconNode$1W = [['path', {
  d: 'M12 17.8 5.8 21 7 14.1 2 9.3l7-1L12 2',
  key: 'nare05'
}]];
const StarHalf = props => createComponent(Icon$1, mergeProps(props, {
  name: "StarHalf",
  iconNode: iconNode$1W
}));
var StarHalf$1 = StarHalf;

const iconNode$1V = [['path', {
  d: 'M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43',
  key: '16m0ql'
}], ['path', {
  d: 'M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91',
  key: '1vt8nq'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const StarOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "StarOff",
  iconNode: iconNode$1V
}));
var StarOff$1 = StarOff;

const iconNode$1U = [['polygon', {
  points: '12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2',
  key: '8f66p6'
}]];
const Star = props => createComponent(Icon$1, mergeProps(props, {
  name: "Star",
  iconNode: iconNode$1U
}));
var Star$1 = Star;

const iconNode$1T = [['path', {
  d: 'M4.8 2.3A.3.3 0 1 0 5 2H4a2 2 0 0 0-2 2v5a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6V4a2 2 0 0 0-2-2h-1a.2.2 0 1 0 .3.3',
  key: '1jd90r'
}], ['path', {
  d: 'M8 15v1a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6v-4',
  key: '126ukv'
}], ['circle', {
  cx: '20',
  cy: '10',
  r: '2',
  key: 'ts1r5v'
}]];
const Stethoscope = props => createComponent(Icon$1, mergeProps(props, {
  name: "Stethoscope",
  iconNode: iconNode$1T
}));
var Stethoscope$1 = Stethoscope;

const iconNode$1S = [['path', {
  d: 'M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z',
  key: '1wis1t'
}], ['path', {
  d: 'M15 3v6h6',
  key: 'edgan2'
}], ['path', {
  d: 'M10 16s.8 1 2 1c1.3 0 2-1 2-1',
  key: '1vvgv3'
}], ['path', {
  d: 'M8 13h0',
  key: 'jdup5h'
}], ['path', {
  d: 'M16 13h0',
  key: 'l4i2ga'
}]];
const Sticker = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sticker",
  iconNode: iconNode$1S
}));
var Sticker$1 = Sticker;

const iconNode$1R = [['path', {
  d: 'M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z',
  key: '1wis1t'
}], ['path', {
  d: 'M15 3v6h6',
  key: 'edgan2'
}]];
const StickyNote = props => createComponent(Icon$1, mergeProps(props, {
  name: "StickyNote",
  iconNode: iconNode$1R
}));
var StickyNote$1 = StickyNote;

const iconNode$1Q = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['rect', {
  x: '9',
  y: '9',
  width: '6',
  height: '6',
  key: 'o3kz5p'
}]];
const StopCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "StopCircle",
  iconNode: iconNode$1Q
}));
var StopCircle$1 = StopCircle;

const iconNode$1P = [['rect', {
  x: '2',
  y: '4',
  width: '20',
  height: '6',
  rx: '2',
  key: '12sjy4'
}], ['rect', {
  x: '2',
  y: '14',
  width: '20',
  height: '6',
  rx: '2',
  key: 'lnm6uo'
}]];
const StretchHorizontal = props => createComponent(Icon$1, mergeProps(props, {
  name: "StretchHorizontal",
  iconNode: iconNode$1P
}));
var StretchHorizontal$1 = StretchHorizontal;

const iconNode$1O = [['rect', {
  x: '4',
  y: '2',
  width: '6',
  height: '20',
  rx: '2',
  key: '1lym67'
}], ['rect', {
  x: '14',
  y: '2',
  width: '6',
  height: '20',
  rx: '2',
  key: 'b7v5o0'
}]];
const StretchVertical = props => createComponent(Icon$1, mergeProps(props, {
  name: "StretchVertical",
  iconNode: iconNode$1O
}));
var StretchVertical$1 = StretchVertical;

const iconNode$1N = [['path', {
  d: 'M16 4H9a3 3 0 0 0-2.83 4',
  key: '43sutm'
}], ['path', {
  d: 'M14 12a4 4 0 0 1 0 8H6',
  key: 'nlfj13'
}], ['line', {
  x1: '4',
  y1: '12',
  x2: '20',
  y2: '12',
  key: '1q6rtp'
}]];
const Strikethrough = props => createComponent(Icon$1, mergeProps(props, {
  name: "Strikethrough",
  iconNode: iconNode$1N
}));
var Strikethrough$1 = Strikethrough;

const iconNode$1M = [['path', {
  d: 'm4 5 8 8',
  key: '1eunvl'
}], ['path', {
  d: 'm12 5-8 8',
  key: '1ah0jp'
}], ['path', {
  d: 'M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07',
  key: 'e8ta8j'
}]];
const Subscript = props => createComponent(Icon$1, mergeProps(props, {
  name: "Subscript",
  iconNode: iconNode$1M
}));
var Subscript$1 = Subscript;

const iconNode$1L = [['path', {
  d: 'M7 13h4',
  key: '1m1xj0'
}], ['path', {
  d: 'M15 13h2',
  key: 'vgjay3'
}], ['path', {
  d: 'M7 9h2',
  key: '1q072n'
}], ['path', {
  d: 'M13 9h4',
  key: 'o7fxw0'
}], ['path', {
  d: 'M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10Z',
  key: '12yqn6'
}]];
const Subtitles = props => createComponent(Icon$1, mergeProps(props, {
  name: "Subtitles",
  iconNode: iconNode$1L
}));
var Subtitles$1 = Subtitles;

const iconNode$1K = [['path', {
  d: 'M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z',
  key: '1r4kox'
}], ['path', {
  d: 'M12 4h.01',
  key: '1ujb9j'
}], ['path', {
  d: 'M20 12h.01',
  key: '1ykeid'
}], ['path', {
  d: 'M12 20h.01',
  key: 'zekei9'
}], ['path', {
  d: 'M4 12h.01',
  key: '158zrr'
}], ['path', {
  d: 'M17.657 6.343h.01',
  key: '31pqzk'
}], ['path', {
  d: 'M17.657 17.657h.01',
  key: 'jehnf4'
}], ['path', {
  d: 'M6.343 17.657h.01',
  key: 'gdk6ow'
}], ['path', {
  d: 'M6.343 6.343h.01',
  key: '1uurf0'
}]];
const SunDim = props => createComponent(Icon$1, mergeProps(props, {
  name: "SunDim",
  iconNode: iconNode$1K
}));
var SunDim$1 = SunDim;

const iconNode$1J = [['path', {
  d: 'M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z',
  key: '1r4kox'
}], ['path', {
  d: 'M12 3v1',
  key: '1asbbs'
}], ['path', {
  d: 'M12 20v1',
  key: '1wcdkc'
}], ['path', {
  d: 'M3 12h1',
  key: 'lp3yf2'
}], ['path', {
  d: 'M20 12h1',
  key: '1vloll'
}], ['path', {
  d: 'm18.364 5.636-.707.707',
  key: '1hakh0'
}], ['path', {
  d: 'm6.343 17.657-.707.707',
  key: '18m9nf'
}], ['path', {
  d: 'm5.636 5.636.707.707',
  key: '1xv1c5'
}], ['path', {
  d: 'm17.657 17.657.707.707',
  key: 'vl76zb'
}]];
const SunMedium = props => createComponent(Icon$1, mergeProps(props, {
  name: "SunMedium",
  iconNode: iconNode$1J
}));
var SunMedium$1 = SunMedium;

const iconNode$1I = [['path', {
  d: 'M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z',
  key: '1r4kox'
}], ['path', {
  d: 'M12 8a2.828 2.828 0 1 0 4 4',
  key: '16688u'
}], ['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}], ['path', {
  d: 'M12 20v2',
  key: '1lh1kg'
}], ['path', {
  d: 'm4.93 4.93 1.41 1.41',
  key: '149t6j'
}], ['path', {
  d: 'm17.66 17.66 1.41 1.41',
  key: 'ptbguv'
}], ['path', {
  d: 'M2 12h2',
  key: '1t8f8n'
}], ['path', {
  d: 'M20 12h2',
  key: '1q8mjw'
}], ['path', {
  d: 'm6.34 17.66-1.41 1.41',
  key: '1m8zz5'
}], ['path', {
  d: 'm19.07 4.93-1.41 1.41',
  key: '1shlcs'
}]];
const SunMoon = props => createComponent(Icon$1, mergeProps(props, {
  name: "SunMoon",
  iconNode: iconNode$1I
}));
var SunMoon$1 = SunMoon;

const iconNode$1H = [['path', {
  d: 'M10 9a3 3 0 1 0 0 6',
  key: '6zmtdl'
}], ['path', {
  d: 'M2 12h1',
  key: '1uaihz'
}], ['path', {
  d: 'M14 21V3',
  key: '1llu3z'
}], ['path', {
  d: 'M10 4V3',
  key: 'pkzwkn'
}], ['path', {
  d: 'M10 21v-1',
  key: '1u8rkd'
}], ['path', {
  d: 'm3.64 18.36.7-.7',
  key: '105rm9'
}], ['path', {
  d: 'm4.34 6.34-.7-.7',
  key: 'd3unjp'
}], ['path', {
  d: 'M14 12h8',
  key: '4f43i9'
}], ['path', {
  d: 'm17 4-3 3',
  key: '15jcng'
}], ['path', {
  d: 'm14 17 3 3',
  key: '6tlq38'
}], ['path', {
  d: 'm21 15-3-3 3-3',
  key: '1nlnje'
}]];
const SunSnow = props => createComponent(Icon$1, mergeProps(props, {
  name: "SunSnow",
  iconNode: iconNode$1H
}));
var SunSnow$1 = SunSnow;

const iconNode$1G = [['circle', {
  cx: '12',
  cy: '12',
  r: '4',
  key: '4exip2'
}], ['path', {
  d: 'M12 2v2',
  key: 'tus03m'
}], ['path', {
  d: 'M12 20v2',
  key: '1lh1kg'
}], ['path', {
  d: 'm4.93 4.93 1.41 1.41',
  key: '149t6j'
}], ['path', {
  d: 'm17.66 17.66 1.41 1.41',
  key: 'ptbguv'
}], ['path', {
  d: 'M2 12h2',
  key: '1t8f8n'
}], ['path', {
  d: 'M20 12h2',
  key: '1q8mjw'
}], ['path', {
  d: 'm6.34 17.66-1.41 1.41',
  key: '1m8zz5'
}], ['path', {
  d: 'm19.07 4.93-1.41 1.41',
  key: '1shlcs'
}]];
const Sun = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sun",
  iconNode: iconNode$1G
}));
var Sun$1 = Sun;

const iconNode$1F = [['path', {
  d: 'M12 2v8',
  key: '1q4o3n'
}], ['path', {
  d: 'm4.93 10.93 1.41 1.41',
  key: '2a7f42'
}], ['path', {
  d: 'M2 18h2',
  key: 'j10viu'
}], ['path', {
  d: 'M20 18h2',
  key: 'wocana'
}], ['path', {
  d: 'm19.07 10.93-1.41 1.41',
  key: '15zs5n'
}], ['path', {
  d: 'M22 22H2',
  key: '19qnx5'
}], ['path', {
  d: 'm8 6 4-4 4 4',
  key: 'ybng9g'
}], ['path', {
  d: 'M16 18a4 4 0 0 0-8 0',
  key: '1lzouq'
}]];
const Sunrise = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sunrise",
  iconNode: iconNode$1F
}));
var Sunrise$1 = Sunrise;

const iconNode$1E = [['path', {
  d: 'M12 10V2',
  key: '16sf7g'
}], ['path', {
  d: 'm4.93 10.93 1.41 1.41',
  key: '2a7f42'
}], ['path', {
  d: 'M2 18h2',
  key: 'j10viu'
}], ['path', {
  d: 'M20 18h2',
  key: 'wocana'
}], ['path', {
  d: 'm19.07 10.93-1.41 1.41',
  key: '15zs5n'
}], ['path', {
  d: 'M22 22H2',
  key: '19qnx5'
}], ['path', {
  d: 'm16 6-4 4-4-4',
  key: '6wukr'
}], ['path', {
  d: 'M16 18a4 4 0 0 0-8 0',
  key: '1lzouq'
}]];
const Sunset = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sunset",
  iconNode: iconNode$1E
}));
var Sunset$1 = Sunset;

const iconNode$1D = [['path', {
  d: 'm4 19 8-8',
  key: 'hr47gm'
}], ['path', {
  d: 'm12 19-8-8',
  key: '1dhhmo'
}], ['path', {
  d: 'M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06',
  key: '1dfcux'
}]];
const Superscript = props => createComponent(Icon$1, mergeProps(props, {
  name: "Superscript",
  iconNode: iconNode$1D
}));
var Superscript$1 = Superscript;

const iconNode$1C = [['path', {
  d: 'M10 21V3h8',
  key: 'br2l0g'
}], ['path', {
  d: 'M6 16h9',
  key: '2py0wn'
}], ['path', {
  d: 'M10 9.5h7',
  key: '13dmhz'
}]];
const SwissFranc = props => createComponent(Icon$1, mergeProps(props, {
  name: "SwissFranc",
  iconNode: iconNode$1C
}));
var SwissFranc$1 = SwissFranc;

const iconNode$1B = [['path', {
  d: 'M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5',
  key: 'mtk2lu'
}], ['path', {
  d: 'M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5',
  key: '120jsl'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '3',
  key: '1v7zrd'
}], ['path', {
  d: 'm18 22-3-3 3-3',
  key: 'kgdoj7'
}], ['path', {
  d: 'm6 2 3 3-3 3',
  key: '1fnbkv'
}]];
const SwitchCamera = props => createComponent(Icon$1, mergeProps(props, {
  name: "SwitchCamera",
  iconNode: iconNode$1B
}));
var SwitchCamera$1 = SwitchCamera;

const iconNode$1A = [['polyline', {
  points: '14.5 17.5 3 6 3 3 6 3 17.5 14.5',
  key: '1hfsw2'
}], ['line', {
  x1: '13',
  y1: '19',
  x2: '19',
  y2: '13',
  key: '7h9f57'
}], ['line', {
  x1: '16',
  y1: '16',
  x2: '20',
  y2: '20',
  key: '1b4zco'
}], ['line', {
  x1: '19',
  y1: '21',
  x2: '21',
  y2: '19',
  key: 'df24kr'
}]];
const Sword = props => createComponent(Icon$1, mergeProps(props, {
  name: "Sword",
  iconNode: iconNode$1A
}));
var Sword$1 = Sword;

const iconNode$1z = [['polyline', {
  points: '14.5 17.5 3 6 3 3 6 3 17.5 14.5',
  key: '1hfsw2'
}], ['line', {
  x1: '13',
  y1: '19',
  x2: '19',
  y2: '13',
  key: '7h9f57'
}], ['line', {
  x1: '16',
  y1: '16',
  x2: '20',
  y2: '20',
  key: '1b4zco'
}], ['line', {
  x1: '19',
  y1: '21',
  x2: '21',
  y2: '19',
  key: 'df24kr'
}], ['polyline', {
  points: '14.5 6.5 18 3 21 3 21 6 17.5 9.5',
  key: 'hbey2j'
}], ['line', {
  x1: '5',
  y1: '14',
  x2: '9',
  y2: '18',
  key: 'acydkb'
}], ['line', {
  x1: '7',
  y1: '17',
  x2: '4',
  y2: '20',
  key: '1vmq9v'
}], ['line', {
  x1: '3',
  y1: '19',
  x2: '5',
  y2: '21',
  key: '139kw4'
}]];
const Swords = props => createComponent(Icon$1, mergeProps(props, {
  name: "Swords",
  iconNode: iconNode$1z
}));
var Swords$1 = Swords;

const iconNode$1y = [['path', {
  d: 'm18 2 4 4',
  key: '22kx64'
}], ['path', {
  d: 'm17 7 3-3',
  key: '1w1zoj'
}], ['path', {
  d: 'M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5',
  key: '1exhtz'
}], ['path', {
  d: 'm9 11 4 4',
  key: 'rovt3i'
}], ['path', {
  d: 'm5 19-3 3',
  key: '59f2uf'
}], ['path', {
  d: 'm14 4 6 6',
  key: 'yqp9t2'
}]];
const Syringe = props => createComponent(Icon$1, mergeProps(props, {
  name: "Syringe",
  iconNode: iconNode$1y
}));
var Syringe$1 = Syringe;

const iconNode$1x = [['path', {
  d: 'M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18',
  key: 'gugj83'
}]];
const Table2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Table2",
  iconNode: iconNode$1x
}));
var Table2$1 = Table2;

const iconNode$1w = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '3',
  y1: '9',
  x2: '21',
  y2: '9',
  key: '1uch6j'
}], ['line', {
  x1: '3',
  y1: '15',
  x2: '21',
  y2: '15',
  key: '1xojw2'
}], ['line', {
  x1: '12',
  y1: '3',
  x2: '12',
  y2: '21',
  key: 'essbwb'
}]];
const Table = props => createComponent(Icon$1, mergeProps(props, {
  name: "Table",
  iconNode: iconNode$1w
}));
var Table$1 = Table;

const iconNode$1v = [['rect', {
  x: '4',
  y: '2',
  width: '16',
  height: '20',
  rx: '2',
  ry: '2',
  key: '152kg8'
}], ['line', {
  x1: '12',
  y1: '18',
  x2: '12.01',
  y2: '18',
  key: '73g4n8'
}]];
const Tablet = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tablet",
  iconNode: iconNode$1v
}));
var Tablet$1 = Tablet;

const iconNode$1u = [['path', {
  d: 'M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z',
  key: '14b2ls'
}], ['path', {
  d: 'M7 7h.01',
  key: '7u93v4'
}]];
const Tag = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tag",
  iconNode: iconNode$1u
}));
var Tag$1 = Tag;

const iconNode$1t = [['path', {
  d: 'M9 5H2v7l6.29 6.29c.94.94 2.48.94 3.42 0l3.58-3.58c.94-.94.94-2.48 0-3.42L9 5Z',
  key: 'gt587u'
}], ['path', {
  d: 'M6 9.01V9',
  key: '1flxpt'
}], ['path', {
  d: 'm15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19',
  key: '1cbfv1'
}]];
const Tags = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tags",
  iconNode: iconNode$1t
}));
var Tags$1 = Tags;

const iconNode$1s = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '6',
  key: '1vlfrh'
}], ['circle', {
  cx: '12',
  cy: '12',
  r: '2',
  key: '1c9p78'
}]];
const Target = props => createComponent(Icon$1, mergeProps(props, {
  name: "Target",
  iconNode: iconNode$1s
}));
var Target$1 = Target;

const iconNode$1r = [['path', {
  d: 'M19 20 10 4',
  key: '1ak541'
}], ['path', {
  d: 'm5 20 9-16',
  key: '11dtj9'
}], ['path', {
  d: 'M3 20h18',
  key: '1l19wn'
}], ['path', {
  d: 'm12 15-3 5',
  key: '1c5kej'
}], ['path', {
  d: 'm12 15 3 5',
  key: 'odkmhi'
}]];
const Tent = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tent",
  iconNode: iconNode$1r
}));
var Tent$1 = Tent;

const iconNode$1q = [['path', {
  d: 'm7 11 2-2-2-2',
  key: '1lz0vl'
}], ['path', {
  d: 'M11 13h4',
  key: '1p7l4v'
}], ['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}]];
const TerminalSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "TerminalSquare",
  iconNode: iconNode$1q
}));
var TerminalSquare$1 = TerminalSquare;

const iconNode$1p = [['polyline', {
  points: '4 17 10 11 4 5',
  key: 'akl6gq'
}], ['line', {
  x1: '12',
  y1: '19',
  x2: '20',
  y2: '19',
  key: 'fyyrwq'
}]];
const Terminal = props => createComponent(Icon$1, mergeProps(props, {
  name: "Terminal",
  iconNode: iconNode$1p
}));
var Terminal$1 = Terminal;

const iconNode$1o = [['path', {
  d: 'M13 20h-1a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h1',
  key: '19sqy7'
}], ['path', {
  d: 'M5 4h1a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3H5',
  key: '1etnvu'
}], ['path', {
  d: 'M13.1 7.9h6.8A2.18 2.18 0 0 1 22 10v4a2.11 2.11 0 0 1-2.1 2.1h-6.8',
  key: 'ebxlah'
}], ['path', {
  d: 'M4.8 16.1h-.7A2.18 2.18 0 0 1 2 14v-4a2.18 2.18 0 0 1 2.1-2.1h.7',
  key: '1l3v11'
}]];
const TextCursorInput = props => createComponent(Icon$1, mergeProps(props, {
  name: "TextCursorInput",
  iconNode: iconNode$1o
}));
var TextCursorInput$1 = TextCursorInput;

const iconNode$1n = [['path', {
  d: 'M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1',
  key: 'uvaxm9'
}], ['path', {
  d: 'M7 22h1a4 4 0 0 0 4-4v-1',
  key: '11xy8d'
}], ['path', {
  d: 'M7 2h1a4 4 0 0 1 4 4v1',
  key: '1uw06m'
}]];
const TextCursor = props => createComponent(Icon$1, mergeProps(props, {
  name: "TextCursor",
  iconNode: iconNode$1n
}));
var TextCursor$1 = TextCursor;

const iconNode$1m = [['path', {
  d: 'M2 12h10',
  key: '19562f'
}], ['path', {
  d: 'M9 4v16',
  key: '81ygyz'
}], ['path', {
  d: 'm3 9 3 3-3 3',
  key: '1sas0l'
}], ['path', {
  d: 'M12 6 9 9 6 6',
  key: 'pfrgxu'
}], ['path', {
  d: 'm6 18 3-3 1.5 1.5',
  key: '1e277p'
}], ['path', {
  d: 'M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z',
  key: 'iof6y5'
}]];
const ThermometerSnowflake = props => createComponent(Icon$1, mergeProps(props, {
  name: "ThermometerSnowflake",
  iconNode: iconNode$1m
}));
var ThermometerSnowflake$1 = ThermometerSnowflake;

const iconNode$1l = [['path', {
  d: 'M12 9a4 4 0 0 0-2 7.5',
  key: '1jvsq6'
}], ['path', {
  d: 'M12 3v2',
  key: '1w22ol'
}], ['path', {
  d: 'm6.6 18.4-1.4 1.4',
  key: 'w2yidj'
}], ['path', {
  d: 'M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z',
  key: 'iof6y5'
}], ['path', {
  d: 'M4 13H2',
  key: '118le4'
}], ['path', {
  d: 'M6.34 7.34 4.93 5.93',
  key: '1brd51'
}]];
const ThermometerSun = props => createComponent(Icon$1, mergeProps(props, {
  name: "ThermometerSun",
  iconNode: iconNode$1l
}));
var ThermometerSun$1 = ThermometerSun;

const iconNode$1k = [['path', {
  d: 'M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z',
  key: '17jzev'
}]];
const Thermometer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Thermometer",
  iconNode: iconNode$1k
}));
var Thermometer$1 = Thermometer;

const iconNode$1j = [['path', {
  d: 'M17 14V2',
  key: '8ymqnk'
}], ['path', {
  d: 'M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22h0a3.13 3.13 0 0 1-3-3.88Z',
  key: 's6e0r'
}]];
const ThumbsDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "ThumbsDown",
  iconNode: iconNode$1j
}));
var ThumbsDown$1 = ThumbsDown;

const iconNode$1i = [['path', {
  d: 'M7 10v12',
  key: '1qc93n'
}], ['path', {
  d: 'M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z',
  key: 'y3tblf'
}]];
const ThumbsUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "ThumbsUp",
  iconNode: iconNode$1i
}));
var ThumbsUp$1 = ThumbsUp;

const iconNode$1h = [['path', {
  d: 'M3 7v2a3 3 0 1 1 0 6v2c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2Z',
  key: 'nswdcl'
}], ['path', {
  d: 'M13 5v2',
  key: 'dyzc3o'
}], ['path', {
  d: 'M13 17v2',
  key: '1ont0d'
}], ['path', {
  d: 'M13 11v2',
  key: '1wjjxi'
}]];
const Ticket = props => createComponent(Icon$1, mergeProps(props, {
  name: "Ticket",
  iconNode: iconNode$1h
}));
var Ticket$1 = Ticket;

const iconNode$1g = [['path', {
  d: 'M10 2h4',
  key: 'n1abiw'
}], ['path', {
  d: 'M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7',
  key: '10he05'
}], ['path', {
  d: 'M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2',
  key: '15f7sh'
}], ['path', {
  d: 'm2 2 20 20',
  key: '1ooewy'
}], ['path', {
  d: 'M12 12v-2',
  key: 'fwoke6'
}]];
const TimerOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "TimerOff",
  iconNode: iconNode$1g
}));
var TimerOff$1 = TimerOff;

const iconNode$1f = [['path', {
  d: 'M10 2h4',
  key: 'n1abiw'
}], ['path', {
  d: 'M12 14v-4',
  key: '1evpnu'
}], ['path', {
  d: 'M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6',
  key: '1ts96g'
}], ['path', {
  d: 'M9 17H4v5',
  key: '8t5av'
}]];
const TimerReset = props => createComponent(Icon$1, mergeProps(props, {
  name: "TimerReset",
  iconNode: iconNode$1f
}));
var TimerReset$1 = TimerReset;

const iconNode$1e = [['line', {
  x1: '10',
  x2: '14',
  y1: '2',
  y2: '2',
  key: '14vaq8'
}], ['line', {
  x1: '12',
  x2: '15',
  y1: '14',
  y2: '11',
  key: '17fdiu'
}], ['circle', {
  cx: '12',
  cy: '14',
  r: '8',
  key: '1e1u0o'
}]];
const Timer = props => createComponent(Icon$1, mergeProps(props, {
  name: "Timer",
  iconNode: iconNode$1e
}));
var Timer$1 = Timer;

const iconNode$1d = [['rect', {
  x: '1',
  y: '5',
  width: '22',
  height: '14',
  rx: '7',
  ry: '7',
  key: 'rq2fx9'
}], ['circle', {
  cx: '8',
  cy: '12',
  r: '3',
  key: 'nylqfu'
}]];
const ToggleLeft = props => createComponent(Icon$1, mergeProps(props, {
  name: "ToggleLeft",
  iconNode: iconNode$1d
}));
var ToggleLeft$1 = ToggleLeft;

const iconNode$1c = [['rect', {
  x: '1',
  y: '5',
  width: '22',
  height: '14',
  rx: '7',
  ry: '7',
  key: 'rq2fx9'
}], ['circle', {
  cx: '16',
  cy: '12',
  r: '3',
  key: 'nkkl0l'
}]];
const ToggleRight = props => createComponent(Icon$1, mergeProps(props, {
  name: "ToggleRight",
  iconNode: iconNode$1c
}));
var ToggleRight$1 = ToggleRight;

const iconNode$1b = [['path', {
  d: 'M21 4H3',
  key: '1hwok0'
}], ['path', {
  d: 'M18 8H6',
  key: '41n648'
}], ['path', {
  d: 'M19 12H9',
  key: '1g4lpz'
}], ['path', {
  d: 'M16 16h-6',
  key: '1j5d54'
}], ['path', {
  d: 'M11 20H9',
  key: '39obr8'
}]];
const Tornado = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tornado",
  iconNode: iconNode$1b
}));
var Tornado$1 = Tornado;

const iconNode$1a = [['rect', {
  x: '3',
  y: '8',
  width: '18',
  height: '12',
  rx: '1',
  key: '1yob91'
}], ['path', {
  d: 'M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3',
  key: 's0042v'
}], ['path', {
  d: 'M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3',
  key: '9wmeh2'
}]];
const ToyBrick = props => createComponent(Icon$1, mergeProps(props, {
  name: "ToyBrick",
  iconNode: iconNode$1a
}));
var ToyBrick$1 = ToyBrick;

const iconNode$19 = [['rect', {
  x: '4',
  y: '3',
  width: '16',
  height: '16',
  rx: '2',
  key: 'u93jis'
}], ['path', {
  d: 'M4 11h16',
  key: 'mpoxn0'
}], ['path', {
  d: 'M12 3v8',
  key: '1h2ygw'
}], ['path', {
  d: 'm8 19-2 3',
  key: '13i0xs'
}], ['path', {
  d: 'm18 22-2-3',
  key: '1p0ohu'
}], ['path', {
  d: 'M8 15h0',
  key: 'q9eq1f'
}], ['path', {
  d: 'M16 15h0',
  key: 'pzrbjg'
}]];
const Train = props => createComponent(Icon$1, mergeProps(props, {
  name: "Train",
  iconNode: iconNode$19
}));
var Train$1 = Train;

const iconNode$18 = [['path', {
  d: 'M3 6h18',
  key: 'd0wm0j'
}], ['path', {
  d: 'M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6',
  key: '4alrt4'
}], ['path', {
  d: 'M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2',
  key: 'v07s0e'
}], ['line', {
  x1: '10',
  y1: '11',
  x2: '10',
  y2: '17',
  key: 'm9v7hp'
}], ['line', {
  x1: '14',
  y1: '11',
  x2: '14',
  y2: '17',
  key: '23cpt9'
}]];
const Trash2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Trash2",
  iconNode: iconNode$18
}));
var Trash2$1 = Trash2;

const iconNode$17 = [['path', {
  d: 'M3 6h18',
  key: 'd0wm0j'
}], ['path', {
  d: 'M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6',
  key: '4alrt4'
}], ['path', {
  d: 'M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2',
  key: 'v07s0e'
}]];
const Trash = props => createComponent(Icon$1, mergeProps(props, {
  name: "Trash",
  iconNode: iconNode$17
}));
var Trash$1 = Trash;

const iconNode$16 = [['path', {
  d: 'M8 19h8a4 4 0 0 0 3.8-2.8 4 4 0 0 0-1.6-4.5c1-1.1 1-2.7.4-4-.7-1.2-2.2-2-3.6-1.7a3 3 0 0 0-3-3 3 3 0 0 0-3 3c-1.4-.2-2.9.5-3.6 1.7-.7 1.3-.5 2.9.4 4a4 4 0 0 0-1.6 4.5A4 4 0 0 0 8 19Z',
  key: '12ivfl'
}], ['path', {
  d: 'M12 19v3',
  key: 'npa21l'
}]];
const TreeDeciduous = props => createComponent(Icon$1, mergeProps(props, {
  name: "TreeDeciduous",
  iconNode: iconNode$16
}));
var TreeDeciduous$1 = TreeDeciduous;

const iconNode$15 = [['path', {
  d: 'm17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z',
  key: 'cpyugq'
}], ['path', {
  d: 'M12 22v-3',
  key: 'kmzjlo'
}]];
const TreePine = props => createComponent(Icon$1, mergeProps(props, {
  name: "TreePine",
  iconNode: iconNode$15
}));
var TreePine$1 = TreePine;

const iconNode$14 = [['path', {
  d: 'M10 10v.2A3 3 0 0 1 8.9 16v0H5v0h0a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z',
  key: 'yh07w9'
}], ['path', {
  d: 'M7 16v6',
  key: '1a82de'
}], ['path', {
  d: 'M13 19v3',
  key: '13sx9i'
}], ['path', {
  d: 'M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5',
  key: '1sj9kv'
}]];
const Trees = props => createComponent(Icon$1, mergeProps(props, {
  name: "Trees",
  iconNode: iconNode$14
}));
var Trees$1 = Trees;

const iconNode$13 = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['rect', {
  x: '7',
  y: '7',
  width: '3',
  height: '9',
  key: '1xk0xp'
}], ['rect', {
  x: '14',
  y: '7',
  width: '3',
  height: '5',
  key: '1otkhn'
}]];
const Trello = props => createComponent(Icon$1, mergeProps(props, {
  name: "Trello",
  iconNode: iconNode$13
}));
var Trello$1 = Trello;

const iconNode$12 = [['polyline', {
  points: '22 17 13.5 8.5 8.5 13.5 2 7',
  key: '1r2t7k'
}], ['polyline', {
  points: '16 17 22 17 22 11',
  key: '11uiuu'
}]];
const TrendingDown = props => createComponent(Icon$1, mergeProps(props, {
  name: "TrendingDown",
  iconNode: iconNode$12
}));
var TrendingDown$1 = TrendingDown;

const iconNode$11 = [['polyline', {
  points: '22 7 13.5 15.5 8.5 10.5 2 17',
  key: '126l90'
}], ['polyline', {
  points: '16 7 22 7 22 13',
  key: 'kwv8wd'
}]];
const TrendingUp = props => createComponent(Icon$1, mergeProps(props, {
  name: "TrendingUp",
  iconNode: iconNode$11
}));
var TrendingUp$1 = TrendingUp;

const iconNode$10 = [['path', {
  d: 'm21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z',
  key: 'c3ski4'
}]];
const Triangle = props => createComponent(Icon$1, mergeProps(props, {
  name: "Triangle",
  iconNode: iconNode$10
}));
var Triangle$1 = Triangle;

const iconNode$$ = [['path', {
  d: 'M6 9H4.5a2.5 2.5 0 0 1 0-5H6',
  key: '17hqa7'
}], ['path', {
  d: 'M18 9h1.5a2.5 2.5 0 0 0 0-5H18',
  key: 'lmptdp'
}], ['path', {
  d: 'M4 22h16',
  key: '57wxv0'
}], ['path', {
  d: 'M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22',
  key: '1nw9bq'
}], ['path', {
  d: 'M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22',
  key: '1np0yb'
}], ['path', {
  d: 'M18 2H6v7a6 6 0 0 0 12 0V2Z',
  key: 'u46fv3'
}]];
const Trophy = props => createComponent(Icon$1, mergeProps(props, {
  name: "Trophy",
  iconNode: iconNode$$
}));
var Trophy$1 = Trophy;

const iconNode$_ = [['path', {
  d: 'M10 17h4V5H2v12h3',
  key: '1jq12e'
}], ['path', {
  d: 'M20 17h2v-3.34a4 4 0 0 0-1.17-2.83L19 9h-5',
  key: '1xb3ft'
}], ['path', {
  d: 'M14 17h1',
  key: 'nufu4t'
}], ['circle', {
  cx: '7.5',
  cy: '17.5',
  r: '2.5',
  key: 'a7aife'
}], ['circle', {
  cx: '17.5',
  cy: '17.5',
  r: '2.5',
  key: '1mdrzq'
}]];
const Truck = props => createComponent(Icon$1, mergeProps(props, {
  name: "Truck",
  iconNode: iconNode$_
}));
var Truck$1 = Truck;

const iconNode$Z = [['path', {
  d: 'M7 21h10',
  key: '1b0cd5'
}], ['rect', {
  x: '2',
  y: '3',
  width: '20',
  height: '14',
  rx: '2',
  key: 'x3v2xh'
}]];
const Tv2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tv2",
  iconNode: iconNode$Z
}));
var Tv2$1 = Tv2;

const iconNode$Y = [['rect', {
  x: '2',
  y: '7',
  width: '20',
  height: '15',
  rx: '2',
  ry: '2',
  key: 'f237mn'
}], ['polyline', {
  points: '17 2 12 7 7 2',
  key: '11pgbg'
}]];
const Tv = props => createComponent(Icon$1, mergeProps(props, {
  name: "Tv",
  iconNode: iconNode$Y
}));
var Tv$1 = Tv;

const iconNode$X = [['path', {
  d: 'M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7',
  key: 'c0yzno'
}]];
const Twitch = props => createComponent(Icon$1, mergeProps(props, {
  name: "Twitch",
  iconNode: iconNode$X
}));
var Twitch$1 = Twitch;

const iconNode$W = [['path', {
  d: 'M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z',
  key: 'pff0z6'
}]];
const Twitter = props => createComponent(Icon$1, mergeProps(props, {
  name: "Twitter",
  iconNode: iconNode$W
}));
var Twitter$1 = Twitter;

const iconNode$V = [['polyline', {
  points: '4 7 4 4 20 4 20 7',
  key: '1nosan'
}], ['line', {
  x1: '9',
  y1: '20',
  x2: '15',
  y2: '20',
  key: '10hqwk'
}], ['line', {
  x1: '12',
  y1: '4',
  x2: '12',
  y2: '20',
  key: '8v58sd'
}]];
const Type = props => createComponent(Icon$1, mergeProps(props, {
  name: "Type",
  iconNode: iconNode$V
}));
var Type$1 = Type;

const iconNode$U = [['path', {
  d: 'M22 12a9.92 9.92 0 0 0-3.24-6.41 10.12 10.12 0 0 0-13.52 0A9.92 9.92 0 0 0 2 12Z',
  key: 'gyh82n'
}], ['path', {
  d: 'M12 12v8a2 2 0 0 0 4 0',
  key: 'ulpmoc'
}], ['line', {
  x1: '12',
  y1: '2',
  x2: '12',
  y2: '3',
  key: '7v6ckq'
}]];
const Umbrella = props => createComponent(Icon$1, mergeProps(props, {
  name: "Umbrella",
  iconNode: iconNode$U
}));
var Umbrella$1 = Umbrella;

const iconNode$T = [['path', {
  d: 'M6 4v6a6 6 0 0 0 12 0V4',
  key: '9kb039'
}], ['line', {
  x1: '4',
  y1: '20',
  x2: '20',
  y2: '20',
  key: 'klhyhp'
}]];
const Underline = props => createComponent(Icon$1, mergeProps(props, {
  name: "Underline",
  iconNode: iconNode$T
}));
var Underline$1 = Underline;

const iconNode$S = [['path', {
  d: 'M9 14 4 9l5-5',
  key: '102s5s'
}], ['path', {
  d: 'M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5v0a5.5 5.5 0 0 1-5.5 5.5H11',
  key: 'llx8ln'
}]];
const Undo2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Undo2",
  iconNode: iconNode$S
}));
var Undo2$1 = Undo2;

const iconNode$R = [['path', {
  d: 'M3 7v6h6',
  key: '1v2h90'
}], ['path', {
  d: 'M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13',
  key: '1r6uu6'
}]];
const Undo = props => createComponent(Icon$1, mergeProps(props, {
  name: "Undo",
  iconNode: iconNode$R
}));
var Undo$1 = Undo;

const iconNode$Q = [['path', {
  d: 'M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2',
  key: '1re2ne'
}]];
const Unlink2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Unlink2",
  iconNode: iconNode$Q
}));
var Unlink2$1 = Unlink2;

const iconNode$P = [['path', {
  d: 'm18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71',
  key: 'yqzxt4'
}], ['path', {
  d: 'm5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71',
  key: '4qinb0'
}], ['line', {
  x1: '8',
  y1: '2',
  x2: '8',
  y2: '5',
  key: '187dr9'
}], ['line', {
  x1: '2',
  y1: '8',
  x2: '5',
  y2: '8',
  key: 'peo5ws'
}], ['line', {
  x1: '16',
  y1: '19',
  x2: '16',
  y2: '22',
  key: '6aelkz'
}], ['line', {
  x1: '19',
  y1: '16',
  x2: '22',
  y2: '16',
  key: 'ln8io3'
}]];
const Unlink = props => createComponent(Icon$1, mergeProps(props, {
  name: "Unlink",
  iconNode: iconNode$P
}));
var Unlink$1 = Unlink;

const iconNode$O = [['rect', {
  x: '3',
  y: '11',
  width: '18',
  height: '11',
  rx: '2',
  ry: '2',
  key: 'biyj2e'
}], ['path', {
  d: 'M7 11V7a5 5 0 0 1 9.9-1',
  key: '1mm8w8'
}]];
const Unlock = props => createComponent(Icon$1, mergeProps(props, {
  name: "Unlock",
  iconNode: iconNode$O
}));
var Unlock$1 = Unlock;

const iconNode$N = [['path', {
  d: 'M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242',
  key: '1pljnt'
}], ['path', {
  d: 'M12 12v9',
  key: '192myk'
}], ['path', {
  d: 'm16 16-4-4-4 4',
  key: '119tzi'
}]];
const UploadCloud = props => createComponent(Icon$1, mergeProps(props, {
  name: "UploadCloud",
  iconNode: iconNode$N
}));
var UploadCloud$1 = UploadCloud;

const iconNode$M = [['path', {
  d: 'M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4',
  key: 'ih7n3h'
}], ['polyline', {
  points: '17 8 12 3 7 8',
  key: 't8dd8p'
}], ['line', {
  x1: '12',
  y1: '3',
  x2: '12',
  y2: '15',
  key: 'wktxj0'
}]];
const Upload = props => createComponent(Icon$1, mergeProps(props, {
  name: "Upload",
  iconNode: iconNode$M
}));
var Upload$1 = Upload;

const iconNode$L = [['circle', {
  cx: '4',
  cy: '20',
  r: '1',
  key: '22iqad'
}], ['circle', {
  cx: '10',
  cy: '7',
  r: '1',
  key: 'dypaad'
}], ['path', {
  d: 'M4 20 19 5',
  key: '15hogs'
}], ['path', {
  d: 'm21 3-3 1 2 2 1-3Z',
  key: 'ew8vct'
}], ['path', {
  d: 'm10 7-5 5 2 5',
  key: '148pqf'
}], ['path', {
  d: 'm10 14 5 2 4-4',
  key: '1ivjwr'
}], ['path', {
  d: 'm18 12 1-1 1 1-1 1-1-1Z',
  key: 'tus6kn'
}]];
const Usb = props => createComponent(Icon$1, mergeProps(props, {
  name: "Usb",
  iconNode: iconNode$L
}));
var Usb$1 = Usb;

const iconNode$K = [['path', {
  d: 'M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2',
  key: '1yyitq'
}], ['circle', {
  cx: '9',
  cy: '7',
  r: '4',
  key: 'nufk8'
}], ['polyline', {
  points: '16 11 18 13 22 9',
  key: '1pwet4'
}]];
const UserCheck = props => createComponent(Icon$1, mergeProps(props, {
  name: "UserCheck",
  iconNode: iconNode$K
}));
var UserCheck$1 = UserCheck;

const iconNode$J = [['path', {
  d: 'M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2',
  key: '1yyitq'
}], ['circle', {
  cx: '9',
  cy: '7',
  r: '4',
  key: 'nufk8'
}], ['circle', {
  cx: '19',
  cy: '11',
  r: '2',
  key: '1rxg02'
}], ['path', {
  d: 'M19 8v1',
  key: '1iffrw'
}], ['path', {
  d: 'M19 13v1',
  key: 'z4xc62'
}], ['path', {
  d: 'm21.6 9.5-.87.5',
  key: '6lxupl'
}], ['path', {
  d: 'm17.27 12-.87.5',
  key: '1rwhxx'
}], ['path', {
  d: 'm21.6 12.5-.87-.5',
  key: 'agvc9a'
}], ['path', {
  d: 'm17.27 10-.87-.5',
  key: '12d57s'
}]];
const UserCog = props => createComponent(Icon$1, mergeProps(props, {
  name: "UserCog",
  iconNode: iconNode$J
}));
var UserCog$1 = UserCog;

const iconNode$I = [['path', {
  d: 'M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2',
  key: '1yyitq'
}], ['circle', {
  cx: '9',
  cy: '7',
  r: '4',
  key: 'nufk8'
}], ['line', {
  x1: '22',
  y1: '11',
  x2: '16',
  y2: '11',
  key: '8bk570'
}]];
const UserMinus = props => createComponent(Icon$1, mergeProps(props, {
  name: "UserMinus",
  iconNode: iconNode$I
}));
var UserMinus$1 = UserMinus;

const iconNode$H = [['path', {
  d: 'M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2',
  key: '1yyitq'
}], ['circle', {
  cx: '9',
  cy: '7',
  r: '4',
  key: 'nufk8'
}], ['line', {
  x1: '19',
  y1: '8',
  x2: '19',
  y2: '14',
  key: '9s353q'
}], ['line', {
  x1: '22',
  y1: '11',
  x2: '16',
  y2: '11',
  key: '8bk570'
}]];
const UserPlus = props => createComponent(Icon$1, mergeProps(props, {
  name: "UserPlus",
  iconNode: iconNode$H
}));
var UserPlus$1 = UserPlus;

const iconNode$G = [['path', {
  d: 'M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2',
  key: '1yyitq'
}], ['circle', {
  cx: '9',
  cy: '7',
  r: '4',
  key: 'nufk8'
}], ['line', {
  x1: '17',
  y1: '8',
  x2: '22',
  y2: '13',
  key: '10apcb'
}], ['line', {
  x1: '22',
  y1: '8',
  x2: '17',
  y2: '13',
  key: '1l8di5'
}]];
const UserX = props => createComponent(Icon$1, mergeProps(props, {
  name: "UserX",
  iconNode: iconNode$G
}));
var UserX$1 = UserX;

const iconNode$F = [['path', {
  d: 'M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2',
  key: '975kel'
}], ['circle', {
  cx: '12',
  cy: '7',
  r: '4',
  key: '17ys0d'
}]];
const User = props => createComponent(Icon$1, mergeProps(props, {
  name: "User",
  iconNode: iconNode$F
}));
var User$1 = User;

const iconNode$E = [['path', {
  d: 'M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2',
  key: '1yyitq'
}], ['circle', {
  cx: '9',
  cy: '7',
  r: '4',
  key: 'nufk8'
}], ['path', {
  d: 'M22 21v-2a4 4 0 0 0-3-3.87',
  key: 'kshegd'
}], ['path', {
  d: 'M16 3.13a4 4 0 0 1 0 7.75',
  key: '1da9ce'
}]];
const Users = props => createComponent(Icon$1, mergeProps(props, {
  name: "Users",
  iconNode: iconNode$E
}));
var Users$1 = Users;

const iconNode$D = [['path', {
  d: 'm16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8',
  key: 'n7qcjb'
}], ['path', {
  d: 'M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7',
  key: 'd0u48b'
}], ['path', {
  d: 'm2.1 21.8 6.4-6.3',
  key: 'yn04lh'
}], ['path', {
  d: 'm19 5-7 7',
  key: '194lzd'
}]];
const UtensilsCrossed = props => createComponent(Icon$1, mergeProps(props, {
  name: "UtensilsCrossed",
  iconNode: iconNode$D
}));
var UtensilsCrossed$1 = UtensilsCrossed;

const iconNode$C = [['path', {
  d: 'M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2',
  key: 'cjf0a3'
}], ['path', {
  d: 'M7 2v20',
  key: '1473qp'
}], ['path', {
  d: 'M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7',
  key: '1ogz0v'
}]];
const Utensils = props => createComponent(Icon$1, mergeProps(props, {
  name: "Utensils",
  iconNode: iconNode$C
}));
var Utensils$1 = Utensils;

const iconNode$B = [['path', {
  d: 'M2 2c4.056 3.007 9.232 9.337 10 20 .897-6.818 1.5-9.5 4-14',
  key: 'eao96d'
}], ['path', {
  d: 'M20.375 6.533A9.953 9.953 0 0 1 22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2c2.003 0 3.869.589 5.433 1.603',
  key: 'fbotu5'
}], ['path', {
  d: 'M17.104 4c-1.002 1.274-1.146 2.586-1.1 4 1.9-.1 3.003-.201 4.3-1.4 1.406-1.3 1.6-2.3 1.7-4.6-2.7.1-3.623.375-4.9 2Z',
  key: '14agoq'
}]];
const Vegan = props => createComponent(Icon$1, mergeProps(props, {
  name: "Vegan",
  iconNode: iconNode$B
}));
var Vegan$1 = Vegan;

const iconNode$A = [['path', {
  d: 'M2 12a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V7h-5a8 8 0 0 0-5 2 8 8 0 0 0-5-2H2Z',
  key: '1g6z3j'
}], ['path', {
  d: 'M6 11c1.5 0 3 .5 3 2-2 0-3 0-3-2Z',
  key: 'c2lwnf'
}], ['path', {
  d: 'M18 11c-1.5 0-3 .5-3 2 2 0 3 0 3-2Z',
  key: 'njd9zo'
}]];
const VenetianMask = props => createComponent(Icon$1, mergeProps(props, {
  name: "VenetianMask",
  iconNode: iconNode$A
}));
var VenetianMask$1 = VenetianMask;

const iconNode$z = [['path', {
  d: 'M12 3c-1.2 0-2.4.6-3 1.7A3.6 3.6 0 0 0 4.6 9c-1 .6-1.7 1.8-1.7 3s.7 2.4 1.7 3c-.3 1.2 0 2.5 1 3.4.8.8 2.1 1.2 3.3 1 .6 1 1.8 1.6 3 1.6s2.4-.6 3-1.7c1.2.3 2.5 0 3.4-1 .8-.8 1.2-2 1-3.3 1-.6 1.6-1.8 1.6-3s-.6-2.4-1.7-3c.3-1.2 0-2.5-1-3.4a3.7 3.7 0 0 0-3.3-1c-.6-1-1.8-1.6-3-1.6Z',
  key: '7kujkm'
}], ['path', {
  d: 'm9 12 2 2 4-4',
  key: 'dzmm74'
}]];
const Verified = props => createComponent(Icon$1, mergeProps(props, {
  name: "Verified",
  iconNode: iconNode$z
}));
var Verified$1 = Verified;

const iconNode$y = [['path', {
  d: 'm2 8 2 2-2 2 2 2-2 2',
  key: 'sv1b1'
}], ['path', {
  d: 'm22 8-2 2 2 2-2 2 2 2',
  key: '101i4y'
}], ['path', {
  d: 'M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2',
  key: '1hbad5'
}], ['path', {
  d: 'M16 10.34V6c0-.55-.45-1-1-1h-4.34',
  key: '1x5tf0'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const VibrateOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "VibrateOff",
  iconNode: iconNode$y
}));
var VibrateOff$1 = VibrateOff;

const iconNode$x = [['path', {
  d: 'm2 8 2 2-2 2 2 2-2 2',
  key: 'sv1b1'
}], ['path', {
  d: 'm22 8-2 2 2 2-2 2 2 2',
  key: '101i4y'
}], ['rect', {
  x: '8',
  y: '5',
  width: '8',
  height: '14',
  rx: '1',
  key: 'bi6xeo'
}]];
const Vibrate = props => createComponent(Icon$1, mergeProps(props, {
  name: "Vibrate",
  iconNode: iconNode$x
}));
var Vibrate$1 = Vibrate;

const iconNode$w = [['path', {
  d: 'M10.66 6H14a2 2 0 0 1 2 2v2.34l1 1L22 8v8',
  key: 'ubwiq0'
}], ['path', {
  d: 'M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2l10 10Z',
  key: '1l10zd'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const VideoOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "VideoOff",
  iconNode: iconNode$w
}));
var VideoOff$1 = VideoOff;

const iconNode$v = [['path', {
  d: 'm22 8-6 4 6 4V8Z',
  key: '50v9me'
}], ['rect', {
  x: '2',
  y: '6',
  width: '14',
  height: '12',
  rx: '2',
  ry: '2',
  key: '14il7g'
}]];
const Video = props => createComponent(Icon$1, mergeProps(props, {
  name: "Video",
  iconNode: iconNode$v
}));
var Video$1 = Video;

const iconNode$u = [['path', {
  d: 'M5 12s2.545-5 7-5c4.454 0 7 5 7 5s-2.546 5-7 5c-4.455 0-7-5-7-5z',
  key: 'vptub8'
}], ['path', {
  d: 'M12 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2z',
  key: '10lhjs'
}], ['path', {
  d: 'M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2',
  key: 'mrq65r'
}], ['path', {
  d: 'M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2',
  key: 'be3xqs'
}]];
const View = props => createComponent(Icon$1, mergeProps(props, {
  name: "View",
  iconNode: iconNode$u
}));
var View$1 = View;

const iconNode$t = [['circle', {
  cx: '6',
  cy: '12',
  r: '4',
  key: '1ehtga'
}], ['circle', {
  cx: '18',
  cy: '12',
  r: '4',
  key: '4vafl8'
}], ['line', {
  x1: '6',
  y1: '16',
  x2: '18',
  y2: '16',
  key: '1xgyj1'
}]];
const Voicemail = props => createComponent(Icon$1, mergeProps(props, {
  name: "Voicemail",
  iconNode: iconNode$t
}));
var Voicemail$1 = Voicemail;

const iconNode$s = [['polygon', {
  points: '11 5 6 9 2 9 2 15 6 15 11 19 11 5',
  key: '16drj5'
}], ['path', {
  d: 'M15.54 8.46a5 5 0 0 1 0 7.07',
  key: 'ltjumu'
}]];
const Volume1 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Volume1",
  iconNode: iconNode$s
}));
var Volume1$1 = Volume1;

const iconNode$r = [['polygon', {
  points: '11 5 6 9 2 9 2 15 6 15 11 19 11 5',
  key: '16drj5'
}], ['path', {
  d: 'M15.54 8.46a5 5 0 0 1 0 7.07',
  key: 'ltjumu'
}], ['path', {
  d: 'M19.07 4.93a10 10 0 0 1 0 14.14',
  key: '1kegas'
}]];
const Volume2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Volume2",
  iconNode: iconNode$r
}));
var Volume2$1 = Volume2;

const iconNode$q = [['polygon', {
  points: '11 5 6 9 2 9 2 15 6 15 11 19 11 5',
  key: '16drj5'
}], ['line', {
  x1: '22',
  y1: '9',
  x2: '16',
  y2: '15',
  key: '3gspht'
}], ['line', {
  x1: '16',
  y1: '9',
  x2: '22',
  y2: '15',
  key: '2tltpt'
}]];
const VolumeX = props => createComponent(Icon$1, mergeProps(props, {
  name: "VolumeX",
  iconNode: iconNode$q
}));
var VolumeX$1 = VolumeX;

const iconNode$p = [['polygon', {
  points: '11 5 6 9 2 9 2 15 6 15 11 19 11 5',
  key: '16drj5'
}]];
const Volume = props => createComponent(Icon$1, mergeProps(props, {
  name: "Volume",
  iconNode: iconNode$p
}));
var Volume$1 = Volume;

const iconNode$o = [['path', {
  d: 'M20 12V8H6a2 2 0 0 1-2-2c0-1.1.9-2 2-2h12v4',
  key: 'st805m'
}], ['path', {
  d: 'M4 6v12c0 1.1.9 2 2 2h14v-4',
  key: '16cu1e'
}], ['path', {
  d: 'M18 12a2 2 0 0 0-2 2c0 1.1.9 2 2 2h4v-4h-4z',
  key: 'lwd56p'
}]];
const Wallet = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wallet",
  iconNode: iconNode$o
}));
var Wallet$1 = Wallet;

const iconNode$n = [['path', {
  d: 'm21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72Z',
  key: '1bcowg'
}], ['path', {
  d: 'm14 7 3 3',
  key: '1r5n42'
}], ['path', {
  d: 'M5 6v4',
  key: 'ilb8ba'
}], ['path', {
  d: 'M19 14v4',
  key: 'blhpug'
}], ['path', {
  d: 'M10 2v2',
  key: '7u0qdc'
}], ['path', {
  d: 'M7 8H3',
  key: 'zfb6yr'
}], ['path', {
  d: 'M21 16h-4',
  key: '1cnmox'
}], ['path', {
  d: 'M11 3H9',
  key: '1obp7u'
}]];
const Wand2 = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wand2",
  iconNode: iconNode$n
}));
var Wand2$1 = Wand2;

const iconNode$m = [['path', {
  d: 'M15 4V2',
  key: 'z1p9b7'
}], ['path', {
  d: 'M15 16v-2',
  key: 'px0unx'
}], ['path', {
  d: 'M8 9h2',
  key: '1g203m'
}], ['path', {
  d: 'M20 9h2',
  key: '19tzq7'
}], ['path', {
  d: 'M17.8 11.8 19 13',
  key: 'yihg8r'
}], ['path', {
  d: 'M15 9h0',
  key: 'kg5t1u'
}], ['path', {
  d: 'M17.8 6.2 19 5',
  key: 'fd4us0'
}], ['path', {
  d: 'm3 21 9-9',
  key: '1jfql5'
}], ['path', {
  d: 'M12.2 6.2 11 5',
  key: 'i3da3b'
}]];
const Wand = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wand",
  iconNode: iconNode$m
}));
var Wand$1 = Wand;

const iconNode$l = [['circle', {
  cx: '12',
  cy: '12',
  r: '6',
  key: '1vlfrh'
}], ['polyline', {
  points: '12 10 12 12 13 13',
  key: '19dquz'
}], ['path', {
  d: 'm16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05',
  key: '18k57s'
}], ['path', {
  d: 'm7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05',
  key: '16ny36'
}]];
const Watch = props => createComponent(Icon$1, mergeProps(props, {
  name: "Watch",
  iconNode: iconNode$l
}));
var Watch$1 = Watch;

const iconNode$k = [['path', {
  d: 'M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1',
  key: 'knzxuh'
}], ['path', {
  d: 'M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1',
  key: '2jd2cc'
}], ['path', {
  d: 'M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1',
  key: 'rd2r6e'
}]];
const Waves = props => createComponent(Icon$1, mergeProps(props, {
  name: "Waves",
  iconNode: iconNode$k
}));
var Waves$1 = Waves;

const iconNode$j = [['circle', {
  cx: '12',
  cy: '10',
  r: '8',
  key: '1gshiw'
}], ['circle', {
  cx: '12',
  cy: '10',
  r: '3',
  key: 'ilqhr7'
}], ['path', {
  d: 'M7 22h10',
  key: '10w4w3'
}], ['path', {
  d: 'M12 22v-4',
  key: '1utk9m'
}]];
const Webcam = props => createComponent(Icon$1, mergeProps(props, {
  name: "Webcam",
  iconNode: iconNode$j
}));
var Webcam$1 = Webcam;

const iconNode$i = [['path', {
  d: 'M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2',
  key: 'q3hayz'
}], ['path', {
  d: 'm6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06',
  key: '1go1hn'
}], ['path', {
  d: 'm12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8',
  key: 'qlwsc0'
}]];
const Webhook = props => createComponent(Icon$1, mergeProps(props, {
  name: "Webhook",
  iconNode: iconNode$i
}));
var Webhook$1 = Webhook;

const iconNode$h = [['path', {
  d: 'm2 22 10-10',
  key: '28ilpk'
}], ['path', {
  d: 'm16 8-1.17 1.17',
  key: '1qqm82'
}], ['path', {
  d: 'M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z',
  key: '1rdhi6'
}], ['path', {
  d: 'm8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97',
  key: '4wz8re'
}], ['path', {
  d: 'M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62',
  key: 'rves66'
}], ['path', {
  d: 'M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z',
  key: '19rau1'
}], ['path', {
  d: 'M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z',
  key: 'tc8ph9'
}], ['path', {
  d: 'm16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98',
  key: 'ak46r'
}], ['path', {
  d: 'M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28',
  key: '1tw520'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const WheatOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "WheatOff",
  iconNode: iconNode$h
}));
var WheatOff$1 = WheatOff;

const iconNode$g = [['path', {
  d: 'M2 22 16 8',
  key: '60hf96'
}], ['path', {
  d: 'M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z',
  key: '1rdhi6'
}], ['path', {
  d: 'M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z',
  key: '1sdzmb'
}], ['path', {
  d: 'M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z',
  key: 'eoatbi'
}], ['path', {
  d: 'M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z',
  key: '19rau1'
}], ['path', {
  d: 'M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z',
  key: 'tc8ph9'
}], ['path', {
  d: 'M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z',
  key: '2m8kc5'
}], ['path', {
  d: 'M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z',
  key: 'vex3ng'
}]];
const Wheat = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wheat",
  iconNode: iconNode$g
}));
var Wheat$1 = Wheat;

const iconNode$f = [['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}], ['path', {
  d: 'M8.5 16.5a5 5 0 0 1 7 0',
  key: 'sej527'
}], ['path', {
  d: 'M2 8.82a15 15 0 0 1 4.17-2.65',
  key: '11utq1'
}], ['path', {
  d: 'M10.66 5c4.01-.36 8.14.9 11.34 3.76',
  key: 'hxefdu'
}], ['path', {
  d: 'M16.85 11.25a10 10 0 0 1 2.22 1.68',
  key: 'q734kn'
}], ['path', {
  d: 'M5 13a10 10 0 0 1 5.24-2.76',
  key: 'piq4yl'
}], ['line', {
  x1: '12',
  y1: '20',
  x2: '12.01',
  y2: '20',
  key: 'wbu7xg'
}]];
const WifiOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "WifiOff",
  iconNode: iconNode$f
}));
var WifiOff$1 = WifiOff;

const iconNode$e = [['path', {
  d: 'M5 13a10 10 0 0 1 14 0',
  key: '6v8j51'
}], ['path', {
  d: 'M8.5 16.5a5 5 0 0 1 7 0',
  key: 'sej527'
}], ['path', {
  d: 'M2 8.82a15 15 0 0 1 20 0',
  key: 'dnpr2z'
}], ['line', {
  x1: '12',
  y1: '20',
  x2: '12.01',
  y2: '20',
  key: 'wbu7xg'
}]];
const Wifi = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wifi",
  iconNode: iconNode$e
}));
var Wifi$1 = Wifi;

const iconNode$d = [['path', {
  d: 'M17.7 7.7a2.5 2.5 0 1 1 1.8 4.3H2',
  key: '1k4u03'
}], ['path', {
  d: 'M9.6 4.6A2 2 0 1 1 11 8H2',
  key: 'b7d0fd'
}], ['path', {
  d: 'M12.6 19.4A2 2 0 1 0 14 16H2',
  key: '1p5cb3'
}]];
const Wind = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wind",
  iconNode: iconNode$d
}));
var Wind$1 = Wind;

const iconNode$c = [['path', {
  d: 'M8 22h8',
  key: 'rmew8v'
}], ['path', {
  d: 'M7 10h3m7 0h-1.343',
  key: 'v48bem'
}], ['path', {
  d: 'M12 15v7',
  key: 't2xh3l'
}], ['path', {
  d: 'M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198',
  key: '1ymjlu'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const WineOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "WineOff",
  iconNode: iconNode$c
}));
var WineOff$1 = WineOff;

const iconNode$b = [['path', {
  d: 'M8 22h8',
  key: 'rmew8v'
}], ['path', {
  d: 'M7 10h10',
  key: '1101jm'
}], ['path', {
  d: 'M12 15v7',
  key: 't2xh3l'
}], ['path', {
  d: 'M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z',
  key: '10ffi3'
}]];
const Wine = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wine",
  iconNode: iconNode$b
}));
var Wine$1 = Wine;

const iconNode$a = [['line', {
  x1: '3',
  y1: '6',
  x2: '21',
  y2: '6',
  key: '1tp2lp'
}], ['path', {
  d: 'M3 12h15a3 3 0 1 1 0 6h-4',
  key: '1cl7v7'
}], ['polyline', {
  points: '16 16 14 18 16 20',
  key: '1jznyi'
}], ['line', {
  x1: '3',
  y1: '18',
  x2: '10',
  y2: '18',
  key: '16bh46'
}]];
const WrapText = props => createComponent(Icon$1, mergeProps(props, {
  name: "WrapText",
  iconNode: iconNode$a
}));
var WrapText$1 = WrapText;

const iconNode$9 = [['path', {
  d: 'M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z',
  key: 'cbrjhi'
}]];
const Wrench = props => createComponent(Icon$1, mergeProps(props, {
  name: "Wrench",
  iconNode: iconNode$9
}));
var Wrench$1 = Wrench;

const iconNode$8 = [['circle', {
  cx: '12',
  cy: '12',
  r: '10',
  key: '1mglay'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '9',
  y2: '15',
  key: '19zs77'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '15',
  y2: '15',
  key: '10u9bu'
}]];
const XCircle = props => createComponent(Icon$1, mergeProps(props, {
  name: "XCircle",
  iconNode: iconNode$8
}));
var XCircle$1 = XCircle;

const iconNode$7 = [['polygon', {
  points: '7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2',
  key: 'h1p8hx'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '9',
  y2: '15',
  key: '19zs77'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '15',
  y2: '15',
  key: '10u9bu'
}]];
const XOctagon = props => createComponent(Icon$1, mergeProps(props, {
  name: "XOctagon",
  iconNode: iconNode$7
}));
var XOctagon$1 = XOctagon;

const iconNode$6 = [['rect', {
  x: '3',
  y: '3',
  width: '18',
  height: '18',
  rx: '2',
  ry: '2',
  key: 'maln0c'
}], ['line', {
  x1: '9',
  y1: '9',
  x2: '15',
  y2: '15',
  key: '10u9bu'
}], ['line', {
  x1: '15',
  y1: '9',
  x2: '9',
  y2: '15',
  key: '19zs77'
}]];
const XSquare = props => createComponent(Icon$1, mergeProps(props, {
  name: "XSquare",
  iconNode: iconNode$6
}));
var XSquare$1 = XSquare;

const iconNode$5 = [['line', {
  x1: '18',
  y1: '6',
  x2: '6',
  y2: '18',
  key: '1o5bob'
}], ['line', {
  x1: '6',
  y1: '6',
  x2: '18',
  y2: '18',
  key: 'z4dcbv'
}]];
const X = props => createComponent(Icon$1, mergeProps(props, {
  name: "X",
  iconNode: iconNode$5
}));
var X$1 = X;

const iconNode$4 = [['path', {
  d: 'M12 19c-2.3 0-6.4-.2-8.1-.6-.7-.2-1.2-.7-1.4-1.4-.3-1.1-.5-3.4-.5-5s.2-3.9.5-5c.2-.7.7-1.2 1.4-1.4C5.6 5.2 9.7 5 12 5s6.4.2 8.1.6c.7.2 1.2.7 1.4 1.4.3 1.1.5 3.4.5 5s-.2 3.9-.5 5c-.2.7-.7 1.2-1.4 1.4-1.7.4-5.8.6-8.1.6 0 0 0 0 0 0z',
  key: '1nqccg'
}], ['polygon', {
  points: '10 15 15 12 10 9',
  key: '1c7afu'
}]];
const Youtube = props => createComponent(Icon$1, mergeProps(props, {
  name: "Youtube",
  iconNode: iconNode$4
}));
var Youtube$1 = Youtube;

const iconNode$3 = [['polyline', {
  points: '12.41 6.75 13 2 10.57 4.92',
  key: '122m05'
}], ['polyline', {
  points: '18.57 12.91 21 10 15.66 10',
  key: '16r43o'
}], ['polyline', {
  points: '8 8 3 14 12 14 11 22 16 16',
  key: 'tmh4bc'
}], ['line', {
  x1: '2',
  y1: '2',
  x2: '22',
  y2: '22',
  key: '1w4vcy'
}]];
const ZapOff = props => createComponent(Icon$1, mergeProps(props, {
  name: "ZapOff",
  iconNode: iconNode$3
}));
var ZapOff$1 = ZapOff;

const iconNode$2 = [['polygon', {
  points: '13 2 3 14 12 14 11 22 21 10 12 10 13 2',
  key: '45s27k'
}]];
const Zap = props => createComponent(Icon$1, mergeProps(props, {
  name: "Zap",
  iconNode: iconNode$2
}));
var Zap$1 = Zap;

const iconNode$1 = [['circle', {
  cx: '11',
  cy: '11',
  r: '8',
  key: '4ej97u'
}], ['line', {
  x1: '21',
  y1: '21',
  x2: '16.65',
  y2: '16.65',
  key: '1p50m8'
}], ['line', {
  x1: '11',
  y1: '8',
  x2: '11',
  y2: '14',
  key: 'jw7mvq'
}], ['line', {
  x1: '8',
  y1: '11',
  x2: '14',
  y2: '11',
  key: '1nivud'
}]];
const ZoomIn = props => createComponent(Icon$1, mergeProps(props, {
  name: "ZoomIn",
  iconNode: iconNode$1
}));
var ZoomIn$1 = ZoomIn;

const iconNode = [['circle', {
  cx: '11',
  cy: '11',
  r: '8',
  key: '4ej97u'
}], ['line', {
  x1: '21',
  y1: '21',
  x2: '16.65',
  y2: '16.65',
  key: '1p50m8'
}], ['line', {
  x1: '8',
  y1: '11',
  x2: '14',
  y2: '11',
  key: '1nivud'
}]];
const ZoomOut = props => createComponent(Icon$1, mergeProps(props, {
  name: "ZoomOut",
  iconNode: iconNode
}));
var ZoomOut$1 = ZoomOut;

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Accessibility: Accessibility$1,
  Activity: Activity$1,
  AirVent: AirVent$1,
  Airplay: Airplay$1,
  AlarmCheck: AlarmCheck$1,
  AlarmClockOff: AlarmClockOff$1,
  AlarmClock: AlarmClock$1,
  AlarmMinus: AlarmMinus$1,
  AlarmPlus: AlarmPlus$1,
  Album: Album$1,
  AlertCircle: AlertCircle$1,
  AlertOctagon: AlertOctagon$1,
  AlertTriangle: AlertTriangle$1,
  AlignCenterHorizontal: AlignCenterHorizontal$1,
  AlignCenterVertical: AlignCenterVertical$1,
  AlignCenter: AlignCenter$1,
  AlignEndHorizontal: AlignEndHorizontal$1,
  AlignEndVertical: AlignEndVertical$1,
  AlignHorizontalDistributeCenter: AlignHorizontalDistributeCenter$1,
  AlignHorizontalDistributeEnd: AlignHorizontalDistributeEnd$1,
  AlignHorizontalDistributeStart: AlignHorizontalDistributeStart$1,
  AlignHorizontalJustifyCenter: AlignHorizontalJustifyCenter$1,
  AlignHorizontalJustifyEnd: AlignHorizontalJustifyEnd$1,
  AlignHorizontalJustifyStart: AlignHorizontalJustifyStart$1,
  AlignHorizontalSpaceAround: AlignHorizontalSpaceAround$1,
  AlignHorizontalSpaceBetween: AlignHorizontalSpaceBetween$1,
  AlignJustify: AlignJustify$1,
  AlignLeft: AlignLeft$1,
  AlignRight: AlignRight$1,
  AlignStartHorizontal: AlignStartHorizontal$1,
  AlignStartVertical: AlignStartVertical$1,
  AlignVerticalDistributeCenter: AlignVerticalDistributeCenter$1,
  AlignVerticalDistributeEnd: AlignVerticalDistributeEnd$1,
  AlignVerticalDistributeStart: AlignVerticalDistributeStart$1,
  AlignVerticalJustifyCenter: AlignVerticalJustifyCenter$1,
  AlignVerticalJustifyEnd: AlignVerticalJustifyEnd$1,
  AlignVerticalJustifyStart: AlignVerticalJustifyStart$1,
  AlignVerticalSpaceAround: AlignVerticalSpaceAround$1,
  AlignVerticalSpaceBetween: AlignVerticalSpaceBetween$1,
  Anchor: Anchor$1,
  Angry: Angry$1,
  Annoyed: Annoyed$1,
  Aperture: Aperture$1,
  Apple: Apple$1,
  ArchiveRestore: ArchiveRestore$1,
  Archive: Archive$1,
  Armchair: Armchair$1,
  ArrowBigDown: ArrowBigDown$1,
  ArrowBigLeft: ArrowBigLeft$1,
  ArrowBigRight: ArrowBigRight$1,
  ArrowBigUp: ArrowBigUp$1,
  ArrowDownCircle: ArrowDownCircle$1,
  ArrowDownLeft: ArrowDownLeft$1,
  ArrowDownRight: ArrowDownRight$1,
  ArrowDown: ArrowDown$1,
  ArrowLeftCircle: ArrowLeftCircle$1,
  ArrowLeftRight: ArrowLeftRight$1,
  ArrowLeft: ArrowLeft$1,
  ArrowRightCircle: ArrowRightCircle$1,
  ArrowRight: ArrowRight$1,
  ArrowUpCircle: ArrowUpCircle$1,
  ArrowUpDown: ArrowUpDown$1,
  ArrowUpLeft: ArrowUpLeft$1,
  ArrowUpRight: ArrowUpRight$1,
  ArrowUp: ArrowUp$1,
  Asterisk: Asterisk$1,
  AtSign: AtSign$1,
  Award: Award$1,
  Axe: Axe$1,
  Axis3d: Axis3d$1,
  Baby: Baby$1,
  Backpack: Backpack$1,
  BaggageClaim: BaggageClaim$1,
  Banana: Banana$1,
  Banknote: Banknote$1,
  BarChart2: BarChart2$1,
  BarChart3: BarChart3$1,
  BarChart4: BarChart4$1,
  BarChartHorizontal: BarChartHorizontal$1,
  BarChart: BarChart$1,
  Baseline: Baseline$1,
  Bath: Bath$1,
  BatteryCharging: BatteryCharging$1,
  BatteryFull: BatteryFull$1,
  BatteryLow: BatteryLow$1,
  BatteryMedium: BatteryMedium$1,
  BatteryWarning: BatteryWarning$1,
  Battery: Battery$1,
  Beaker: Beaker$1,
  BeanOff: BeanOff$1,
  Bean: Bean$1,
  BedDouble: BedDouble$1,
  BedSingle: BedSingle$1,
  Bed: Bed$1,
  Beef: Beef$1,
  Beer: Beer$1,
  BellMinus: BellMinus$1,
  BellOff: BellOff$1,
  BellPlus: BellPlus$1,
  BellRing: BellRing$1,
  Bell: Bell$1,
  Bike: Bike$1,
  Binary: Binary$1,
  Bitcoin: Bitcoin$1,
  BluetoothConnected: BluetoothConnected$1,
  BluetoothOff: BluetoothOff$1,
  BluetoothSearching: BluetoothSearching$1,
  Bluetooth: Bluetooth$1,
  Bold: Bold$1,
  Bomb: Bomb$1,
  Bone: Bone$1,
  BookOpenCheck: BookOpenCheck$1,
  BookOpen: BookOpen$1,
  Book: Book$1,
  BookmarkMinus: BookmarkMinus$1,
  BookmarkPlus: BookmarkPlus$1,
  Bookmark: Bookmark$1,
  Bot: Bot$1,
  BoxSelect: BoxSelect$1,
  Box: Box$1,
  Boxes: Boxes$1,
  Briefcase: Briefcase$1,
  Brush: Brush$1,
  Bug: Bug$1,
  Building2: Building2$1,
  Building: Building$1,
  Bus: Bus$1,
  Cake: Cake$1,
  Calculator: Calculator$1,
  CalendarCheck2: CalendarCheck2$1,
  CalendarCheck: CalendarCheck$1,
  CalendarClock: CalendarClock$1,
  CalendarDays: CalendarDays$1,
  CalendarHeart: CalendarHeart$1,
  CalendarMinus: CalendarMinus$1,
  CalendarOff: CalendarOff$1,
  CalendarPlus: CalendarPlus$1,
  CalendarRange: CalendarRange$1,
  CalendarSearch: CalendarSearch$1,
  CalendarX2: CalendarX2$1,
  CalendarX: CalendarX$1,
  Calendar: Calendar$1,
  CameraOff: CameraOff$1,
  Camera: Camera$1,
  CandyOff: CandyOff$1,
  Candy: Candy$1,
  Car: Car$1,
  Carrot: Carrot$1,
  Cast: Cast$1,
  Cat: Cat$1,
  CheckCheck: CheckCheck$1,
  CheckCircle2: CheckCircle2$1,
  CheckCircle: CheckCircle$1,
  CheckSquare: CheckSquare$1,
  Check: Check$1,
  ChefHat: ChefHat$1,
  Cherry: Cherry$1,
  ChevronDown: ChevronDown$1,
  ChevronFirst: ChevronFirst$1,
  ChevronLast: ChevronLast$1,
  ChevronLeft: ChevronLeft$1,
  ChevronRight: ChevronRight$1,
  ChevronUp: ChevronUp$1,
  ChevronsDownUp: ChevronsDownUp$1,
  ChevronsDown: ChevronsDown$1,
  ChevronsLeftRight: ChevronsLeftRight$1,
  ChevronsLeft: ChevronsLeft$1,
  ChevronsRightLeft: ChevronsRightLeft$1,
  ChevronsRight: ChevronsRight$1,
  ChevronsUpDown: ChevronsUpDown$1,
  ChevronsUp: ChevronsUp$1,
  Chrome: Chrome$1,
  CigaretteOff: CigaretteOff$1,
  Cigarette: Cigarette$1,
  CircleDot: CircleDot$1,
  CircleEllipsis: CircleEllipsis$1,
  CircleSlashed: CircleSlashed$1,
  Circle: Circle$1,
  Citrus: Citrus$1,
  Clapperboard: Clapperboard$1,
  ClipboardCheck: ClipboardCheck$1,
  ClipboardCopy: ClipboardCopy$1,
  ClipboardEdit: ClipboardEdit$1,
  ClipboardList: ClipboardList$1,
  ClipboardSignature: ClipboardSignature$1,
  ClipboardType: ClipboardType$1,
  ClipboardX: ClipboardX$1,
  Clipboard: Clipboard$1,
  Clock1: Clock1$1,
  Clock10: Clock10$1,
  Clock11: Clock11$1,
  Clock12: Clock12$1,
  Clock2: Clock2$1,
  Clock3: Clock3$1,
  Clock4: Clock4$1,
  Clock5: Clock5$1,
  Clock6: Clock6$1,
  Clock7: Clock7$1,
  Clock8: Clock8$1,
  Clock9: Clock9$1,
  Clock: Clock$1,
  CloudCog: CloudCog$1,
  CloudDrizzle: CloudDrizzle$1,
  CloudFog: CloudFog$1,
  CloudHail: CloudHail$1,
  CloudLightning: CloudLightning$1,
  CloudMoonRain: CloudMoonRain$1,
  CloudMoon: CloudMoon$1,
  CloudOff: CloudOff$1,
  CloudRainWind: CloudRainWind$1,
  CloudRain: CloudRain$1,
  CloudSnow: CloudSnow$1,
  CloudSunRain: CloudSunRain$1,
  CloudSun: CloudSun$1,
  Cloud: Cloud$1,
  Cloudy: Cloudy$1,
  Clover: Clover$1,
  Code2: Code2$1,
  Code: Code$1,
  Codepen: Codepen$1,
  Codesandbox: Codesandbox$1,
  Coffee: Coffee$1,
  Cog: Cog$1,
  Coins: Coins$1,
  Columns: Columns$1,
  Command: Command$1,
  Compass: Compass$1,
  Component: Component$1,
  ConciergeBell: ConciergeBell$1,
  Contact: Contact$1,
  Contrast: Contrast$1,
  Cookie: Cookie$1,
  Copy: Copy$1,
  Copyleft: Copyleft$1,
  Copyright: Copyright$1,
  CornerDownLeft: CornerDownLeft$1,
  CornerDownRight: CornerDownRight$1,
  CornerLeftDown: CornerLeftDown$1,
  CornerLeftUp: CornerLeftUp$1,
  CornerRightDown: CornerRightDown$1,
  CornerRightUp: CornerRightUp$1,
  CornerUpLeft: CornerUpLeft$1,
  CornerUpRight: CornerUpRight$1,
  Cpu: Cpu$1,
  CreditCard: CreditCard$1,
  Croissant: Croissant$1,
  Crop: Crop$1,
  Cross: Cross$1,
  Crosshair: Crosshair$1,
  Crown: Crown$1,
  CupSoda: CupSoda$1,
  CurlyBraces: CurlyBraces$1,
  Currency: Currency$1,
  DatabaseBackup: DatabaseBackup$1,
  Database: Database$1,
  Delete: Delete$1,
  Diamond: Diamond$1,
  Dice1: Dice1$1,
  Dice2: Dice2$1,
  Dice3: Dice3$1,
  Dice4: Dice4$1,
  Dice5: Dice5$1,
  Dice6: Dice6$1,
  Dices: Dices$1,
  Diff: Diff$1,
  Disc: Disc$1,
  DivideCircle: DivideCircle$1,
  DivideSquare: DivideSquare$1,
  Divide: Divide$1,
  DnaOff: DnaOff$1,
  Dna: Dna$1,
  Dog: Dog$1,
  DollarSign: DollarSign$1,
  DownloadCloud: DownloadCloud$1,
  Download: Download$1,
  Dribbble: Dribbble$1,
  Droplet: Droplet$1,
  Droplets: Droplets$1,
  Drumstick: Drumstick$1,
  Dumbbell: Dumbbell$1,
  EarOff: EarOff$1,
  Ear: Ear$1,
  Edit2: Edit2$1,
  Edit3: Edit3$1,
  Edit: Edit$1,
  EggFried: EggFried$1,
  EggOff: EggOff$1,
  Egg: Egg$1,
  EqualNot: EqualNot$1,
  Equal: Equal$1,
  Eraser: Eraser$1,
  Euro: Euro$1,
  Expand: Expand$1,
  ExternalLink: ExternalLink$1,
  EyeOff: EyeOff$1,
  Eye: Eye$1,
  Facebook: Facebook$1,
  Factory: Factory$1,
  Fan: Fan$1,
  FastForward: FastForward$1,
  Feather: Feather$1,
  Figma: Figma$1,
  FileArchive: FileArchive$1,
  FileAudio2: FileAudio2$1,
  FileAudio: FileAudio$1,
  FileAxis3d: FileAxis3d$1,
  FileBadge2: FileBadge2$1,
  FileBadge: FileBadge$1,
  FileBarChart2: FileBarChart2$1,
  FileBarChart: FileBarChart$1,
  FileBox: FileBox$1,
  FileCheck2: FileCheck2$1,
  FileCheck: FileCheck$1,
  FileClock: FileClock$1,
  FileCode: FileCode$1,
  FileCog2: FileCog2$1,
  FileCog: FileCog$1,
  FileDiff: FileDiff$1,
  FileDigit: FileDigit$1,
  FileDown: FileDown$1,
  FileEdit: FileEdit$1,
  FileHeart: FileHeart$1,
  FileImage: FileImage$1,
  FileInput: FileInput$1,
  FileJson2: FileJson2$1,
  FileJson: FileJson$1,
  FileKey2: FileKey2$1,
  FileKey: FileKey$1,
  FileLineChart: FileLineChart$1,
  FileLock2: FileLock2$1,
  FileLock: FileLock$1,
  FileMinus2: FileMinus2$1,
  FileMinus: FileMinus$1,
  FileOutput: FileOutput$1,
  FilePieChart: FilePieChart$1,
  FilePlus2: FilePlus2$1,
  FilePlus: FilePlus$1,
  FileQuestion: FileQuestion$1,
  FileScan: FileScan$1,
  FileSearch2: FileSearch2$1,
  FileSearch: FileSearch$1,
  FileSignature: FileSignature$1,
  FileSpreadsheet: FileSpreadsheet$1,
  FileSymlink: FileSymlink$1,
  FileTerminal: FileTerminal$1,
  FileText: FileText$1,
  FileType2: FileType2$1,
  FileType: FileType$1,
  FileUp: FileUp$1,
  FileVideo2: FileVideo2$1,
  FileVideo: FileVideo$1,
  FileVolume2: FileVolume2$1,
  FileVolume: FileVolume$1,
  FileWarning: FileWarning$1,
  FileX2: FileX2$1,
  FileX: FileX$1,
  File: File$1,
  Files: Files$1,
  Film: Film$1,
  Filter: Filter$1,
  Fingerprint: Fingerprint$1,
  Fish: Fish$1,
  FlagOff: FlagOff$1,
  FlagTriangleLeft: FlagTriangleLeft$1,
  FlagTriangleRight: FlagTriangleRight$1,
  Flag: Flag$1,
  Flame: Flame$1,
  FlashlightOff: FlashlightOff$1,
  Flashlight: Flashlight$1,
  FlaskConicalOff: FlaskConicalOff$1,
  FlaskConical: FlaskConical$1,
  FlaskRound: FlaskRound$1,
  FlipHorizontal2: FlipHorizontal2$1,
  FlipHorizontal: FlipHorizontal$1,
  FlipVertical2: FlipVertical2$1,
  FlipVertical: FlipVertical$1,
  Flower2: Flower2$1,
  Flower: Flower$1,
  Focus: Focus$1,
  FolderArchive: FolderArchive$1,
  FolderCheck: FolderCheck$1,
  FolderClock: FolderClock$1,
  FolderClosed: FolderClosed$1,
  FolderCog2: FolderCog2$1,
  FolderCog: FolderCog$1,
  FolderDown: FolderDown$1,
  FolderEdit: FolderEdit$1,
  FolderHeart: FolderHeart$1,
  FolderInput: FolderInput$1,
  FolderKey: FolderKey$1,
  FolderLock: FolderLock$1,
  FolderMinus: FolderMinus$1,
  FolderOpen: FolderOpen$1,
  FolderOutput: FolderOutput$1,
  FolderPlus: FolderPlus$1,
  FolderSearch2: FolderSearch2$1,
  FolderSearch: FolderSearch$1,
  FolderSymlink: FolderSymlink$1,
  FolderTree: FolderTree$1,
  FolderUp: FolderUp$1,
  FolderX: FolderX$1,
  Folder: Folder$1,
  Folders: Folders$1,
  FormInput: FormInput$1,
  Forward: Forward$1,
  Frame: Frame$1,
  Framer: Framer$1,
  Frown: Frown$1,
  Fuel: Fuel$1,
  FunctionSquare: FunctionSquare$1,
  Gamepad2: Gamepad2$1,
  Gamepad: Gamepad$1,
  Gauge: Gauge$1,
  Gavel: Gavel$1,
  Gem: Gem$1,
  Ghost: Ghost$1,
  Gift: Gift$1,
  GitBranchPlus: GitBranchPlus$1,
  GitBranch: GitBranch$1,
  GitCommit: GitCommit$1,
  GitCompare: GitCompare$1,
  GitFork: GitFork$1,
  GitMerge: GitMerge$1,
  GitPullRequestClosed: GitPullRequestClosed$1,
  GitPullRequestDraft: GitPullRequestDraft$1,
  GitPullRequest: GitPullRequest$1,
  Github: Github$1,
  Gitlab: Gitlab$1,
  GlassWater: GlassWater$1,
  Glasses: Glasses$1,
  Globe2: Globe2$1,
  Globe: Globe$1,
  Grab: Grab$1,
  GraduationCap: GraduationCap$1,
  Grape: Grape$1,
  Grid: Grid$1,
  GripHorizontal: GripHorizontal$1,
  GripVertical: GripVertical$1,
  Hammer: Hammer$1,
  HandMetal: HandMetal$1,
  Hand: Hand$1,
  HardDrive: HardDrive$1,
  HardHat: HardHat$1,
  Hash: Hash$1,
  Haze: Haze$1,
  Heading1: Heading1$1,
  Heading2: Heading2$1,
  Heading3: Heading3$1,
  Heading4: Heading4$1,
  Heading5: Heading5$1,
  Heading6: Heading6$1,
  Heading: Heading$1,
  Headphones: Headphones$1,
  HeartCrack: HeartCrack$1,
  HeartHandshake: HeartHandshake$1,
  HeartOff: HeartOff$1,
  HeartPulse: HeartPulse$1,
  Heart: Heart$1,
  HelpCircle: HelpCircle$1,
  Hexagon: Hexagon$1,
  Highlighter: Highlighter$1,
  History: History$1,
  Home: Home$1,
  HopOff: HopOff$1,
  Hop: Hop$1,
  Hourglass: Hourglass$1,
  IceCream2: IceCream2$1,
  IceCream: IceCream$1,
  ImageMinus: ImageMinus$1,
  ImageOff: ImageOff$1,
  ImagePlus: ImagePlus$1,
  Image: Image$1,
  Import: Import$1,
  Inbox: Inbox$1,
  Indent: Indent$1,
  IndianRupee: IndianRupee$1,
  Infinity: Infinity$1,
  Info: Info$1,
  Inspect: Inspect$1,
  Instagram: Instagram$1,
  Italic: Italic$1,
  JapaneseYen: JapaneseYen$1,
  Joystick: Joystick$1,
  Key: Key$1,
  Keyboard: Keyboard$1,
  LampCeiling: LampCeiling$1,
  LampDesk: LampDesk$1,
  LampFloor: LampFloor$1,
  LampWallDown: LampWallDown$1,
  LampWallUp: LampWallUp$1,
  Lamp: Lamp$1,
  Landmark: Landmark$1,
  Languages: Languages$1,
  Laptop2: Laptop2$1,
  Laptop: Laptop$1,
  LassoSelect: LassoSelect$1,
  Lasso: Lasso$1,
  Laugh: Laugh$1,
  Layers: Layers$1,
  LayoutDashboard: LayoutDashboard$1,
  LayoutGrid: LayoutGrid$1,
  LayoutList: LayoutList$1,
  LayoutTemplate: LayoutTemplate$1,
  Layout: Layout$1,
  Leaf: Leaf$1,
  Library: Library$1,
  LifeBuoy: LifeBuoy$1,
  LightbulbOff: LightbulbOff$1,
  Lightbulb: Lightbulb$1,
  LineChart: LineChart$1,
  Link2Off: Link2Off$1,
  Link2: Link2$1,
  Link: Link$1,
  Linkedin: Linkedin$1,
  ListChecks: ListChecks$1,
  ListEnd: ListEnd$1,
  ListMinus: ListMinus$1,
  ListMusic: ListMusic$1,
  ListOrdered: ListOrdered$1,
  ListPlus: ListPlus$1,
  ListStart: ListStart$1,
  ListVideo: ListVideo$1,
  ListX: ListX$1,
  List: List$1,
  Loader2: Loader2$1,
  Loader: Loader$1,
  LocateFixed: LocateFixed$1,
  LocateOff: LocateOff$1,
  Locate: Locate$1,
  Lock: Lock$1,
  LogIn: LogIn$1,
  LogOut: LogOut$1,
  Luggage: Luggage$1,
  Magnet: Magnet$1,
  MailCheck: MailCheck$1,
  MailMinus: MailMinus$1,
  MailOpen: MailOpen$1,
  MailPlus: MailPlus$1,
  MailQuestion: MailQuestion$1,
  MailSearch: MailSearch$1,
  MailWarning: MailWarning$1,
  MailX: MailX$1,
  Mail: Mail$1,
  Mails: Mails$1,
  MapPinOff: MapPinOff$1,
  MapPin: MapPin$1,
  Map: Map$1,
  Martini: Martini$1,
  Maximize2: Maximize2$1,
  Maximize: Maximize$1,
  Medal: Medal$1,
  MegaphoneOff: MegaphoneOff$1,
  Megaphone: Megaphone$1,
  Meh: Meh$1,
  Menu: Menu$1,
  MessageCircle: MessageCircle$1,
  MessageSquare: MessageSquare$1,
  Mic2: Mic2$1,
  MicOff: MicOff$1,
  Mic: Mic$1,
  Microscope: Microscope$1,
  Microwave: Microwave$1,
  Milestone: Milestone$1,
  MilkOff: MilkOff$1,
  Milk: Milk$1,
  Minimize2: Minimize2$1,
  Minimize: Minimize$1,
  MinusCircle: MinusCircle$1,
  MinusSquare: MinusSquare$1,
  Minus: Minus$1,
  MonitorOff: MonitorOff$1,
  MonitorSmartphone: MonitorSmartphone$1,
  MonitorSpeaker: MonitorSpeaker$1,
  Monitor: Monitor$1,
  Moon: Moon$1,
  MoreHorizontal: MoreHorizontal$1,
  MoreVertical: MoreVertical$1,
  MountainSnow: MountainSnow$1,
  Mountain: Mountain$1,
  MousePointer2: MousePointer2$1,
  MousePointerClick: MousePointerClick$1,
  MousePointer: MousePointer$1,
  Mouse: Mouse$1,
  Move3d: Move3d$1,
  MoveDiagonal2: MoveDiagonal2$1,
  MoveDiagonal: MoveDiagonal$1,
  MoveHorizontal: MoveHorizontal$1,
  MoveVertical: MoveVertical$1,
  Move: Move$1,
  Music2: Music2$1,
  Music3: Music3$1,
  Music4: Music4$1,
  Music: Music$1,
  Navigation2Off: Navigation2Off$1,
  Navigation2: Navigation2$1,
  NavigationOff: NavigationOff$1,
  Navigation: Navigation$1,
  Network: Network$1,
  Newspaper: Newspaper$1,
  NutOff: NutOff$1,
  Nut: Nut$1,
  Octagon: Octagon$1,
  Option: Option$1,
  Outdent: Outdent$1,
  Package2: Package2$1,
  PackageCheck: PackageCheck$1,
  PackageMinus: PackageMinus$1,
  PackageOpen: PackageOpen$1,
  PackagePlus: PackagePlus$1,
  PackageSearch: PackageSearch$1,
  PackageX: PackageX$1,
  Package: Package$1,
  PaintBucket: PaintBucket$1,
  Paintbrush2: Paintbrush2$1,
  Paintbrush: Paintbrush$1,
  Palette: Palette$1,
  Palmtree: Palmtree$1,
  Paperclip: Paperclip$1,
  PartyPopper: PartyPopper$1,
  PauseCircle: PauseCircle$1,
  PauseOctagon: PauseOctagon$1,
  Pause: Pause$1,
  PenTool: PenTool$1,
  Pencil: Pencil$1,
  Percent: Percent$1,
  PersonStanding: PersonStanding$1,
  PhoneCall: PhoneCall$1,
  PhoneForwarded: PhoneForwarded$1,
  PhoneIncoming: PhoneIncoming$1,
  PhoneMissed: PhoneMissed$1,
  PhoneOff: PhoneOff$1,
  PhoneOutgoing: PhoneOutgoing$1,
  Phone: Phone$1,
  PieChart: PieChart$1,
  PiggyBank: PiggyBank$1,
  Pilcrow: Pilcrow$1,
  PinOff: PinOff$1,
  Pin: Pin$1,
  Pipette: Pipette$1,
  Pizza: Pizza$1,
  Plane: Plane$1,
  PlayCircle: PlayCircle$1,
  Play: Play$1,
  Plug2: Plug2$1,
  PlugZap: PlugZap$1,
  Plug: Plug$1,
  PlusCircle: PlusCircle$1,
  PlusSquare: PlusSquare$1,
  Plus: Plus$1,
  Pocket: Pocket$1,
  Podcast: Podcast$1,
  Pointer: Pointer$1,
  PoundSterling: PoundSterling$1,
  PowerOff: PowerOff$1,
  Power: Power$1,
  Printer: Printer$1,
  Puzzle: Puzzle$1,
  QrCode: QrCode$1,
  Quote: Quote$1,
  RadioReceiver: RadioReceiver$1,
  Radio: Radio$1,
  RectangleHorizontal: RectangleHorizontal$1,
  RectangleVertical: RectangleVertical$1,
  Recycle: Recycle$1,
  Redo2: Redo2$1,
  Redo: Redo$1,
  RefreshCcw: RefreshCcw$1,
  RefreshCw: RefreshCw$1,
  Refrigerator: Refrigerator$1,
  Regex: Regex$1,
  Repeat1: Repeat1$1,
  Repeat: Repeat$1,
  ReplyAll: ReplyAll$1,
  Reply: Reply$1,
  Rewind: Rewind$1,
  Rocket: Rocket$1,
  RockingChair: RockingChair$1,
  Rotate3d: Rotate3d$1,
  RotateCcw: RotateCcw$1,
  RotateCw: RotateCw$1,
  Rss: Rss$1,
  Ruler: Ruler$1,
  RussianRuble: RussianRuble$1,
  Sailboat: Sailboat$1,
  Salad: Salad$1,
  Sandwich: Sandwich$1,
  Save: Save$1,
  Scale3d: Scale3d$1,
  Scale: Scale$1,
  Scaling: Scaling$1,
  ScanFace: ScanFace$1,
  ScanLine: ScanLine$1,
  Scan: Scan$1,
  Scissors: Scissors$1,
  ScreenShareOff: ScreenShareOff$1,
  ScreenShare: ScreenShare$1,
  Scroll: Scroll$1,
  Search: Search$1,
  Send: Send$1,
  SeparatorHorizontal: SeparatorHorizontal$1,
  SeparatorVertical: SeparatorVertical$1,
  ServerCog: ServerCog$1,
  ServerCrash: ServerCrash$1,
  ServerOff: ServerOff$1,
  Server: Server$1,
  Settings2: Settings2$1,
  Settings: Settings$1,
  Share2: Share2$1,
  Share: Share$1,
  Sheet: Sheet$1,
  ShieldAlert: ShieldAlert$1,
  ShieldCheck: ShieldCheck$1,
  ShieldClose: ShieldClose$1,
  ShieldOff: ShieldOff$1,
  Shield: Shield$1,
  Shirt: Shirt$1,
  ShoppingBag: ShoppingBag$1,
  ShoppingCart: ShoppingCart$1,
  Shovel: Shovel$1,
  ShowerHead: ShowerHead$1,
  Shrink: Shrink$1,
  Shrub: Shrub$1,
  Shuffle: Shuffle$1,
  SidebarClose: SidebarClose$1,
  SidebarOpen: SidebarOpen$1,
  Sidebar: Sidebar$1,
  Sigma: Sigma$1,
  SignalHigh: SignalHigh$1,
  SignalLow: SignalLow$1,
  SignalMedium: SignalMedium$1,
  SignalZero: SignalZero$1,
  Signal: Signal$1,
  Siren: Siren$1,
  SkipBack: SkipBack$1,
  SkipForward: SkipForward$1,
  Skull: Skull$1,
  Slack: Slack$1,
  Slash: Slash$1,
  Slice: Slice$1,
  SlidersHorizontal: SlidersHorizontal$1,
  Sliders: Sliders$1,
  SmartphoneCharging: SmartphoneCharging$1,
  Smartphone: Smartphone$1,
  SmilePlus: SmilePlus$1,
  Smile: Smile$1,
  Snowflake: Snowflake$1,
  Sofa: Sofa$1,
  SortAsc: SortAsc$1,
  SortDesc: SortDesc$1,
  Soup: Soup$1,
  Speaker: Speaker$1,
  Spline: Spline$1,
  Sprout: Sprout$1,
  Square: Square$1,
  StarHalf: StarHalf$1,
  StarOff: StarOff$1,
  Star: Star$1,
  Stethoscope: Stethoscope$1,
  Sticker: Sticker$1,
  StickyNote: StickyNote$1,
  StopCircle: StopCircle$1,
  StretchHorizontal: StretchHorizontal$1,
  StretchVertical: StretchVertical$1,
  Strikethrough: Strikethrough$1,
  Subscript: Subscript$1,
  Subtitles: Subtitles$1,
  SunDim: SunDim$1,
  SunMedium: SunMedium$1,
  SunMoon: SunMoon$1,
  SunSnow: SunSnow$1,
  Sun: Sun$1,
  Sunrise: Sunrise$1,
  Sunset: Sunset$1,
  Superscript: Superscript$1,
  SwissFranc: SwissFranc$1,
  SwitchCamera: SwitchCamera$1,
  Sword: Sword$1,
  Swords: Swords$1,
  Syringe: Syringe$1,
  Table2: Table2$1,
  Table: Table$1,
  Tablet: Tablet$1,
  Tag: Tag$1,
  Tags: Tags$1,
  Target: Target$1,
  Tent: Tent$1,
  TerminalSquare: TerminalSquare$1,
  Terminal: Terminal$1,
  TextCursorInput: TextCursorInput$1,
  TextCursor: TextCursor$1,
  ThermometerSnowflake: ThermometerSnowflake$1,
  ThermometerSun: ThermometerSun$1,
  Thermometer: Thermometer$1,
  ThumbsDown: ThumbsDown$1,
  ThumbsUp: ThumbsUp$1,
  Ticket: Ticket$1,
  TimerOff: TimerOff$1,
  TimerReset: TimerReset$1,
  Timer: Timer$1,
  ToggleLeft: ToggleLeft$1,
  ToggleRight: ToggleRight$1,
  Tornado: Tornado$1,
  ToyBrick: ToyBrick$1,
  Train: Train$1,
  Trash2: Trash2$1,
  Trash: Trash$1,
  TreeDeciduous: TreeDeciduous$1,
  TreePine: TreePine$1,
  Trees: Trees$1,
  Trello: Trello$1,
  TrendingDown: TrendingDown$1,
  TrendingUp: TrendingUp$1,
  Triangle: Triangle$1,
  Trophy: Trophy$1,
  Truck: Truck$1,
  Tv2: Tv2$1,
  Tv: Tv$1,
  Twitch: Twitch$1,
  Twitter: Twitter$1,
  Type: Type$1,
  Umbrella: Umbrella$1,
  Underline: Underline$1,
  Undo2: Undo2$1,
  Undo: Undo$1,
  Unlink2: Unlink2$1,
  Unlink: Unlink$1,
  Unlock: Unlock$1,
  UploadCloud: UploadCloud$1,
  Upload: Upload$1,
  Usb: Usb$1,
  UserCheck: UserCheck$1,
  UserCog: UserCog$1,
  UserMinus: UserMinus$1,
  UserPlus: UserPlus$1,
  UserX: UserX$1,
  User: User$1,
  Users: Users$1,
  UtensilsCrossed: UtensilsCrossed$1,
  Utensils: Utensils$1,
  Vegan: Vegan$1,
  VenetianMask: VenetianMask$1,
  Verified: Verified$1,
  VibrateOff: VibrateOff$1,
  Vibrate: Vibrate$1,
  VideoOff: VideoOff$1,
  Video: Video$1,
  View: View$1,
  Voicemail: Voicemail$1,
  Volume1: Volume1$1,
  Volume2: Volume2$1,
  VolumeX: VolumeX$1,
  Volume: Volume$1,
  Wallet: Wallet$1,
  Wand2: Wand2$1,
  Wand: Wand$1,
  Watch: Watch$1,
  Waves: Waves$1,
  Webcam: Webcam$1,
  Webhook: Webhook$1,
  WheatOff: WheatOff$1,
  Wheat: Wheat$1,
  WifiOff: WifiOff$1,
  Wifi: Wifi$1,
  Wind: Wind$1,
  WineOff: WineOff$1,
  Wine: Wine$1,
  WrapText: WrapText$1,
  Wrench: Wrench$1,
  XCircle: XCircle$1,
  XOctagon: XOctagon$1,
  XSquare: XSquare$1,
  X: X$1,
  Youtube: Youtube$1,
  ZapOff: ZapOff$1,
  Zap: Zap$1,
  ZoomIn: ZoomIn$1,
  ZoomOut: ZoomOut$1
});

export { Accessibility$1 as Accessibility, Accessibility$1 as AccessibilityIcon, Activity$1 as Activity, Activity$1 as ActivityIcon, AirVent$1 as AirVent, AirVent$1 as AirVentIcon, Airplay$1 as Airplay, Airplay$1 as AirplayIcon, AlarmCheck$1 as AlarmCheck, AlarmCheck$1 as AlarmCheckIcon, AlarmClock$1 as AlarmClock, AlarmClock$1 as AlarmClockIcon, AlarmClockOff$1 as AlarmClockOff, AlarmClockOff$1 as AlarmClockOffIcon, AlarmMinus$1 as AlarmMinus, AlarmMinus$1 as AlarmMinusIcon, AlarmPlus$1 as AlarmPlus, AlarmPlus$1 as AlarmPlusIcon, Album$1 as Album, Album$1 as AlbumIcon, AlertCircle$1 as AlertCircle, AlertCircle$1 as AlertCircleIcon, AlertOctagon$1 as AlertOctagon, AlertOctagon$1 as AlertOctagonIcon, AlertTriangle$1 as AlertTriangle, AlertTriangle$1 as AlertTriangleIcon, AlignCenter$1 as AlignCenter, AlignCenterHorizontal$1 as AlignCenterHorizontal, AlignCenterHorizontal$1 as AlignCenterHorizontalIcon, AlignCenter$1 as AlignCenterIcon, AlignCenterVertical$1 as AlignCenterVertical, AlignCenterVertical$1 as AlignCenterVerticalIcon, AlignEndHorizontal$1 as AlignEndHorizontal, AlignEndHorizontal$1 as AlignEndHorizontalIcon, AlignEndVertical$1 as AlignEndVertical, AlignEndVertical$1 as AlignEndVerticalIcon, AlignHorizontalDistributeCenter$1 as AlignHorizontalDistributeCenter, AlignHorizontalDistributeCenter$1 as AlignHorizontalDistributeCenterIcon, AlignHorizontalDistributeEnd$1 as AlignHorizontalDistributeEnd, AlignHorizontalDistributeEnd$1 as AlignHorizontalDistributeEndIcon, AlignHorizontalDistributeStart$1 as AlignHorizontalDistributeStart, AlignHorizontalDistributeStart$1 as AlignHorizontalDistributeStartIcon, AlignHorizontalJustifyCenter$1 as AlignHorizontalJustifyCenter, AlignHorizontalJustifyCenter$1 as AlignHorizontalJustifyCenterIcon, AlignHorizontalJustifyEnd$1 as AlignHorizontalJustifyEnd, AlignHorizontalJustifyEnd$1 as AlignHorizontalJustifyEndIcon, AlignHorizontalJustifyStart$1 as AlignHorizontalJustifyStart, AlignHorizontalJustifyStart$1 as AlignHorizontalJustifyStartIcon, AlignHorizontalSpaceAround$1 as AlignHorizontalSpaceAround, AlignHorizontalSpaceAround$1 as AlignHorizontalSpaceAroundIcon, AlignHorizontalSpaceBetween$1 as AlignHorizontalSpaceBetween, AlignHorizontalSpaceBetween$1 as AlignHorizontalSpaceBetweenIcon, AlignJustify$1 as AlignJustify, AlignJustify$1 as AlignJustifyIcon, AlignLeft$1 as AlignLeft, AlignLeft$1 as AlignLeftIcon, AlignRight$1 as AlignRight, AlignRight$1 as AlignRightIcon, AlignStartHorizontal$1 as AlignStartHorizontal, AlignStartHorizontal$1 as AlignStartHorizontalIcon, AlignStartVertical$1 as AlignStartVertical, AlignStartVertical$1 as AlignStartVerticalIcon, AlignVerticalDistributeCenter$1 as AlignVerticalDistributeCenter, AlignVerticalDistributeCenter$1 as AlignVerticalDistributeCenterIcon, AlignVerticalDistributeEnd$1 as AlignVerticalDistributeEnd, AlignVerticalDistributeEnd$1 as AlignVerticalDistributeEndIcon, AlignVerticalDistributeStart$1 as AlignVerticalDistributeStart, AlignVerticalDistributeStart$1 as AlignVerticalDistributeStartIcon, AlignVerticalJustifyCenter$1 as AlignVerticalJustifyCenter, AlignVerticalJustifyCenter$1 as AlignVerticalJustifyCenterIcon, AlignVerticalJustifyEnd$1 as AlignVerticalJustifyEnd, AlignVerticalJustifyEnd$1 as AlignVerticalJustifyEndIcon, AlignVerticalJustifyStart$1 as AlignVerticalJustifyStart, AlignVerticalJustifyStart$1 as AlignVerticalJustifyStartIcon, AlignVerticalSpaceAround$1 as AlignVerticalSpaceAround, AlignVerticalSpaceAround$1 as AlignVerticalSpaceAroundIcon, AlignVerticalSpaceBetween$1 as AlignVerticalSpaceBetween, AlignVerticalSpaceBetween$1 as AlignVerticalSpaceBetweenIcon, Anchor$1 as Anchor, Anchor$1 as AnchorIcon, Angry$1 as Angry, Angry$1 as AngryIcon, Annoyed$1 as Annoyed, Annoyed$1 as AnnoyedIcon, Aperture$1 as Aperture, Aperture$1 as ApertureIcon, Apple$1 as Apple, Apple$1 as AppleIcon, Archive$1 as Archive, Archive$1 as ArchiveIcon, ArchiveRestore$1 as ArchiveRestore, ArchiveRestore$1 as ArchiveRestoreIcon, Armchair$1 as Armchair, Armchair$1 as ArmchairIcon, ArrowBigDown$1 as ArrowBigDown, ArrowBigDown$1 as ArrowBigDownIcon, ArrowBigLeft$1 as ArrowBigLeft, ArrowBigLeft$1 as ArrowBigLeftIcon, ArrowBigRight$1 as ArrowBigRight, ArrowBigRight$1 as ArrowBigRightIcon, ArrowBigUp$1 as ArrowBigUp, ArrowBigUp$1 as ArrowBigUpIcon, ArrowDown$1 as ArrowDown, ArrowDownCircle$1 as ArrowDownCircle, ArrowDownCircle$1 as ArrowDownCircleIcon, ArrowDown$1 as ArrowDownIcon, ArrowDownLeft$1 as ArrowDownLeft, ArrowDownLeft$1 as ArrowDownLeftIcon, ArrowDownRight$1 as ArrowDownRight, ArrowDownRight$1 as ArrowDownRightIcon, ArrowLeft$1 as ArrowLeft, ArrowLeftCircle$1 as ArrowLeftCircle, ArrowLeftCircle$1 as ArrowLeftCircleIcon, ArrowLeft$1 as ArrowLeftIcon, ArrowLeftRight$1 as ArrowLeftRight, ArrowLeftRight$1 as ArrowLeftRightIcon, ArrowRight$1 as ArrowRight, ArrowRightCircle$1 as ArrowRightCircle, ArrowRightCircle$1 as ArrowRightCircleIcon, ArrowRight$1 as ArrowRightIcon, ArrowUp$1 as ArrowUp, ArrowUpCircle$1 as ArrowUpCircle, ArrowUpCircle$1 as ArrowUpCircleIcon, ArrowUpDown$1 as ArrowUpDown, ArrowUpDown$1 as ArrowUpDownIcon, ArrowUp$1 as ArrowUpIcon, ArrowUpLeft$1 as ArrowUpLeft, ArrowUpLeft$1 as ArrowUpLeftIcon, ArrowUpRight$1 as ArrowUpRight, ArrowUpRight$1 as ArrowUpRightIcon, Asterisk$1 as Asterisk, Asterisk$1 as AsteriskIcon, AtSign$1 as AtSign, AtSign$1 as AtSignIcon, Award$1 as Award, Award$1 as AwardIcon, Axe$1 as Axe, Axe$1 as AxeIcon, Axis3d$1 as Axis3d, Axis3d$1 as Axis3dIcon, Baby$1 as Baby, Baby$1 as BabyIcon, Backpack$1 as Backpack, Backpack$1 as BackpackIcon, BaggageClaim$1 as BaggageClaim, BaggageClaim$1 as BaggageClaimIcon, Banana$1 as Banana, Banana$1 as BananaIcon, Banknote$1 as Banknote, Banknote$1 as BanknoteIcon, BarChart$1 as BarChart, BarChart2$1 as BarChart2, BarChart2$1 as BarChart2Icon, BarChart3$1 as BarChart3, BarChart3$1 as BarChart3Icon, BarChart4$1 as BarChart4, BarChart4$1 as BarChart4Icon, BarChartHorizontal$1 as BarChartHorizontal, BarChartHorizontal$1 as BarChartHorizontalIcon, BarChart$1 as BarChartIcon, Baseline$1 as Baseline, Baseline$1 as BaselineIcon, Bath$1 as Bath, Bath$1 as BathIcon, Battery$1 as Battery, BatteryCharging$1 as BatteryCharging, BatteryCharging$1 as BatteryChargingIcon, BatteryFull$1 as BatteryFull, BatteryFull$1 as BatteryFullIcon, Battery$1 as BatteryIcon, BatteryLow$1 as BatteryLow, BatteryLow$1 as BatteryLowIcon, BatteryMedium$1 as BatteryMedium, BatteryMedium$1 as BatteryMediumIcon, BatteryWarning$1 as BatteryWarning, BatteryWarning$1 as BatteryWarningIcon, Beaker$1 as Beaker, Beaker$1 as BeakerIcon, Bean$1 as Bean, Bean$1 as BeanIcon, BeanOff$1 as BeanOff, BeanOff$1 as BeanOffIcon, Bed$1 as Bed, BedDouble$1 as BedDouble, BedDouble$1 as BedDoubleIcon, Bed$1 as BedIcon, BedSingle$1 as BedSingle, BedSingle$1 as BedSingleIcon, Beef$1 as Beef, Beef$1 as BeefIcon, Beer$1 as Beer, Beer$1 as BeerIcon, Bell$1 as Bell, Bell$1 as BellIcon, BellMinus$1 as BellMinus, BellMinus$1 as BellMinusIcon, BellOff$1 as BellOff, BellOff$1 as BellOffIcon, BellPlus$1 as BellPlus, BellPlus$1 as BellPlusIcon, BellRing$1 as BellRing, BellRing$1 as BellRingIcon, Bike$1 as Bike, Bike$1 as BikeIcon, Binary$1 as Binary, Binary$1 as BinaryIcon, Bitcoin$1 as Bitcoin, Bitcoin$1 as BitcoinIcon, Bluetooth$1 as Bluetooth, BluetoothConnected$1 as BluetoothConnected, BluetoothConnected$1 as BluetoothConnectedIcon, Bluetooth$1 as BluetoothIcon, BluetoothOff$1 as BluetoothOff, BluetoothOff$1 as BluetoothOffIcon, BluetoothSearching$1 as BluetoothSearching, BluetoothSearching$1 as BluetoothSearchingIcon, Bold$1 as Bold, Bold$1 as BoldIcon, Bomb$1 as Bomb, Bomb$1 as BombIcon, Bone$1 as Bone, Bone$1 as BoneIcon, Book$1 as Book, Book$1 as BookIcon, BookOpen$1 as BookOpen, BookOpenCheck$1 as BookOpenCheck, BookOpenCheck$1 as BookOpenCheckIcon, BookOpen$1 as BookOpenIcon, Bookmark$1 as Bookmark, Bookmark$1 as BookmarkIcon, BookmarkMinus$1 as BookmarkMinus, BookmarkMinus$1 as BookmarkMinusIcon, BookmarkPlus$1 as BookmarkPlus, BookmarkPlus$1 as BookmarkPlusIcon, Bot$1 as Bot, Bot$1 as BotIcon, Box$1 as Box, Box$1 as BoxIcon, BoxSelect$1 as BoxSelect, BoxSelect$1 as BoxSelectIcon, Boxes$1 as Boxes, Boxes$1 as BoxesIcon, Briefcase$1 as Briefcase, Briefcase$1 as BriefcaseIcon, Brush$1 as Brush, Brush$1 as BrushIcon, Bug$1 as Bug, Bug$1 as BugIcon, Building$1 as Building, Building2$1 as Building2, Building2$1 as Building2Icon, Building$1 as BuildingIcon, Bus$1 as Bus, Bus$1 as BusIcon, Cake$1 as Cake, Cake$1 as CakeIcon, Calculator$1 as Calculator, Calculator$1 as CalculatorIcon, Calendar$1 as Calendar, CalendarCheck$1 as CalendarCheck, CalendarCheck2$1 as CalendarCheck2, CalendarCheck2$1 as CalendarCheck2Icon, CalendarCheck$1 as CalendarCheckIcon, CalendarClock$1 as CalendarClock, CalendarClock$1 as CalendarClockIcon, CalendarDays$1 as CalendarDays, CalendarDays$1 as CalendarDaysIcon, CalendarHeart$1 as CalendarHeart, CalendarHeart$1 as CalendarHeartIcon, Calendar$1 as CalendarIcon, CalendarMinus$1 as CalendarMinus, CalendarMinus$1 as CalendarMinusIcon, CalendarOff$1 as CalendarOff, CalendarOff$1 as CalendarOffIcon, CalendarPlus$1 as CalendarPlus, CalendarPlus$1 as CalendarPlusIcon, CalendarRange$1 as CalendarRange, CalendarRange$1 as CalendarRangeIcon, CalendarSearch$1 as CalendarSearch, CalendarSearch$1 as CalendarSearchIcon, CalendarX$1 as CalendarX, CalendarX2$1 as CalendarX2, CalendarX2$1 as CalendarX2Icon, CalendarX$1 as CalendarXIcon, Camera$1 as Camera, Camera$1 as CameraIcon, CameraOff$1 as CameraOff, CameraOff$1 as CameraOffIcon, Candy$1 as Candy, Candy$1 as CandyIcon, CandyOff$1 as CandyOff, CandyOff$1 as CandyOffIcon, Car$1 as Car, Car$1 as CarIcon, Carrot$1 as Carrot, Carrot$1 as CarrotIcon, Cast$1 as Cast, Cast$1 as CastIcon, Cat$1 as Cat, Cat$1 as CatIcon, Check$1 as Check, CheckCheck$1 as CheckCheck, CheckCheck$1 as CheckCheckIcon, CheckCircle$1 as CheckCircle, CheckCircle2$1 as CheckCircle2, CheckCircle2$1 as CheckCircle2Icon, CheckCircle$1 as CheckCircleIcon, Check$1 as CheckIcon, CheckSquare$1 as CheckSquare, CheckSquare$1 as CheckSquareIcon, ChefHat$1 as ChefHat, ChefHat$1 as ChefHatIcon, Cherry$1 as Cherry, Cherry$1 as CherryIcon, ChevronDown$1 as ChevronDown, ChevronDown$1 as ChevronDownIcon, ChevronFirst$1 as ChevronFirst, ChevronFirst$1 as ChevronFirstIcon, ChevronLast$1 as ChevronLast, ChevronLast$1 as ChevronLastIcon, ChevronLeft$1 as ChevronLeft, ChevronLeft$1 as ChevronLeftIcon, ChevronRight$1 as ChevronRight, ChevronRight$1 as ChevronRightIcon, ChevronUp$1 as ChevronUp, ChevronUp$1 as ChevronUpIcon, ChevronsDown$1 as ChevronsDown, ChevronsDown$1 as ChevronsDownIcon, ChevronsDownUp$1 as ChevronsDownUp, ChevronsDownUp$1 as ChevronsDownUpIcon, ChevronsLeft$1 as ChevronsLeft, ChevronsLeft$1 as ChevronsLeftIcon, ChevronsLeftRight$1 as ChevronsLeftRight, ChevronsLeftRight$1 as ChevronsLeftRightIcon, ChevronsRight$1 as ChevronsRight, ChevronsRight$1 as ChevronsRightIcon, ChevronsRightLeft$1 as ChevronsRightLeft, ChevronsRightLeft$1 as ChevronsRightLeftIcon, ChevronsUp$1 as ChevronsUp, ChevronsUpDown$1 as ChevronsUpDown, ChevronsUpDown$1 as ChevronsUpDownIcon, ChevronsUp$1 as ChevronsUpIcon, Chrome$1 as Chrome, Chrome$1 as ChromeIcon, Cigarette$1 as Cigarette, Cigarette$1 as CigaretteIcon, CigaretteOff$1 as CigaretteOff, CigaretteOff$1 as CigaretteOffIcon, Circle$1 as Circle, CircleDot$1 as CircleDot, CircleDot$1 as CircleDotIcon, CircleEllipsis$1 as CircleEllipsis, CircleEllipsis$1 as CircleEllipsisIcon, Circle$1 as CircleIcon, CircleSlashed$1 as CircleSlashed, CircleSlashed$1 as CircleSlashedIcon, Citrus$1 as Citrus, Citrus$1 as CitrusIcon, Clapperboard$1 as Clapperboard, Clapperboard$1 as ClapperboardIcon, Clipboard$1 as Clipboard, ClipboardCheck$1 as ClipboardCheck, ClipboardCheck$1 as ClipboardCheckIcon, ClipboardCopy$1 as ClipboardCopy, ClipboardCopy$1 as ClipboardCopyIcon, ClipboardEdit$1 as ClipboardEdit, ClipboardEdit$1 as ClipboardEditIcon, Clipboard$1 as ClipboardIcon, ClipboardList$1 as ClipboardList, ClipboardList$1 as ClipboardListIcon, ClipboardSignature$1 as ClipboardSignature, ClipboardSignature$1 as ClipboardSignatureIcon, ClipboardType$1 as ClipboardType, ClipboardType$1 as ClipboardTypeIcon, ClipboardX$1 as ClipboardX, ClipboardX$1 as ClipboardXIcon, Clock$1 as Clock, Clock1$1 as Clock1, Clock10$1 as Clock10, Clock10$1 as Clock10Icon, Clock11$1 as Clock11, Clock11$1 as Clock11Icon, Clock12$1 as Clock12, Clock12$1 as Clock12Icon, Clock1$1 as Clock1Icon, Clock2$1 as Clock2, Clock2$1 as Clock2Icon, Clock3$1 as Clock3, Clock3$1 as Clock3Icon, Clock4$1 as Clock4, Clock4$1 as Clock4Icon, Clock5$1 as Clock5, Clock5$1 as Clock5Icon, Clock6$1 as Clock6, Clock6$1 as Clock6Icon, Clock7$1 as Clock7, Clock7$1 as Clock7Icon, Clock8$1 as Clock8, Clock8$1 as Clock8Icon, Clock9$1 as Clock9, Clock9$1 as Clock9Icon, Clock$1 as ClockIcon, Cloud$1 as Cloud, CloudCog$1 as CloudCog, CloudCog$1 as CloudCogIcon, CloudDrizzle$1 as CloudDrizzle, CloudDrizzle$1 as CloudDrizzleIcon, CloudFog$1 as CloudFog, CloudFog$1 as CloudFogIcon, CloudHail$1 as CloudHail, CloudHail$1 as CloudHailIcon, Cloud$1 as CloudIcon, CloudLightning$1 as CloudLightning, CloudLightning$1 as CloudLightningIcon, CloudMoon$1 as CloudMoon, CloudMoon$1 as CloudMoonIcon, CloudMoonRain$1 as CloudMoonRain, CloudMoonRain$1 as CloudMoonRainIcon, CloudOff$1 as CloudOff, CloudOff$1 as CloudOffIcon, CloudRain$1 as CloudRain, CloudRain$1 as CloudRainIcon, CloudRainWind$1 as CloudRainWind, CloudRainWind$1 as CloudRainWindIcon, CloudSnow$1 as CloudSnow, CloudSnow$1 as CloudSnowIcon, CloudSun$1 as CloudSun, CloudSun$1 as CloudSunIcon, CloudSunRain$1 as CloudSunRain, CloudSunRain$1 as CloudSunRainIcon, Cloudy$1 as Cloudy, Cloudy$1 as CloudyIcon, Clover$1 as Clover, Clover$1 as CloverIcon, Code$1 as Code, Code2$1 as Code2, Code2$1 as Code2Icon, Code$1 as CodeIcon, Codepen$1 as Codepen, Codepen$1 as CodepenIcon, Codesandbox$1 as Codesandbox, Codesandbox$1 as CodesandboxIcon, Coffee$1 as Coffee, Coffee$1 as CoffeeIcon, Cog$1 as Cog, Cog$1 as CogIcon, Coins$1 as Coins, Coins$1 as CoinsIcon, Columns$1 as Columns, Columns$1 as ColumnsIcon, Command$1 as Command, Command$1 as CommandIcon, Compass$1 as Compass, Compass$1 as CompassIcon, Component$1 as Component, Component$1 as ComponentIcon, ConciergeBell$1 as ConciergeBell, ConciergeBell$1 as ConciergeBellIcon, Contact$1 as Contact, Contact$1 as ContactIcon, Contrast$1 as Contrast, Contrast$1 as ContrastIcon, Cookie$1 as Cookie, Cookie$1 as CookieIcon, Copy$1 as Copy, Copy$1 as CopyIcon, Copyleft$1 as Copyleft, Copyleft$1 as CopyleftIcon, Copyright$1 as Copyright, Copyright$1 as CopyrightIcon, CornerDownLeft$1 as CornerDownLeft, CornerDownLeft$1 as CornerDownLeftIcon, CornerDownRight$1 as CornerDownRight, CornerDownRight$1 as CornerDownRightIcon, CornerLeftDown$1 as CornerLeftDown, CornerLeftDown$1 as CornerLeftDownIcon, CornerLeftUp$1 as CornerLeftUp, CornerLeftUp$1 as CornerLeftUpIcon, CornerRightDown$1 as CornerRightDown, CornerRightDown$1 as CornerRightDownIcon, CornerRightUp$1 as CornerRightUp, CornerRightUp$1 as CornerRightUpIcon, CornerUpLeft$1 as CornerUpLeft, CornerUpLeft$1 as CornerUpLeftIcon, CornerUpRight$1 as CornerUpRight, CornerUpRight$1 as CornerUpRightIcon, Cpu$1 as Cpu, Cpu$1 as CpuIcon, CreditCard$1 as CreditCard, CreditCard$1 as CreditCardIcon, Croissant$1 as Croissant, Croissant$1 as CroissantIcon, Crop$1 as Crop, Crop$1 as CropIcon, Cross$1 as Cross, Cross$1 as CrossIcon, Crosshair$1 as Crosshair, Crosshair$1 as CrosshairIcon, Crown$1 as Crown, Crown$1 as CrownIcon, CupSoda$1 as CupSoda, CupSoda$1 as CupSodaIcon, CurlyBraces$1 as CurlyBraces, CurlyBraces$1 as CurlyBracesIcon, Currency$1 as Currency, Currency$1 as CurrencyIcon, Database$1 as Database, DatabaseBackup$1 as DatabaseBackup, DatabaseBackup$1 as DatabaseBackupIcon, Database$1 as DatabaseIcon, Delete$1 as Delete, Delete$1 as DeleteIcon, Diamond$1 as Diamond, Diamond$1 as DiamondIcon, Dice1$1 as Dice1, Dice1$1 as Dice1Icon, Dice2$1 as Dice2, Dice2$1 as Dice2Icon, Dice3$1 as Dice3, Dice3$1 as Dice3Icon, Dice4$1 as Dice4, Dice4$1 as Dice4Icon, Dice5$1 as Dice5, Dice5$1 as Dice5Icon, Dice6$1 as Dice6, Dice6$1 as Dice6Icon, Dices$1 as Dices, Dices$1 as DicesIcon, Diff$1 as Diff, Diff$1 as DiffIcon, Disc$1 as Disc, Disc$1 as DiscIcon, Divide$1 as Divide, DivideCircle$1 as DivideCircle, DivideCircle$1 as DivideCircleIcon, Divide$1 as DivideIcon, DivideSquare$1 as DivideSquare, DivideSquare$1 as DivideSquareIcon, Dna$1 as Dna, Dna$1 as DnaIcon, DnaOff$1 as DnaOff, DnaOff$1 as DnaOffIcon, Dog$1 as Dog, Dog$1 as DogIcon, DollarSign$1 as DollarSign, DollarSign$1 as DollarSignIcon, Download$1 as Download, DownloadCloud$1 as DownloadCloud, DownloadCloud$1 as DownloadCloudIcon, Download$1 as DownloadIcon, Dribbble$1 as Dribbble, Dribbble$1 as DribbbleIcon, Droplet$1 as Droplet, Droplet$1 as DropletIcon, Droplets$1 as Droplets, Droplets$1 as DropletsIcon, Drumstick$1 as Drumstick, Drumstick$1 as DrumstickIcon, Dumbbell$1 as Dumbbell, Dumbbell$1 as DumbbellIcon, Ear$1 as Ear, Ear$1 as EarIcon, EarOff$1 as EarOff, EarOff$1 as EarOffIcon, Edit$1 as Edit, Edit2$1 as Edit2, Edit2$1 as Edit2Icon, Edit3$1 as Edit3, Edit3$1 as Edit3Icon, Edit$1 as EditIcon, Egg$1 as Egg, EggFried$1 as EggFried, EggFried$1 as EggFriedIcon, Egg$1 as EggIcon, EggOff$1 as EggOff, EggOff$1 as EggOffIcon, Equal$1 as Equal, Equal$1 as EqualIcon, EqualNot$1 as EqualNot, EqualNot$1 as EqualNotIcon, Eraser$1 as Eraser, Eraser$1 as EraserIcon, Euro$1 as Euro, Euro$1 as EuroIcon, Expand$1 as Expand, Expand$1 as ExpandIcon, ExternalLink$1 as ExternalLink, ExternalLink$1 as ExternalLinkIcon, Eye$1 as Eye, Eye$1 as EyeIcon, EyeOff$1 as EyeOff, EyeOff$1 as EyeOffIcon, Facebook$1 as Facebook, Facebook$1 as FacebookIcon, Factory$1 as Factory, Factory$1 as FactoryIcon, Fan$1 as Fan, Fan$1 as FanIcon, FastForward$1 as FastForward, FastForward$1 as FastForwardIcon, Feather$1 as Feather, Feather$1 as FeatherIcon, Figma$1 as Figma, Figma$1 as FigmaIcon, File$1 as File, FileArchive$1 as FileArchive, FileArchive$1 as FileArchiveIcon, FileAudio$1 as FileAudio, FileAudio2$1 as FileAudio2, FileAudio2$1 as FileAudio2Icon, FileAudio$1 as FileAudioIcon, FileAxis3d$1 as FileAxis3d, FileAxis3d$1 as FileAxis3dIcon, FileBadge$1 as FileBadge, FileBadge2$1 as FileBadge2, FileBadge2$1 as FileBadge2Icon, FileBadge$1 as FileBadgeIcon, FileBarChart$1 as FileBarChart, FileBarChart2$1 as FileBarChart2, FileBarChart2$1 as FileBarChart2Icon, FileBarChart$1 as FileBarChartIcon, FileBox$1 as FileBox, FileBox$1 as FileBoxIcon, FileCheck$1 as FileCheck, FileCheck2$1 as FileCheck2, FileCheck2$1 as FileCheck2Icon, FileCheck$1 as FileCheckIcon, FileClock$1 as FileClock, FileClock$1 as FileClockIcon, FileCode$1 as FileCode, FileCode$1 as FileCodeIcon, FileCog$1 as FileCog, FileCog2$1 as FileCog2, FileCog2$1 as FileCog2Icon, FileCog$1 as FileCogIcon, FileDiff$1 as FileDiff, FileDiff$1 as FileDiffIcon, FileDigit$1 as FileDigit, FileDigit$1 as FileDigitIcon, FileDown$1 as FileDown, FileDown$1 as FileDownIcon, FileEdit$1 as FileEdit, FileEdit$1 as FileEditIcon, FileHeart$1 as FileHeart, FileHeart$1 as FileHeartIcon, File$1 as FileIcon, FileImage$1 as FileImage, FileImage$1 as FileImageIcon, FileInput$1 as FileInput, FileInput$1 as FileInputIcon, FileJson$1 as FileJson, FileJson2$1 as FileJson2, FileJson2$1 as FileJson2Icon, FileJson$1 as FileJsonIcon, FileKey$1 as FileKey, FileKey2$1 as FileKey2, FileKey2$1 as FileKey2Icon, FileKey$1 as FileKeyIcon, FileLineChart$1 as FileLineChart, FileLineChart$1 as FileLineChartIcon, FileLock$1 as FileLock, FileLock2$1 as FileLock2, FileLock2$1 as FileLock2Icon, FileLock$1 as FileLockIcon, FileMinus$1 as FileMinus, FileMinus2$1 as FileMinus2, FileMinus2$1 as FileMinus2Icon, FileMinus$1 as FileMinusIcon, FileOutput$1 as FileOutput, FileOutput$1 as FileOutputIcon, FilePieChart$1 as FilePieChart, FilePieChart$1 as FilePieChartIcon, FilePlus$1 as FilePlus, FilePlus2$1 as FilePlus2, FilePlus2$1 as FilePlus2Icon, FilePlus$1 as FilePlusIcon, FileQuestion$1 as FileQuestion, FileQuestion$1 as FileQuestionIcon, FileScan$1 as FileScan, FileScan$1 as FileScanIcon, FileSearch$1 as FileSearch, FileSearch2$1 as FileSearch2, FileSearch2$1 as FileSearch2Icon, FileSearch$1 as FileSearchIcon, FileSignature$1 as FileSignature, FileSignature$1 as FileSignatureIcon, FileSpreadsheet$1 as FileSpreadsheet, FileSpreadsheet$1 as FileSpreadsheetIcon, FileSymlink$1 as FileSymlink, FileSymlink$1 as FileSymlinkIcon, FileTerminal$1 as FileTerminal, FileTerminal$1 as FileTerminalIcon, FileText$1 as FileText, FileText$1 as FileTextIcon, FileType$1 as FileType, FileType2$1 as FileType2, FileType2$1 as FileType2Icon, FileType$1 as FileTypeIcon, FileUp$1 as FileUp, FileUp$1 as FileUpIcon, FileVideo$1 as FileVideo, FileVideo2$1 as FileVideo2, FileVideo2$1 as FileVideo2Icon, FileVideo$1 as FileVideoIcon, FileVolume$1 as FileVolume, FileVolume2$1 as FileVolume2, FileVolume2$1 as FileVolume2Icon, FileVolume$1 as FileVolumeIcon, FileWarning$1 as FileWarning, FileWarning$1 as FileWarningIcon, FileX$1 as FileX, FileX2$1 as FileX2, FileX2$1 as FileX2Icon, FileX$1 as FileXIcon, Files$1 as Files, Files$1 as FilesIcon, Film$1 as Film, Film$1 as FilmIcon, Filter$1 as Filter, Filter$1 as FilterIcon, Fingerprint$1 as Fingerprint, Fingerprint$1 as FingerprintIcon, Fish$1 as Fish, Fish$1 as FishIcon, Flag$1 as Flag, Flag$1 as FlagIcon, FlagOff$1 as FlagOff, FlagOff$1 as FlagOffIcon, FlagTriangleLeft$1 as FlagTriangleLeft, FlagTriangleLeft$1 as FlagTriangleLeftIcon, FlagTriangleRight$1 as FlagTriangleRight, FlagTriangleRight$1 as FlagTriangleRightIcon, Flame$1 as Flame, Flame$1 as FlameIcon, Flashlight$1 as Flashlight, Flashlight$1 as FlashlightIcon, FlashlightOff$1 as FlashlightOff, FlashlightOff$1 as FlashlightOffIcon, FlaskConical$1 as FlaskConical, FlaskConical$1 as FlaskConicalIcon, FlaskConicalOff$1 as FlaskConicalOff, FlaskConicalOff$1 as FlaskConicalOffIcon, FlaskRound$1 as FlaskRound, FlaskRound$1 as FlaskRoundIcon, FlipHorizontal$1 as FlipHorizontal, FlipHorizontal2$1 as FlipHorizontal2, FlipHorizontal2$1 as FlipHorizontal2Icon, FlipHorizontal$1 as FlipHorizontalIcon, FlipVertical$1 as FlipVertical, FlipVertical2$1 as FlipVertical2, FlipVertical2$1 as FlipVertical2Icon, FlipVertical$1 as FlipVerticalIcon, Flower$1 as Flower, Flower2$1 as Flower2, Flower2$1 as Flower2Icon, Flower$1 as FlowerIcon, Focus$1 as Focus, Focus$1 as FocusIcon, Folder$1 as Folder, FolderArchive$1 as FolderArchive, FolderArchive$1 as FolderArchiveIcon, FolderCheck$1 as FolderCheck, FolderCheck$1 as FolderCheckIcon, FolderClock$1 as FolderClock, FolderClock$1 as FolderClockIcon, FolderClosed$1 as FolderClosed, FolderClosed$1 as FolderClosedIcon, FolderCog$1 as FolderCog, FolderCog2$1 as FolderCog2, FolderCog2$1 as FolderCog2Icon, FolderCog$1 as FolderCogIcon, FolderDown$1 as FolderDown, FolderDown$1 as FolderDownIcon, FolderEdit$1 as FolderEdit, FolderEdit$1 as FolderEditIcon, FolderHeart$1 as FolderHeart, FolderHeart$1 as FolderHeartIcon, Folder$1 as FolderIcon, FolderInput$1 as FolderInput, FolderInput$1 as FolderInputIcon, FolderKey$1 as FolderKey, FolderKey$1 as FolderKeyIcon, FolderLock$1 as FolderLock, FolderLock$1 as FolderLockIcon, FolderMinus$1 as FolderMinus, FolderMinus$1 as FolderMinusIcon, FolderOpen$1 as FolderOpen, FolderOpen$1 as FolderOpenIcon, FolderOutput$1 as FolderOutput, FolderOutput$1 as FolderOutputIcon, FolderPlus$1 as FolderPlus, FolderPlus$1 as FolderPlusIcon, FolderSearch$1 as FolderSearch, FolderSearch2$1 as FolderSearch2, FolderSearch2$1 as FolderSearch2Icon, FolderSearch$1 as FolderSearchIcon, FolderSymlink$1 as FolderSymlink, FolderSymlink$1 as FolderSymlinkIcon, FolderTree$1 as FolderTree, FolderTree$1 as FolderTreeIcon, FolderUp$1 as FolderUp, FolderUp$1 as FolderUpIcon, FolderX$1 as FolderX, FolderX$1 as FolderXIcon, Folders$1 as Folders, Folders$1 as FoldersIcon, FormInput$1 as FormInput, FormInput$1 as FormInputIcon, Forward$1 as Forward, Forward$1 as ForwardIcon, Frame$1 as Frame, Frame$1 as FrameIcon, Framer$1 as Framer, Framer$1 as FramerIcon, Frown$1 as Frown, Frown$1 as FrownIcon, Fuel$1 as Fuel, Fuel$1 as FuelIcon, FunctionSquare$1 as FunctionSquare, FunctionSquare$1 as FunctionSquareIcon, Gamepad$1 as Gamepad, Gamepad2$1 as Gamepad2, Gamepad2$1 as Gamepad2Icon, Gamepad$1 as GamepadIcon, Gauge$1 as Gauge, Gauge$1 as GaugeIcon, Gavel$1 as Gavel, Gavel$1 as GavelIcon, Gem$1 as Gem, Gem$1 as GemIcon, Ghost$1 as Ghost, Ghost$1 as GhostIcon, Gift$1 as Gift, Gift$1 as GiftIcon, GitBranch$1 as GitBranch, GitBranch$1 as GitBranchIcon, GitBranchPlus$1 as GitBranchPlus, GitBranchPlus$1 as GitBranchPlusIcon, GitCommit$1 as GitCommit, GitCommit$1 as GitCommitIcon, GitCompare$1 as GitCompare, GitCompare$1 as GitCompareIcon, GitFork$1 as GitFork, GitFork$1 as GitForkIcon, GitMerge$1 as GitMerge, GitMerge$1 as GitMergeIcon, GitPullRequest$1 as GitPullRequest, GitPullRequestClosed$1 as GitPullRequestClosed, GitPullRequestClosed$1 as GitPullRequestClosedIcon, GitPullRequestDraft$1 as GitPullRequestDraft, GitPullRequestDraft$1 as GitPullRequestDraftIcon, GitPullRequest$1 as GitPullRequestIcon, Github$1 as Github, Github$1 as GithubIcon, Gitlab$1 as Gitlab, Gitlab$1 as GitlabIcon, GlassWater$1 as GlassWater, GlassWater$1 as GlassWaterIcon, Glasses$1 as Glasses, Glasses$1 as GlassesIcon, Globe$1 as Globe, Globe2$1 as Globe2, Globe2$1 as Globe2Icon, Globe$1 as GlobeIcon, Grab$1 as Grab, Grab$1 as GrabIcon, GraduationCap$1 as GraduationCap, GraduationCap$1 as GraduationCapIcon, Grape$1 as Grape, Grape$1 as GrapeIcon, Grid$1 as Grid, Grid$1 as GridIcon, GripHorizontal$1 as GripHorizontal, GripHorizontal$1 as GripHorizontalIcon, GripVertical$1 as GripVertical, GripVertical$1 as GripVerticalIcon, Hammer$1 as Hammer, Hammer$1 as HammerIcon, Hand$1 as Hand, Hand$1 as HandIcon, HandMetal$1 as HandMetal, HandMetal$1 as HandMetalIcon, HardDrive$1 as HardDrive, HardDrive$1 as HardDriveIcon, HardHat$1 as HardHat, HardHat$1 as HardHatIcon, Hash$1 as Hash, Hash$1 as HashIcon, Haze$1 as Haze, Haze$1 as HazeIcon, Heading$1 as Heading, Heading1$1 as Heading1, Heading1$1 as Heading1Icon, Heading2$1 as Heading2, Heading2$1 as Heading2Icon, Heading3$1 as Heading3, Heading3$1 as Heading3Icon, Heading4$1 as Heading4, Heading4$1 as Heading4Icon, Heading5$1 as Heading5, Heading5$1 as Heading5Icon, Heading6$1 as Heading6, Heading6$1 as Heading6Icon, Heading$1 as HeadingIcon, Headphones$1 as Headphones, Headphones$1 as HeadphonesIcon, Heart$1 as Heart, HeartCrack$1 as HeartCrack, HeartCrack$1 as HeartCrackIcon, HeartHandshake$1 as HeartHandshake, HeartHandshake$1 as HeartHandshakeIcon, Heart$1 as HeartIcon, HeartOff$1 as HeartOff, HeartOff$1 as HeartOffIcon, HeartPulse$1 as HeartPulse, HeartPulse$1 as HeartPulseIcon, HelpCircle$1 as HelpCircle, HelpCircle$1 as HelpCircleIcon, Hexagon$1 as Hexagon, Hexagon$1 as HexagonIcon, Highlighter$1 as Highlighter, Highlighter$1 as HighlighterIcon, History$1 as History, History$1 as HistoryIcon, Home$1 as Home, Home$1 as HomeIcon, Hop$1 as Hop, Hop$1 as HopIcon, HopOff$1 as HopOff, HopOff$1 as HopOffIcon, Hourglass$1 as Hourglass, Hourglass$1 as HourglassIcon, IceCream$1 as IceCream, IceCream2$1 as IceCream2, IceCream2$1 as IceCream2Icon, IceCream$1 as IceCreamIcon, Image$1 as Image, Image$1 as ImageIcon, ImageMinus$1 as ImageMinus, ImageMinus$1 as ImageMinusIcon, ImageOff$1 as ImageOff, ImageOff$1 as ImageOffIcon, ImagePlus$1 as ImagePlus, ImagePlus$1 as ImagePlusIcon, Import$1 as Import, Import$1 as ImportIcon, Inbox$1 as Inbox, Inbox$1 as InboxIcon, Indent$1 as Indent, Indent$1 as IndentIcon, IndianRupee$1 as IndianRupee, IndianRupee$1 as IndianRupeeIcon, Infinity$1 as Infinity, Infinity$1 as InfinityIcon, Info$1 as Info, Info$1 as InfoIcon, Inspect$1 as Inspect, Inspect$1 as InspectIcon, Instagram$1 as Instagram, Instagram$1 as InstagramIcon, Italic$1 as Italic, Italic$1 as ItalicIcon, JapaneseYen$1 as JapaneseYen, JapaneseYen$1 as JapaneseYenIcon, Joystick$1 as Joystick, Joystick$1 as JoystickIcon, Key$1 as Key, Key$1 as KeyIcon, Keyboard$1 as Keyboard, Keyboard$1 as KeyboardIcon, Lamp$1 as Lamp, LampCeiling$1 as LampCeiling, LampCeiling$1 as LampCeilingIcon, LampDesk$1 as LampDesk, LampDesk$1 as LampDeskIcon, LampFloor$1 as LampFloor, LampFloor$1 as LampFloorIcon, Lamp$1 as LampIcon, LampWallDown$1 as LampWallDown, LampWallDown$1 as LampWallDownIcon, LampWallUp$1 as LampWallUp, LampWallUp$1 as LampWallUpIcon, Landmark$1 as Landmark, Landmark$1 as LandmarkIcon, Languages$1 as Languages, Languages$1 as LanguagesIcon, Laptop$1 as Laptop, Laptop2$1 as Laptop2, Laptop2$1 as Laptop2Icon, Laptop$1 as LaptopIcon, Lasso$1 as Lasso, Lasso$1 as LassoIcon, LassoSelect$1 as LassoSelect, LassoSelect$1 as LassoSelectIcon, Laugh$1 as Laugh, Laugh$1 as LaughIcon, Layers$1 as Layers, Layers$1 as LayersIcon, Layout$1 as Layout, LayoutDashboard$1 as LayoutDashboard, LayoutDashboard$1 as LayoutDashboardIcon, LayoutGrid$1 as LayoutGrid, LayoutGrid$1 as LayoutGridIcon, Layout$1 as LayoutIcon, LayoutList$1 as LayoutList, LayoutList$1 as LayoutListIcon, LayoutTemplate$1 as LayoutTemplate, LayoutTemplate$1 as LayoutTemplateIcon, Leaf$1 as Leaf, Leaf$1 as LeafIcon, Library$1 as Library, Library$1 as LibraryIcon, LifeBuoy$1 as LifeBuoy, LifeBuoy$1 as LifeBuoyIcon, Lightbulb$1 as Lightbulb, Lightbulb$1 as LightbulbIcon, LightbulbOff$1 as LightbulbOff, LightbulbOff$1 as LightbulbOffIcon, LineChart$1 as LineChart, LineChart$1 as LineChartIcon, Link$1 as Link, Link2$1 as Link2, Link2$1 as Link2Icon, Link2Off$1 as Link2Off, Link2Off$1 as Link2OffIcon, Link$1 as LinkIcon, Linkedin$1 as Linkedin, Linkedin$1 as LinkedinIcon, List$1 as List, ListChecks$1 as ListChecks, ListChecks$1 as ListChecksIcon, ListEnd$1 as ListEnd, ListEnd$1 as ListEndIcon, List$1 as ListIcon, ListMinus$1 as ListMinus, ListMinus$1 as ListMinusIcon, ListMusic$1 as ListMusic, ListMusic$1 as ListMusicIcon, ListOrdered$1 as ListOrdered, ListOrdered$1 as ListOrderedIcon, ListPlus$1 as ListPlus, ListPlus$1 as ListPlusIcon, ListStart$1 as ListStart, ListStart$1 as ListStartIcon, ListVideo$1 as ListVideo, ListVideo$1 as ListVideoIcon, ListX$1 as ListX, ListX$1 as ListXIcon, Loader$1 as Loader, Loader2$1 as Loader2, Loader2$1 as Loader2Icon, Loader$1 as LoaderIcon, Locate$1 as Locate, LocateFixed$1 as LocateFixed, LocateFixed$1 as LocateFixedIcon, Locate$1 as LocateIcon, LocateOff$1 as LocateOff, LocateOff$1 as LocateOffIcon, Lock$1 as Lock, Lock$1 as LockIcon, LogIn$1 as LogIn, LogIn$1 as LogInIcon, LogOut$1 as LogOut, LogOut$1 as LogOutIcon, Accessibility$1 as LucideAccessibility, Activity$1 as LucideActivity, AirVent$1 as LucideAirVent, Airplay$1 as LucideAirplay, AlarmCheck$1 as LucideAlarmCheck, AlarmClock$1 as LucideAlarmClock, AlarmClockOff$1 as LucideAlarmClockOff, AlarmMinus$1 as LucideAlarmMinus, AlarmPlus$1 as LucideAlarmPlus, Album$1 as LucideAlbum, AlertCircle$1 as LucideAlertCircle, AlertOctagon$1 as LucideAlertOctagon, AlertTriangle$1 as LucideAlertTriangle, AlignCenter$1 as LucideAlignCenter, AlignCenterHorizontal$1 as LucideAlignCenterHorizontal, AlignCenterVertical$1 as LucideAlignCenterVertical, AlignEndHorizontal$1 as LucideAlignEndHorizontal, AlignEndVertical$1 as LucideAlignEndVertical, AlignHorizontalDistributeCenter$1 as LucideAlignHorizontalDistributeCenter, AlignHorizontalDistributeEnd$1 as LucideAlignHorizontalDistributeEnd, AlignHorizontalDistributeStart$1 as LucideAlignHorizontalDistributeStart, AlignHorizontalJustifyCenter$1 as LucideAlignHorizontalJustifyCenter, AlignHorizontalJustifyEnd$1 as LucideAlignHorizontalJustifyEnd, AlignHorizontalJustifyStart$1 as LucideAlignHorizontalJustifyStart, AlignHorizontalSpaceAround$1 as LucideAlignHorizontalSpaceAround, AlignHorizontalSpaceBetween$1 as LucideAlignHorizontalSpaceBetween, AlignJustify$1 as LucideAlignJustify, AlignLeft$1 as LucideAlignLeft, AlignRight$1 as LucideAlignRight, AlignStartHorizontal$1 as LucideAlignStartHorizontal, AlignStartVertical$1 as LucideAlignStartVertical, AlignVerticalDistributeCenter$1 as LucideAlignVerticalDistributeCenter, AlignVerticalDistributeEnd$1 as LucideAlignVerticalDistributeEnd, AlignVerticalDistributeStart$1 as LucideAlignVerticalDistributeStart, AlignVerticalJustifyCenter$1 as LucideAlignVerticalJustifyCenter, AlignVerticalJustifyEnd$1 as LucideAlignVerticalJustifyEnd, AlignVerticalJustifyStart$1 as LucideAlignVerticalJustifyStart, AlignVerticalSpaceAround$1 as LucideAlignVerticalSpaceAround, AlignVerticalSpaceBetween$1 as LucideAlignVerticalSpaceBetween, Anchor$1 as LucideAnchor, Angry$1 as LucideAngry, Annoyed$1 as LucideAnnoyed, Aperture$1 as LucideAperture, Apple$1 as LucideApple, Archive$1 as LucideArchive, ArchiveRestore$1 as LucideArchiveRestore, Armchair$1 as LucideArmchair, ArrowBigDown$1 as LucideArrowBigDown, ArrowBigLeft$1 as LucideArrowBigLeft, ArrowBigRight$1 as LucideArrowBigRight, ArrowBigUp$1 as LucideArrowBigUp, ArrowDown$1 as LucideArrowDown, ArrowDownCircle$1 as LucideArrowDownCircle, ArrowDownLeft$1 as LucideArrowDownLeft, ArrowDownRight$1 as LucideArrowDownRight, ArrowLeft$1 as LucideArrowLeft, ArrowLeftCircle$1 as LucideArrowLeftCircle, ArrowLeftRight$1 as LucideArrowLeftRight, ArrowRight$1 as LucideArrowRight, ArrowRightCircle$1 as LucideArrowRightCircle, ArrowUp$1 as LucideArrowUp, ArrowUpCircle$1 as LucideArrowUpCircle, ArrowUpDown$1 as LucideArrowUpDown, ArrowUpLeft$1 as LucideArrowUpLeft, ArrowUpRight$1 as LucideArrowUpRight, Asterisk$1 as LucideAsterisk, AtSign$1 as LucideAtSign, Award$1 as LucideAward, Axe$1 as LucideAxe, Axis3d$1 as LucideAxis3d, Baby$1 as LucideBaby, Backpack$1 as LucideBackpack, BaggageClaim$1 as LucideBaggageClaim, Banana$1 as LucideBanana, Banknote$1 as LucideBanknote, BarChart$1 as LucideBarChart, BarChart2$1 as LucideBarChart2, BarChart3$1 as LucideBarChart3, BarChart4$1 as LucideBarChart4, BarChartHorizontal$1 as LucideBarChartHorizontal, Baseline$1 as LucideBaseline, Bath$1 as LucideBath, Battery$1 as LucideBattery, BatteryCharging$1 as LucideBatteryCharging, BatteryFull$1 as LucideBatteryFull, BatteryLow$1 as LucideBatteryLow, BatteryMedium$1 as LucideBatteryMedium, BatteryWarning$1 as LucideBatteryWarning, Beaker$1 as LucideBeaker, Bean$1 as LucideBean, BeanOff$1 as LucideBeanOff, Bed$1 as LucideBed, BedDouble$1 as LucideBedDouble, BedSingle$1 as LucideBedSingle, Beef$1 as LucideBeef, Beer$1 as LucideBeer, Bell$1 as LucideBell, BellMinus$1 as LucideBellMinus, BellOff$1 as LucideBellOff, BellPlus$1 as LucideBellPlus, BellRing$1 as LucideBellRing, Bike$1 as LucideBike, Binary$1 as LucideBinary, Bitcoin$1 as LucideBitcoin, Bluetooth$1 as LucideBluetooth, BluetoothConnected$1 as LucideBluetoothConnected, BluetoothOff$1 as LucideBluetoothOff, BluetoothSearching$1 as LucideBluetoothSearching, Bold$1 as LucideBold, Bomb$1 as LucideBomb, Bone$1 as LucideBone, Book$1 as LucideBook, BookOpen$1 as LucideBookOpen, BookOpenCheck$1 as LucideBookOpenCheck, Bookmark$1 as LucideBookmark, BookmarkMinus$1 as LucideBookmarkMinus, BookmarkPlus$1 as LucideBookmarkPlus, Bot$1 as LucideBot, Box$1 as LucideBox, BoxSelect$1 as LucideBoxSelect, Boxes$1 as LucideBoxes, Briefcase$1 as LucideBriefcase, Brush$1 as LucideBrush, Bug$1 as LucideBug, Building$1 as LucideBuilding, Building2$1 as LucideBuilding2, Bus$1 as LucideBus, Cake$1 as LucideCake, Calculator$1 as LucideCalculator, Calendar$1 as LucideCalendar, CalendarCheck$1 as LucideCalendarCheck, CalendarCheck2$1 as LucideCalendarCheck2, CalendarClock$1 as LucideCalendarClock, CalendarDays$1 as LucideCalendarDays, CalendarHeart$1 as LucideCalendarHeart, CalendarMinus$1 as LucideCalendarMinus, CalendarOff$1 as LucideCalendarOff, CalendarPlus$1 as LucideCalendarPlus, CalendarRange$1 as LucideCalendarRange, CalendarSearch$1 as LucideCalendarSearch, CalendarX$1 as LucideCalendarX, CalendarX2$1 as LucideCalendarX2, Camera$1 as LucideCamera, CameraOff$1 as LucideCameraOff, Candy$1 as LucideCandy, CandyOff$1 as LucideCandyOff, Car$1 as LucideCar, Carrot$1 as LucideCarrot, Cast$1 as LucideCast, Cat$1 as LucideCat, Check$1 as LucideCheck, CheckCheck$1 as LucideCheckCheck, CheckCircle$1 as LucideCheckCircle, CheckCircle2$1 as LucideCheckCircle2, CheckSquare$1 as LucideCheckSquare, ChefHat$1 as LucideChefHat, Cherry$1 as LucideCherry, ChevronDown$1 as LucideChevronDown, ChevronFirst$1 as LucideChevronFirst, ChevronLast$1 as LucideChevronLast, ChevronLeft$1 as LucideChevronLeft, ChevronRight$1 as LucideChevronRight, ChevronUp$1 as LucideChevronUp, ChevronsDown$1 as LucideChevronsDown, ChevronsDownUp$1 as LucideChevronsDownUp, ChevronsLeft$1 as LucideChevronsLeft, ChevronsLeftRight$1 as LucideChevronsLeftRight, ChevronsRight$1 as LucideChevronsRight, ChevronsRightLeft$1 as LucideChevronsRightLeft, ChevronsUp$1 as LucideChevronsUp, ChevronsUpDown$1 as LucideChevronsUpDown, Chrome$1 as LucideChrome, Cigarette$1 as LucideCigarette, CigaretteOff$1 as LucideCigaretteOff, Circle$1 as LucideCircle, CircleDot$1 as LucideCircleDot, CircleEllipsis$1 as LucideCircleEllipsis, CircleSlashed$1 as LucideCircleSlashed, Citrus$1 as LucideCitrus, Clapperboard$1 as LucideClapperboard, Clipboard$1 as LucideClipboard, ClipboardCheck$1 as LucideClipboardCheck, ClipboardCopy$1 as LucideClipboardCopy, ClipboardEdit$1 as LucideClipboardEdit, ClipboardList$1 as LucideClipboardList, ClipboardSignature$1 as LucideClipboardSignature, ClipboardType$1 as LucideClipboardType, ClipboardX$1 as LucideClipboardX, Clock$1 as LucideClock, Clock1$1 as LucideClock1, Clock10$1 as LucideClock10, Clock11$1 as LucideClock11, Clock12$1 as LucideClock12, Clock2$1 as LucideClock2, Clock3$1 as LucideClock3, Clock4$1 as LucideClock4, Clock5$1 as LucideClock5, Clock6$1 as LucideClock6, Clock7$1 as LucideClock7, Clock8$1 as LucideClock8, Clock9$1 as LucideClock9, Cloud$1 as LucideCloud, CloudCog$1 as LucideCloudCog, CloudDrizzle$1 as LucideCloudDrizzle, CloudFog$1 as LucideCloudFog, CloudHail$1 as LucideCloudHail, CloudLightning$1 as LucideCloudLightning, CloudMoon$1 as LucideCloudMoon, CloudMoonRain$1 as LucideCloudMoonRain, CloudOff$1 as LucideCloudOff, CloudRain$1 as LucideCloudRain, CloudRainWind$1 as LucideCloudRainWind, CloudSnow$1 as LucideCloudSnow, CloudSun$1 as LucideCloudSun, CloudSunRain$1 as LucideCloudSunRain, Cloudy$1 as LucideCloudy, Clover$1 as LucideClover, Code$1 as LucideCode, Code2$1 as LucideCode2, Codepen$1 as LucideCodepen, Codesandbox$1 as LucideCodesandbox, Coffee$1 as LucideCoffee, Cog$1 as LucideCog, Coins$1 as LucideCoins, Columns$1 as LucideColumns, Command$1 as LucideCommand, Compass$1 as LucideCompass, Component$1 as LucideComponent, ConciergeBell$1 as LucideConciergeBell, Contact$1 as LucideContact, Contrast$1 as LucideContrast, Cookie$1 as LucideCookie, Copy$1 as LucideCopy, Copyleft$1 as LucideCopyleft, Copyright$1 as LucideCopyright, CornerDownLeft$1 as LucideCornerDownLeft, CornerDownRight$1 as LucideCornerDownRight, CornerLeftDown$1 as LucideCornerLeftDown, CornerLeftUp$1 as LucideCornerLeftUp, CornerRightDown$1 as LucideCornerRightDown, CornerRightUp$1 as LucideCornerRightUp, CornerUpLeft$1 as LucideCornerUpLeft, CornerUpRight$1 as LucideCornerUpRight, Cpu$1 as LucideCpu, CreditCard$1 as LucideCreditCard, Croissant$1 as LucideCroissant, Crop$1 as LucideCrop, Cross$1 as LucideCross, Crosshair$1 as LucideCrosshair, Crown$1 as LucideCrown, CupSoda$1 as LucideCupSoda, CurlyBraces$1 as LucideCurlyBraces, Currency$1 as LucideCurrency, Database$1 as LucideDatabase, DatabaseBackup$1 as LucideDatabaseBackup, Delete$1 as LucideDelete, Diamond$1 as LucideDiamond, Dice1$1 as LucideDice1, Dice2$1 as LucideDice2, Dice3$1 as LucideDice3, Dice4$1 as LucideDice4, Dice5$1 as LucideDice5, Dice6$1 as LucideDice6, Dices$1 as LucideDices, Diff$1 as LucideDiff, Disc$1 as LucideDisc, Divide$1 as LucideDivide, DivideCircle$1 as LucideDivideCircle, DivideSquare$1 as LucideDivideSquare, Dna$1 as LucideDna, DnaOff$1 as LucideDnaOff, Dog$1 as LucideDog, DollarSign$1 as LucideDollarSign, Download$1 as LucideDownload, DownloadCloud$1 as LucideDownloadCloud, Dribbble$1 as LucideDribbble, Droplet$1 as LucideDroplet, Droplets$1 as LucideDroplets, Drumstick$1 as LucideDrumstick, Dumbbell$1 as LucideDumbbell, Ear$1 as LucideEar, EarOff$1 as LucideEarOff, Edit$1 as LucideEdit, Edit2$1 as LucideEdit2, Edit3$1 as LucideEdit3, Egg$1 as LucideEgg, EggFried$1 as LucideEggFried, EggOff$1 as LucideEggOff, Equal$1 as LucideEqual, EqualNot$1 as LucideEqualNot, Eraser$1 as LucideEraser, Euro$1 as LucideEuro, Expand$1 as LucideExpand, ExternalLink$1 as LucideExternalLink, Eye$1 as LucideEye, EyeOff$1 as LucideEyeOff, Facebook$1 as LucideFacebook, Factory$1 as LucideFactory, Fan$1 as LucideFan, FastForward$1 as LucideFastForward, Feather$1 as LucideFeather, Figma$1 as LucideFigma, File$1 as LucideFile, FileArchive$1 as LucideFileArchive, FileAudio$1 as LucideFileAudio, FileAudio2$1 as LucideFileAudio2, FileAxis3d$1 as LucideFileAxis3d, FileBadge$1 as LucideFileBadge, FileBadge2$1 as LucideFileBadge2, FileBarChart$1 as LucideFileBarChart, FileBarChart2$1 as LucideFileBarChart2, FileBox$1 as LucideFileBox, FileCheck$1 as LucideFileCheck, FileCheck2$1 as LucideFileCheck2, FileClock$1 as LucideFileClock, FileCode$1 as LucideFileCode, FileCog$1 as LucideFileCog, FileCog2$1 as LucideFileCog2, FileDiff$1 as LucideFileDiff, FileDigit$1 as LucideFileDigit, FileDown$1 as LucideFileDown, FileEdit$1 as LucideFileEdit, FileHeart$1 as LucideFileHeart, FileImage$1 as LucideFileImage, FileInput$1 as LucideFileInput, FileJson$1 as LucideFileJson, FileJson2$1 as LucideFileJson2, FileKey$1 as LucideFileKey, FileKey2$1 as LucideFileKey2, FileLineChart$1 as LucideFileLineChart, FileLock$1 as LucideFileLock, FileLock2$1 as LucideFileLock2, FileMinus$1 as LucideFileMinus, FileMinus2$1 as LucideFileMinus2, FileOutput$1 as LucideFileOutput, FilePieChart$1 as LucideFilePieChart, FilePlus$1 as LucideFilePlus, FilePlus2$1 as LucideFilePlus2, FileQuestion$1 as LucideFileQuestion, FileScan$1 as LucideFileScan, FileSearch$1 as LucideFileSearch, FileSearch2$1 as LucideFileSearch2, FileSignature$1 as LucideFileSignature, FileSpreadsheet$1 as LucideFileSpreadsheet, FileSymlink$1 as LucideFileSymlink, FileTerminal$1 as LucideFileTerminal, FileText$1 as LucideFileText, FileType$1 as LucideFileType, FileType2$1 as LucideFileType2, FileUp$1 as LucideFileUp, FileVideo$1 as LucideFileVideo, FileVideo2$1 as LucideFileVideo2, FileVolume$1 as LucideFileVolume, FileVolume2$1 as LucideFileVolume2, FileWarning$1 as LucideFileWarning, FileX$1 as LucideFileX, FileX2$1 as LucideFileX2, Files$1 as LucideFiles, Film$1 as LucideFilm, Filter$1 as LucideFilter, Fingerprint$1 as LucideFingerprint, Fish$1 as LucideFish, Flag$1 as LucideFlag, FlagOff$1 as LucideFlagOff, FlagTriangleLeft$1 as LucideFlagTriangleLeft, FlagTriangleRight$1 as LucideFlagTriangleRight, Flame$1 as LucideFlame, Flashlight$1 as LucideFlashlight, FlashlightOff$1 as LucideFlashlightOff, FlaskConical$1 as LucideFlaskConical, FlaskConicalOff$1 as LucideFlaskConicalOff, FlaskRound$1 as LucideFlaskRound, FlipHorizontal$1 as LucideFlipHorizontal, FlipHorizontal2$1 as LucideFlipHorizontal2, FlipVertical$1 as LucideFlipVertical, FlipVertical2$1 as LucideFlipVertical2, Flower$1 as LucideFlower, Flower2$1 as LucideFlower2, Focus$1 as LucideFocus, Folder$1 as LucideFolder, FolderArchive$1 as LucideFolderArchive, FolderCheck$1 as LucideFolderCheck, FolderClock$1 as LucideFolderClock, FolderClosed$1 as LucideFolderClosed, FolderCog$1 as LucideFolderCog, FolderCog2$1 as LucideFolderCog2, FolderDown$1 as LucideFolderDown, FolderEdit$1 as LucideFolderEdit, FolderHeart$1 as LucideFolderHeart, FolderInput$1 as LucideFolderInput, FolderKey$1 as LucideFolderKey, FolderLock$1 as LucideFolderLock, FolderMinus$1 as LucideFolderMinus, FolderOpen$1 as LucideFolderOpen, FolderOutput$1 as LucideFolderOutput, FolderPlus$1 as LucideFolderPlus, FolderSearch$1 as LucideFolderSearch, FolderSearch2$1 as LucideFolderSearch2, FolderSymlink$1 as LucideFolderSymlink, FolderTree$1 as LucideFolderTree, FolderUp$1 as LucideFolderUp, FolderX$1 as LucideFolderX, Folders$1 as LucideFolders, FormInput$1 as LucideFormInput, Forward$1 as LucideForward, Frame$1 as LucideFrame, Framer$1 as LucideFramer, Frown$1 as LucideFrown, Fuel$1 as LucideFuel, FunctionSquare$1 as LucideFunctionSquare, Gamepad$1 as LucideGamepad, Gamepad2$1 as LucideGamepad2, Gauge$1 as LucideGauge, Gavel$1 as LucideGavel, Gem$1 as LucideGem, Ghost$1 as LucideGhost, Gift$1 as LucideGift, GitBranch$1 as LucideGitBranch, GitBranchPlus$1 as LucideGitBranchPlus, GitCommit$1 as LucideGitCommit, GitCompare$1 as LucideGitCompare, GitFork$1 as LucideGitFork, GitMerge$1 as LucideGitMerge, GitPullRequest$1 as LucideGitPullRequest, GitPullRequestClosed$1 as LucideGitPullRequestClosed, GitPullRequestDraft$1 as LucideGitPullRequestDraft, Github$1 as LucideGithub, Gitlab$1 as LucideGitlab, GlassWater$1 as LucideGlassWater, Glasses$1 as LucideGlasses, Globe$1 as LucideGlobe, Globe2$1 as LucideGlobe2, Grab$1 as LucideGrab, GraduationCap$1 as LucideGraduationCap, Grape$1 as LucideGrape, Grid$1 as LucideGrid, GripHorizontal$1 as LucideGripHorizontal, GripVertical$1 as LucideGripVertical, Hammer$1 as LucideHammer, Hand$1 as LucideHand, HandMetal$1 as LucideHandMetal, HardDrive$1 as LucideHardDrive, HardHat$1 as LucideHardHat, Hash$1 as LucideHash, Haze$1 as LucideHaze, Heading$1 as LucideHeading, Heading1$1 as LucideHeading1, Heading2$1 as LucideHeading2, Heading3$1 as LucideHeading3, Heading4$1 as LucideHeading4, Heading5$1 as LucideHeading5, Heading6$1 as LucideHeading6, Headphones$1 as LucideHeadphones, Heart$1 as LucideHeart, HeartCrack$1 as LucideHeartCrack, HeartHandshake$1 as LucideHeartHandshake, HeartOff$1 as LucideHeartOff, HeartPulse$1 as LucideHeartPulse, HelpCircle$1 as LucideHelpCircle, Hexagon$1 as LucideHexagon, Highlighter$1 as LucideHighlighter, History$1 as LucideHistory, Home$1 as LucideHome, Hop$1 as LucideHop, HopOff$1 as LucideHopOff, Hourglass$1 as LucideHourglass, IceCream$1 as LucideIceCream, IceCream2$1 as LucideIceCream2, Image$1 as LucideImage, ImageMinus$1 as LucideImageMinus, ImageOff$1 as LucideImageOff, ImagePlus$1 as LucideImagePlus, Import$1 as LucideImport, Inbox$1 as LucideInbox, Indent$1 as LucideIndent, IndianRupee$1 as LucideIndianRupee, Infinity$1 as LucideInfinity, Info$1 as LucideInfo, Inspect$1 as LucideInspect, Instagram$1 as LucideInstagram, Italic$1 as LucideItalic, JapaneseYen$1 as LucideJapaneseYen, Joystick$1 as LucideJoystick, Key$1 as LucideKey, Keyboard$1 as LucideKeyboard, Lamp$1 as LucideLamp, LampCeiling$1 as LucideLampCeiling, LampDesk$1 as LucideLampDesk, LampFloor$1 as LucideLampFloor, LampWallDown$1 as LucideLampWallDown, LampWallUp$1 as LucideLampWallUp, Landmark$1 as LucideLandmark, Languages$1 as LucideLanguages, Laptop$1 as LucideLaptop, Laptop2$1 as LucideLaptop2, Lasso$1 as LucideLasso, LassoSelect$1 as LucideLassoSelect, Laugh$1 as LucideLaugh, Layers$1 as LucideLayers, Layout$1 as LucideLayout, LayoutDashboard$1 as LucideLayoutDashboard, LayoutGrid$1 as LucideLayoutGrid, LayoutList$1 as LucideLayoutList, LayoutTemplate$1 as LucideLayoutTemplate, Leaf$1 as LucideLeaf, Library$1 as LucideLibrary, LifeBuoy$1 as LucideLifeBuoy, Lightbulb$1 as LucideLightbulb, LightbulbOff$1 as LucideLightbulbOff, LineChart$1 as LucideLineChart, Link$1 as LucideLink, Link2$1 as LucideLink2, Link2Off$1 as LucideLink2Off, Linkedin$1 as LucideLinkedin, List$1 as LucideList, ListChecks$1 as LucideListChecks, ListEnd$1 as LucideListEnd, ListMinus$1 as LucideListMinus, ListMusic$1 as LucideListMusic, ListOrdered$1 as LucideListOrdered, ListPlus$1 as LucideListPlus, ListStart$1 as LucideListStart, ListVideo$1 as LucideListVideo, ListX$1 as LucideListX, Loader$1 as LucideLoader, Loader2$1 as LucideLoader2, Locate$1 as LucideLocate, LocateFixed$1 as LucideLocateFixed, LocateOff$1 as LucideLocateOff, Lock$1 as LucideLock, LogIn$1 as LucideLogIn, LogOut$1 as LucideLogOut, Luggage$1 as LucideLuggage, Magnet$1 as LucideMagnet, Mail$1 as LucideMail, MailCheck$1 as LucideMailCheck, MailMinus$1 as LucideMailMinus, MailOpen$1 as LucideMailOpen, MailPlus$1 as LucideMailPlus, MailQuestion$1 as LucideMailQuestion, MailSearch$1 as LucideMailSearch, MailWarning$1 as LucideMailWarning, MailX$1 as LucideMailX, Mails$1 as LucideMails, Map$1 as LucideMap, MapPin$1 as LucideMapPin, MapPinOff$1 as LucideMapPinOff, Martini$1 as LucideMartini, Maximize$1 as LucideMaximize, Maximize2$1 as LucideMaximize2, Medal$1 as LucideMedal, Megaphone$1 as LucideMegaphone, MegaphoneOff$1 as LucideMegaphoneOff, Meh$1 as LucideMeh, Menu$1 as LucideMenu, MessageCircle$1 as LucideMessageCircle, MessageSquare$1 as LucideMessageSquare, Mic$1 as LucideMic, Mic2$1 as LucideMic2, MicOff$1 as LucideMicOff, Microscope$1 as LucideMicroscope, Microwave$1 as LucideMicrowave, Milestone$1 as LucideMilestone, Milk$1 as LucideMilk, MilkOff$1 as LucideMilkOff, Minimize$1 as LucideMinimize, Minimize2$1 as LucideMinimize2, Minus$1 as LucideMinus, MinusCircle$1 as LucideMinusCircle, MinusSquare$1 as LucideMinusSquare, Monitor$1 as LucideMonitor, MonitorOff$1 as LucideMonitorOff, MonitorSmartphone$1 as LucideMonitorSmartphone, MonitorSpeaker$1 as LucideMonitorSpeaker, Moon$1 as LucideMoon, MoreHorizontal$1 as LucideMoreHorizontal, MoreVertical$1 as LucideMoreVertical, Mountain$1 as LucideMountain, MountainSnow$1 as LucideMountainSnow, Mouse$1 as LucideMouse, MousePointer$1 as LucideMousePointer, MousePointer2$1 as LucideMousePointer2, MousePointerClick$1 as LucideMousePointerClick, Move$1 as LucideMove, Move3d$1 as LucideMove3d, MoveDiagonal$1 as LucideMoveDiagonal, MoveDiagonal2$1 as LucideMoveDiagonal2, MoveHorizontal$1 as LucideMoveHorizontal, MoveVertical$1 as LucideMoveVertical, Music$1 as LucideMusic, Music2$1 as LucideMusic2, Music3$1 as LucideMusic3, Music4$1 as LucideMusic4, Navigation$1 as LucideNavigation, Navigation2$1 as LucideNavigation2, Navigation2Off$1 as LucideNavigation2Off, NavigationOff$1 as LucideNavigationOff, Network$1 as LucideNetwork, Newspaper$1 as LucideNewspaper, Nut$1 as LucideNut, NutOff$1 as LucideNutOff, Octagon$1 as LucideOctagon, Option$1 as LucideOption, Outdent$1 as LucideOutdent, Package$1 as LucidePackage, Package2$1 as LucidePackage2, PackageCheck$1 as LucidePackageCheck, PackageMinus$1 as LucidePackageMinus, PackageOpen$1 as LucidePackageOpen, PackagePlus$1 as LucidePackagePlus, PackageSearch$1 as LucidePackageSearch, PackageX$1 as LucidePackageX, PaintBucket$1 as LucidePaintBucket, Paintbrush$1 as LucidePaintbrush, Paintbrush2$1 as LucidePaintbrush2, Palette$1 as LucidePalette, Palmtree$1 as LucidePalmtree, Paperclip$1 as LucidePaperclip, PartyPopper$1 as LucidePartyPopper, Pause$1 as LucidePause, PauseCircle$1 as LucidePauseCircle, PauseOctagon$1 as LucidePauseOctagon, PenTool$1 as LucidePenTool, Pencil$1 as LucidePencil, Percent$1 as LucidePercent, PersonStanding$1 as LucidePersonStanding, Phone$1 as LucidePhone, PhoneCall$1 as LucidePhoneCall, PhoneForwarded$1 as LucidePhoneForwarded, PhoneIncoming$1 as LucidePhoneIncoming, PhoneMissed$1 as LucidePhoneMissed, PhoneOff$1 as LucidePhoneOff, PhoneOutgoing$1 as LucidePhoneOutgoing, PieChart$1 as LucidePieChart, PiggyBank$1 as LucidePiggyBank, Pilcrow$1 as LucidePilcrow, Pin$1 as LucidePin, PinOff$1 as LucidePinOff, Pipette$1 as LucidePipette, Pizza$1 as LucidePizza, Plane$1 as LucidePlane, Play$1 as LucidePlay, PlayCircle$1 as LucidePlayCircle, Plug$1 as LucidePlug, Plug2$1 as LucidePlug2, PlugZap$1 as LucidePlugZap, Plus$1 as LucidePlus, PlusCircle$1 as LucidePlusCircle, PlusSquare$1 as LucidePlusSquare, Pocket$1 as LucidePocket, Podcast$1 as LucidePodcast, Pointer$1 as LucidePointer, PoundSterling$1 as LucidePoundSterling, Power$1 as LucidePower, PowerOff$1 as LucidePowerOff, Printer$1 as LucidePrinter, Puzzle$1 as LucidePuzzle, QrCode$1 as LucideQrCode, Quote$1 as LucideQuote, Radio$1 as LucideRadio, RadioReceiver$1 as LucideRadioReceiver, RectangleHorizontal$1 as LucideRectangleHorizontal, RectangleVertical$1 as LucideRectangleVertical, Recycle$1 as LucideRecycle, Redo$1 as LucideRedo, Redo2$1 as LucideRedo2, RefreshCcw$1 as LucideRefreshCcw, RefreshCw$1 as LucideRefreshCw, Refrigerator$1 as LucideRefrigerator, Regex$1 as LucideRegex, Repeat$1 as LucideRepeat, Repeat1$1 as LucideRepeat1, Reply$1 as LucideReply, ReplyAll$1 as LucideReplyAll, Rewind$1 as LucideRewind, Rocket$1 as LucideRocket, RockingChair$1 as LucideRockingChair, Rotate3d$1 as LucideRotate3d, RotateCcw$1 as LucideRotateCcw, RotateCw$1 as LucideRotateCw, Rss$1 as LucideRss, Ruler$1 as LucideRuler, RussianRuble$1 as LucideRussianRuble, Sailboat$1 as LucideSailboat, Salad$1 as LucideSalad, Sandwich$1 as LucideSandwich, Save$1 as LucideSave, Scale$1 as LucideScale, Scale3d$1 as LucideScale3d, Scaling$1 as LucideScaling, Scan$1 as LucideScan, ScanFace$1 as LucideScanFace, ScanLine$1 as LucideScanLine, Scissors$1 as LucideScissors, ScreenShare$1 as LucideScreenShare, ScreenShareOff$1 as LucideScreenShareOff, Scroll$1 as LucideScroll, Search$1 as LucideSearch, Send$1 as LucideSend, SeparatorHorizontal$1 as LucideSeparatorHorizontal, SeparatorVertical$1 as LucideSeparatorVertical, Server$1 as LucideServer, ServerCog$1 as LucideServerCog, ServerCrash$1 as LucideServerCrash, ServerOff$1 as LucideServerOff, Settings$1 as LucideSettings, Settings2$1 as LucideSettings2, Share$1 as LucideShare, Share2$1 as LucideShare2, Sheet$1 as LucideSheet, Shield$1 as LucideShield, ShieldAlert$1 as LucideShieldAlert, ShieldCheck$1 as LucideShieldCheck, ShieldClose$1 as LucideShieldClose, ShieldOff$1 as LucideShieldOff, Shirt$1 as LucideShirt, ShoppingBag$1 as LucideShoppingBag, ShoppingCart$1 as LucideShoppingCart, Shovel$1 as LucideShovel, ShowerHead$1 as LucideShowerHead, Shrink$1 as LucideShrink, Shrub$1 as LucideShrub, Shuffle$1 as LucideShuffle, Sidebar$1 as LucideSidebar, SidebarClose$1 as LucideSidebarClose, SidebarOpen$1 as LucideSidebarOpen, Sigma$1 as LucideSigma, Signal$1 as LucideSignal, SignalHigh$1 as LucideSignalHigh, SignalLow$1 as LucideSignalLow, SignalMedium$1 as LucideSignalMedium, SignalZero$1 as LucideSignalZero, Siren$1 as LucideSiren, SkipBack$1 as LucideSkipBack, SkipForward$1 as LucideSkipForward, Skull$1 as LucideSkull, Slack$1 as LucideSlack, Slash$1 as LucideSlash, Slice$1 as LucideSlice, Sliders$1 as LucideSliders, SlidersHorizontal$1 as LucideSlidersHorizontal, Smartphone$1 as LucideSmartphone, SmartphoneCharging$1 as LucideSmartphoneCharging, Smile$1 as LucideSmile, SmilePlus$1 as LucideSmilePlus, Snowflake$1 as LucideSnowflake, Sofa$1 as LucideSofa, SortAsc$1 as LucideSortAsc, SortDesc$1 as LucideSortDesc, Soup$1 as LucideSoup, Speaker$1 as LucideSpeaker, Spline$1 as LucideSpline, Sprout$1 as LucideSprout, Square$1 as LucideSquare, Star$1 as LucideStar, StarHalf$1 as LucideStarHalf, StarOff$1 as LucideStarOff, Stethoscope$1 as LucideStethoscope, Sticker$1 as LucideSticker, StickyNote$1 as LucideStickyNote, StopCircle$1 as LucideStopCircle, StretchHorizontal$1 as LucideStretchHorizontal, StretchVertical$1 as LucideStretchVertical, Strikethrough$1 as LucideStrikethrough, Subscript$1 as LucideSubscript, Subtitles$1 as LucideSubtitles, Sun$1 as LucideSun, SunDim$1 as LucideSunDim, SunMedium$1 as LucideSunMedium, SunMoon$1 as LucideSunMoon, SunSnow$1 as LucideSunSnow, Sunrise$1 as LucideSunrise, Sunset$1 as LucideSunset, Superscript$1 as LucideSuperscript, SwissFranc$1 as LucideSwissFranc, SwitchCamera$1 as LucideSwitchCamera, Sword$1 as LucideSword, Swords$1 as LucideSwords, Syringe$1 as LucideSyringe, Table$1 as LucideTable, Table2$1 as LucideTable2, Tablet$1 as LucideTablet, Tag$1 as LucideTag, Tags$1 as LucideTags, Target$1 as LucideTarget, Tent$1 as LucideTent, Terminal$1 as LucideTerminal, TerminalSquare$1 as LucideTerminalSquare, TextCursor$1 as LucideTextCursor, TextCursorInput$1 as LucideTextCursorInput, Thermometer$1 as LucideThermometer, ThermometerSnowflake$1 as LucideThermometerSnowflake, ThermometerSun$1 as LucideThermometerSun, ThumbsDown$1 as LucideThumbsDown, ThumbsUp$1 as LucideThumbsUp, Ticket$1 as LucideTicket, Timer$1 as LucideTimer, TimerOff$1 as LucideTimerOff, TimerReset$1 as LucideTimerReset, ToggleLeft$1 as LucideToggleLeft, ToggleRight$1 as LucideToggleRight, Tornado$1 as LucideTornado, ToyBrick$1 as LucideToyBrick, Train$1 as LucideTrain, Trash$1 as LucideTrash, Trash2$1 as LucideTrash2, TreeDeciduous$1 as LucideTreeDeciduous, TreePine$1 as LucideTreePine, Trees$1 as LucideTrees, Trello$1 as LucideTrello, TrendingDown$1 as LucideTrendingDown, TrendingUp$1 as LucideTrendingUp, Triangle$1 as LucideTriangle, Trophy$1 as LucideTrophy, Truck$1 as LucideTruck, Tv$1 as LucideTv, Tv2$1 as LucideTv2, Twitch$1 as LucideTwitch, Twitter$1 as LucideTwitter, Type$1 as LucideType, Umbrella$1 as LucideUmbrella, Underline$1 as LucideUnderline, Undo$1 as LucideUndo, Undo2$1 as LucideUndo2, Unlink$1 as LucideUnlink, Unlink2$1 as LucideUnlink2, Unlock$1 as LucideUnlock, Upload$1 as LucideUpload, UploadCloud$1 as LucideUploadCloud, Usb$1 as LucideUsb, User$1 as LucideUser, UserCheck$1 as LucideUserCheck, UserCog$1 as LucideUserCog, UserMinus$1 as LucideUserMinus, UserPlus$1 as LucideUserPlus, UserX$1 as LucideUserX, Users$1 as LucideUsers, Utensils$1 as LucideUtensils, UtensilsCrossed$1 as LucideUtensilsCrossed, Vegan$1 as LucideVegan, VenetianMask$1 as LucideVenetianMask, Verified$1 as LucideVerified, Vibrate$1 as LucideVibrate, VibrateOff$1 as LucideVibrateOff, Video$1 as LucideVideo, VideoOff$1 as LucideVideoOff, View$1 as LucideView, Voicemail$1 as LucideVoicemail, Volume$1 as LucideVolume, Volume1$1 as LucideVolume1, Volume2$1 as LucideVolume2, VolumeX$1 as LucideVolumeX, Wallet$1 as LucideWallet, Wand$1 as LucideWand, Wand2$1 as LucideWand2, Watch$1 as LucideWatch, Waves$1 as LucideWaves, Webcam$1 as LucideWebcam, Webhook$1 as LucideWebhook, Wheat$1 as LucideWheat, WheatOff$1 as LucideWheatOff, Wifi$1 as LucideWifi, WifiOff$1 as LucideWifiOff, Wind$1 as LucideWind, Wine$1 as LucideWine, WineOff$1 as LucideWineOff, WrapText$1 as LucideWrapText, Wrench$1 as LucideWrench, X$1 as LucideX, XCircle$1 as LucideXCircle, XOctagon$1 as LucideXOctagon, XSquare$1 as LucideXSquare, Youtube$1 as LucideYoutube, Zap$1 as LucideZap, ZapOff$1 as LucideZapOff, ZoomIn$1 as LucideZoomIn, ZoomOut$1 as LucideZoomOut, Luggage$1 as Luggage, Luggage$1 as LuggageIcon, Magnet$1 as Magnet, Magnet$1 as MagnetIcon, Mail$1 as Mail, MailCheck$1 as MailCheck, MailCheck$1 as MailCheckIcon, Mail$1 as MailIcon, MailMinus$1 as MailMinus, MailMinus$1 as MailMinusIcon, MailOpen$1 as MailOpen, MailOpen$1 as MailOpenIcon, MailPlus$1 as MailPlus, MailPlus$1 as MailPlusIcon, MailQuestion$1 as MailQuestion, MailQuestion$1 as MailQuestionIcon, MailSearch$1 as MailSearch, MailSearch$1 as MailSearchIcon, MailWarning$1 as MailWarning, MailWarning$1 as MailWarningIcon, MailX$1 as MailX, MailX$1 as MailXIcon, Mails$1 as Mails, Mails$1 as MailsIcon, Map$1 as Map, Map$1 as MapIcon, MapPin$1 as MapPin, MapPin$1 as MapPinIcon, MapPinOff$1 as MapPinOff, MapPinOff$1 as MapPinOffIcon, Martini$1 as Martini, Martini$1 as MartiniIcon, Maximize$1 as Maximize, Maximize2$1 as Maximize2, Maximize2$1 as Maximize2Icon, Maximize$1 as MaximizeIcon, Medal$1 as Medal, Medal$1 as MedalIcon, Megaphone$1 as Megaphone, Megaphone$1 as MegaphoneIcon, MegaphoneOff$1 as MegaphoneOff, MegaphoneOff$1 as MegaphoneOffIcon, Meh$1 as Meh, Meh$1 as MehIcon, Menu$1 as Menu, Menu$1 as MenuIcon, MessageCircle$1 as MessageCircle, MessageCircle$1 as MessageCircleIcon, MessageSquare$1 as MessageSquare, MessageSquare$1 as MessageSquareIcon, Mic$1 as Mic, Mic2$1 as Mic2, Mic2$1 as Mic2Icon, Mic$1 as MicIcon, MicOff$1 as MicOff, MicOff$1 as MicOffIcon, Microscope$1 as Microscope, Microscope$1 as MicroscopeIcon, Microwave$1 as Microwave, Microwave$1 as MicrowaveIcon, Milestone$1 as Milestone, Milestone$1 as MilestoneIcon, Milk$1 as Milk, Milk$1 as MilkIcon, MilkOff$1 as MilkOff, MilkOff$1 as MilkOffIcon, Minimize$1 as Minimize, Minimize2$1 as Minimize2, Minimize2$1 as Minimize2Icon, Minimize$1 as MinimizeIcon, Minus$1 as Minus, MinusCircle$1 as MinusCircle, MinusCircle$1 as MinusCircleIcon, Minus$1 as MinusIcon, MinusSquare$1 as MinusSquare, MinusSquare$1 as MinusSquareIcon, Monitor$1 as Monitor, Monitor$1 as MonitorIcon, MonitorOff$1 as MonitorOff, MonitorOff$1 as MonitorOffIcon, MonitorSmartphone$1 as MonitorSmartphone, MonitorSmartphone$1 as MonitorSmartphoneIcon, MonitorSpeaker$1 as MonitorSpeaker, MonitorSpeaker$1 as MonitorSpeakerIcon, Moon$1 as Moon, Moon$1 as MoonIcon, MoreHorizontal$1 as MoreHorizontal, MoreHorizontal$1 as MoreHorizontalIcon, MoreVertical$1 as MoreVertical, MoreVertical$1 as MoreVerticalIcon, Mountain$1 as Mountain, Mountain$1 as MountainIcon, MountainSnow$1 as MountainSnow, MountainSnow$1 as MountainSnowIcon, Mouse$1 as Mouse, Mouse$1 as MouseIcon, MousePointer$1 as MousePointer, MousePointer2$1 as MousePointer2, MousePointer2$1 as MousePointer2Icon, MousePointerClick$1 as MousePointerClick, MousePointerClick$1 as MousePointerClickIcon, MousePointer$1 as MousePointerIcon, Move$1 as Move, Move3d$1 as Move3d, Move3d$1 as Move3dIcon, MoveDiagonal$1 as MoveDiagonal, MoveDiagonal2$1 as MoveDiagonal2, MoveDiagonal2$1 as MoveDiagonal2Icon, MoveDiagonal$1 as MoveDiagonalIcon, MoveHorizontal$1 as MoveHorizontal, MoveHorizontal$1 as MoveHorizontalIcon, Move$1 as MoveIcon, MoveVertical$1 as MoveVertical, MoveVertical$1 as MoveVerticalIcon, Music$1 as Music, Music2$1 as Music2, Music2$1 as Music2Icon, Music3$1 as Music3, Music3$1 as Music3Icon, Music4$1 as Music4, Music4$1 as Music4Icon, Music$1 as MusicIcon, Navigation$1 as Navigation, Navigation2$1 as Navigation2, Navigation2$1 as Navigation2Icon, Navigation2Off$1 as Navigation2Off, Navigation2Off$1 as Navigation2OffIcon, Navigation$1 as NavigationIcon, NavigationOff$1 as NavigationOff, NavigationOff$1 as NavigationOffIcon, Network$1 as Network, Network$1 as NetworkIcon, Newspaper$1 as Newspaper, Newspaper$1 as NewspaperIcon, Nut$1 as Nut, Nut$1 as NutIcon, NutOff$1 as NutOff, NutOff$1 as NutOffIcon, Octagon$1 as Octagon, Octagon$1 as OctagonIcon, Option$1 as Option, Option$1 as OptionIcon, Outdent$1 as Outdent, Outdent$1 as OutdentIcon, Package$1 as Package, Package2$1 as Package2, Package2$1 as Package2Icon, PackageCheck$1 as PackageCheck, PackageCheck$1 as PackageCheckIcon, Package$1 as PackageIcon, PackageMinus$1 as PackageMinus, PackageMinus$1 as PackageMinusIcon, PackageOpen$1 as PackageOpen, PackageOpen$1 as PackageOpenIcon, PackagePlus$1 as PackagePlus, PackagePlus$1 as PackagePlusIcon, PackageSearch$1 as PackageSearch, PackageSearch$1 as PackageSearchIcon, PackageX$1 as PackageX, PackageX$1 as PackageXIcon, PaintBucket$1 as PaintBucket, PaintBucket$1 as PaintBucketIcon, Paintbrush$1 as Paintbrush, Paintbrush2$1 as Paintbrush2, Paintbrush2$1 as Paintbrush2Icon, Paintbrush$1 as PaintbrushIcon, Palette$1 as Palette, Palette$1 as PaletteIcon, Palmtree$1 as Palmtree, Palmtree$1 as PalmtreeIcon, Paperclip$1 as Paperclip, Paperclip$1 as PaperclipIcon, PartyPopper$1 as PartyPopper, PartyPopper$1 as PartyPopperIcon, Pause$1 as Pause, PauseCircle$1 as PauseCircle, PauseCircle$1 as PauseCircleIcon, Pause$1 as PauseIcon, PauseOctagon$1 as PauseOctagon, PauseOctagon$1 as PauseOctagonIcon, Edit2$1 as Pen, Edit$1 as PenBox, Edit3$1 as PenLine, PenTool$1 as PenTool, PenTool$1 as PenToolIcon, Pencil$1 as Pencil, Pencil$1 as PencilIcon, Percent$1 as Percent, Percent$1 as PercentIcon, PersonStanding$1 as PersonStanding, PersonStanding$1 as PersonStandingIcon, Phone$1 as Phone, PhoneCall$1 as PhoneCall, PhoneCall$1 as PhoneCallIcon, PhoneForwarded$1 as PhoneForwarded, PhoneForwarded$1 as PhoneForwardedIcon, Phone$1 as PhoneIcon, PhoneIncoming$1 as PhoneIncoming, PhoneIncoming$1 as PhoneIncomingIcon, PhoneMissed$1 as PhoneMissed, PhoneMissed$1 as PhoneMissedIcon, PhoneOff$1 as PhoneOff, PhoneOff$1 as PhoneOffIcon, PhoneOutgoing$1 as PhoneOutgoing, PhoneOutgoing$1 as PhoneOutgoingIcon, PieChart$1 as PieChart, PieChart$1 as PieChartIcon, PiggyBank$1 as PiggyBank, PiggyBank$1 as PiggyBankIcon, Pilcrow$1 as Pilcrow, Pilcrow$1 as PilcrowIcon, Pin$1 as Pin, Pin$1 as PinIcon, PinOff$1 as PinOff, PinOff$1 as PinOffIcon, Pipette$1 as Pipette, Pipette$1 as PipetteIcon, Pizza$1 as Pizza, Pizza$1 as PizzaIcon, Plane$1 as Plane, Plane$1 as PlaneIcon, Play$1 as Play, PlayCircle$1 as PlayCircle, PlayCircle$1 as PlayCircleIcon, Play$1 as PlayIcon, Plug$1 as Plug, Plug2$1 as Plug2, Plug2$1 as Plug2Icon, Plug$1 as PlugIcon, PlugZap$1 as PlugZap, PlugZap$1 as PlugZapIcon, Plus$1 as Plus, PlusCircle$1 as PlusCircle, PlusCircle$1 as PlusCircleIcon, Plus$1 as PlusIcon, PlusSquare$1 as PlusSquare, PlusSquare$1 as PlusSquareIcon, Pocket$1 as Pocket, Pocket$1 as PocketIcon, Podcast$1 as Podcast, Podcast$1 as PodcastIcon, Pointer$1 as Pointer, Pointer$1 as PointerIcon, PoundSterling$1 as PoundSterling, PoundSterling$1 as PoundSterlingIcon, Power$1 as Power, Power$1 as PowerIcon, PowerOff$1 as PowerOff, PowerOff$1 as PowerOffIcon, Printer$1 as Printer, Printer$1 as PrinterIcon, Puzzle$1 as Puzzle, Puzzle$1 as PuzzleIcon, QrCode$1 as QrCode, QrCode$1 as QrCodeIcon, Quote$1 as Quote, Quote$1 as QuoteIcon, Radio$1 as Radio, Radio$1 as RadioIcon, RadioReceiver$1 as RadioReceiver, RadioReceiver$1 as RadioReceiverIcon, RectangleHorizontal$1 as RectangleHorizontal, RectangleHorizontal$1 as RectangleHorizontalIcon, RectangleVertical$1 as RectangleVertical, RectangleVertical$1 as RectangleVerticalIcon, Recycle$1 as Recycle, Recycle$1 as RecycleIcon, Redo$1 as Redo, Redo2$1 as Redo2, Redo2$1 as Redo2Icon, Redo$1 as RedoIcon, RefreshCcw$1 as RefreshCcw, RefreshCcw$1 as RefreshCcwIcon, RefreshCw$1 as RefreshCw, RefreshCw$1 as RefreshCwIcon, Refrigerator$1 as Refrigerator, Refrigerator$1 as RefrigeratorIcon, Regex$1 as Regex, Regex$1 as RegexIcon, Repeat$1 as Repeat, Repeat1$1 as Repeat1, Repeat1$1 as Repeat1Icon, Repeat$1 as RepeatIcon, Reply$1 as Reply, ReplyAll$1 as ReplyAll, ReplyAll$1 as ReplyAllIcon, Reply$1 as ReplyIcon, Rewind$1 as Rewind, Rewind$1 as RewindIcon, Rocket$1 as Rocket, Rocket$1 as RocketIcon, RockingChair$1 as RockingChair, RockingChair$1 as RockingChairIcon, Rotate3d$1 as Rotate3d, Rotate3d$1 as Rotate3dIcon, RotateCcw$1 as RotateCcw, RotateCcw$1 as RotateCcwIcon, RotateCw$1 as RotateCw, RotateCw$1 as RotateCwIcon, Rss$1 as Rss, Rss$1 as RssIcon, Ruler$1 as Ruler, Ruler$1 as RulerIcon, RussianRuble$1 as RussianRuble, RussianRuble$1 as RussianRubleIcon, Sailboat$1 as Sailboat, Sailboat$1 as SailboatIcon, Salad$1 as Salad, Salad$1 as SaladIcon, Sandwich$1 as Sandwich, Sandwich$1 as SandwichIcon, Save$1 as Save, Save$1 as SaveIcon, Scale$1 as Scale, Scale3d$1 as Scale3d, Scale3d$1 as Scale3dIcon, Scale$1 as ScaleIcon, Scaling$1 as Scaling, Scaling$1 as ScalingIcon, Scan$1 as Scan, ScanFace$1 as ScanFace, ScanFace$1 as ScanFaceIcon, Scan$1 as ScanIcon, ScanLine$1 as ScanLine, ScanLine$1 as ScanLineIcon, Scissors$1 as Scissors, Scissors$1 as ScissorsIcon, ScreenShare$1 as ScreenShare, ScreenShare$1 as ScreenShareIcon, ScreenShareOff$1 as ScreenShareOff, ScreenShareOff$1 as ScreenShareOffIcon, Scroll$1 as Scroll, Scroll$1 as ScrollIcon, Search$1 as Search, Search$1 as SearchIcon, Send$1 as Send, Send$1 as SendIcon, SeparatorHorizontal$1 as SeparatorHorizontal, SeparatorHorizontal$1 as SeparatorHorizontalIcon, SeparatorVertical$1 as SeparatorVertical, SeparatorVertical$1 as SeparatorVerticalIcon, Server$1 as Server, ServerCog$1 as ServerCog, ServerCog$1 as ServerCogIcon, ServerCrash$1 as ServerCrash, ServerCrash$1 as ServerCrashIcon, Server$1 as ServerIcon, ServerOff$1 as ServerOff, ServerOff$1 as ServerOffIcon, Settings$1 as Settings, Settings2$1 as Settings2, Settings2$1 as Settings2Icon, Settings$1 as SettingsIcon, Share$1 as Share, Share2$1 as Share2, Share2$1 as Share2Icon, Share$1 as ShareIcon, Sheet$1 as Sheet, Sheet$1 as SheetIcon, Shield$1 as Shield, ShieldAlert$1 as ShieldAlert, ShieldAlert$1 as ShieldAlertIcon, ShieldCheck$1 as ShieldCheck, ShieldCheck$1 as ShieldCheckIcon, ShieldClose$1 as ShieldClose, ShieldClose$1 as ShieldCloseIcon, Shield$1 as ShieldIcon, ShieldOff$1 as ShieldOff, ShieldOff$1 as ShieldOffIcon, Shirt$1 as Shirt, Shirt$1 as ShirtIcon, ShoppingBag$1 as ShoppingBag, ShoppingBag$1 as ShoppingBagIcon, ShoppingCart$1 as ShoppingCart, ShoppingCart$1 as ShoppingCartIcon, Shovel$1 as Shovel, Shovel$1 as ShovelIcon, ShowerHead$1 as ShowerHead, ShowerHead$1 as ShowerHeadIcon, Shrink$1 as Shrink, Shrink$1 as ShrinkIcon, Shrub$1 as Shrub, Shrub$1 as ShrubIcon, Shuffle$1 as Shuffle, Shuffle$1 as ShuffleIcon, Sidebar$1 as Sidebar, SidebarClose$1 as SidebarClose, SidebarClose$1 as SidebarCloseIcon, Sidebar$1 as SidebarIcon, SidebarOpen$1 as SidebarOpen, SidebarOpen$1 as SidebarOpenIcon, Sigma$1 as Sigma, Sigma$1 as SigmaIcon, Signal$1 as Signal, SignalHigh$1 as SignalHigh, SignalHigh$1 as SignalHighIcon, Signal$1 as SignalIcon, SignalLow$1 as SignalLow, SignalLow$1 as SignalLowIcon, SignalMedium$1 as SignalMedium, SignalMedium$1 as SignalMediumIcon, SignalZero$1 as SignalZero, SignalZero$1 as SignalZeroIcon, Siren$1 as Siren, Siren$1 as SirenIcon, SkipBack$1 as SkipBack, SkipBack$1 as SkipBackIcon, SkipForward$1 as SkipForward, SkipForward$1 as SkipForwardIcon, Skull$1 as Skull, Skull$1 as SkullIcon, Slack$1 as Slack, Slack$1 as SlackIcon, Slash$1 as Slash, Slash$1 as SlashIcon, Slice$1 as Slice, Slice$1 as SliceIcon, Sliders$1 as Sliders, SlidersHorizontal$1 as SlidersHorizontal, SlidersHorizontal$1 as SlidersHorizontalIcon, Sliders$1 as SlidersIcon, Smartphone$1 as Smartphone, SmartphoneCharging$1 as SmartphoneCharging, SmartphoneCharging$1 as SmartphoneChargingIcon, Smartphone$1 as SmartphoneIcon, Smile$1 as Smile, Smile$1 as SmileIcon, SmilePlus$1 as SmilePlus, SmilePlus$1 as SmilePlusIcon, Snowflake$1 as Snowflake, Snowflake$1 as SnowflakeIcon, Sofa$1 as Sofa, Sofa$1 as SofaIcon, SortAsc$1 as SortAsc, SortAsc$1 as SortAscIcon, SortDesc$1 as SortDesc, SortDesc$1 as SortDescIcon, Soup$1 as Soup, Soup$1 as SoupIcon, Speaker$1 as Speaker, Speaker$1 as SpeakerIcon, Spline$1 as Spline, Spline$1 as SplineIcon, Sprout$1 as Sprout, Sprout$1 as SproutIcon, Square$1 as Square, Square$1 as SquareIcon, Star$1 as Star, StarHalf$1 as StarHalf, StarHalf$1 as StarHalfIcon, Star$1 as StarIcon, StarOff$1 as StarOff, StarOff$1 as StarOffIcon, Stethoscope$1 as Stethoscope, Stethoscope$1 as StethoscopeIcon, Sticker$1 as Sticker, Sticker$1 as StickerIcon, StickyNote$1 as StickyNote, StickyNote$1 as StickyNoteIcon, StopCircle$1 as StopCircle, StopCircle$1 as StopCircleIcon, StretchHorizontal$1 as StretchHorizontal, StretchHorizontal$1 as StretchHorizontalIcon, StretchVertical$1 as StretchVertical, StretchVertical$1 as StretchVerticalIcon, Strikethrough$1 as Strikethrough, Strikethrough$1 as StrikethroughIcon, Subscript$1 as Subscript, Subscript$1 as SubscriptIcon, Subtitles$1 as Subtitles, Subtitles$1 as SubtitlesIcon, Sun$1 as Sun, SunDim$1 as SunDim, SunDim$1 as SunDimIcon, Sun$1 as SunIcon, SunMedium$1 as SunMedium, SunMedium$1 as SunMediumIcon, SunMoon$1 as SunMoon, SunMoon$1 as SunMoonIcon, SunSnow$1 as SunSnow, SunSnow$1 as SunSnowIcon, Sunrise$1 as Sunrise, Sunrise$1 as SunriseIcon, Sunset$1 as Sunset, Sunset$1 as SunsetIcon, Superscript$1 as Superscript, Superscript$1 as SuperscriptIcon, SwissFranc$1 as SwissFranc, SwissFranc$1 as SwissFrancIcon, SwitchCamera$1 as SwitchCamera, SwitchCamera$1 as SwitchCameraIcon, Sword$1 as Sword, Sword$1 as SwordIcon, Swords$1 as Swords, Swords$1 as SwordsIcon, Syringe$1 as Syringe, Syringe$1 as SyringeIcon, Table$1 as Table, Table2$1 as Table2, Table2$1 as Table2Icon, Table$1 as TableIcon, Tablet$1 as Tablet, Tablet$1 as TabletIcon, Tag$1 as Tag, Tag$1 as TagIcon, Tags$1 as Tags, Tags$1 as TagsIcon, Target$1 as Target, Target$1 as TargetIcon, Tent$1 as Tent, Tent$1 as TentIcon, Terminal$1 as Terminal, Terminal$1 as TerminalIcon, TerminalSquare$1 as TerminalSquare, TerminalSquare$1 as TerminalSquareIcon, TextCursor$1 as TextCursor, TextCursor$1 as TextCursorIcon, TextCursorInput$1 as TextCursorInput, TextCursorInput$1 as TextCursorInputIcon, Thermometer$1 as Thermometer, Thermometer$1 as ThermometerIcon, ThermometerSnowflake$1 as ThermometerSnowflake, ThermometerSnowflake$1 as ThermometerSnowflakeIcon, ThermometerSun$1 as ThermometerSun, ThermometerSun$1 as ThermometerSunIcon, ThumbsDown$1 as ThumbsDown, ThumbsDown$1 as ThumbsDownIcon, ThumbsUp$1 as ThumbsUp, ThumbsUp$1 as ThumbsUpIcon, Ticket$1 as Ticket, Ticket$1 as TicketIcon, Timer$1 as Timer, Timer$1 as TimerIcon, TimerOff$1 as TimerOff, TimerOff$1 as TimerOffIcon, TimerReset$1 as TimerReset, TimerReset$1 as TimerResetIcon, ToggleLeft$1 as ToggleLeft, ToggleLeft$1 as ToggleLeftIcon, ToggleRight$1 as ToggleRight, ToggleRight$1 as ToggleRightIcon, Tornado$1 as Tornado, Tornado$1 as TornadoIcon, ToyBrick$1 as ToyBrick, ToyBrick$1 as ToyBrickIcon, Train$1 as Train, Train$1 as TrainIcon, Trash$1 as Trash, Trash2$1 as Trash2, Trash2$1 as Trash2Icon, Trash$1 as TrashIcon, TreeDeciduous$1 as TreeDeciduous, TreeDeciduous$1 as TreeDeciduousIcon, TreePine$1 as TreePine, TreePine$1 as TreePineIcon, Trees$1 as Trees, Trees$1 as TreesIcon, Trello$1 as Trello, Trello$1 as TrelloIcon, TrendingDown$1 as TrendingDown, TrendingDown$1 as TrendingDownIcon, TrendingUp$1 as TrendingUp, TrendingUp$1 as TrendingUpIcon, Triangle$1 as Triangle, Triangle$1 as TriangleIcon, Trophy$1 as Trophy, Trophy$1 as TrophyIcon, Truck$1 as Truck, Truck$1 as TruckIcon, Tv$1 as Tv, Tv2$1 as Tv2, Tv2$1 as Tv2Icon, Tv$1 as TvIcon, Twitch$1 as Twitch, Twitch$1 as TwitchIcon, Twitter$1 as Twitter, Twitter$1 as TwitterIcon, Type$1 as Type, Type$1 as TypeIcon, Umbrella$1 as Umbrella, Umbrella$1 as UmbrellaIcon, Underline$1 as Underline, Underline$1 as UnderlineIcon, Undo$1 as Undo, Undo2$1 as Undo2, Undo2$1 as Undo2Icon, Undo$1 as UndoIcon, Unlink$1 as Unlink, Unlink2$1 as Unlink2, Unlink2$1 as Unlink2Icon, Unlink$1 as UnlinkIcon, Unlock$1 as Unlock, Unlock$1 as UnlockIcon, Upload$1 as Upload, UploadCloud$1 as UploadCloud, UploadCloud$1 as UploadCloudIcon, Upload$1 as UploadIcon, Usb$1 as Usb, Usb$1 as UsbIcon, User$1 as User, UserCheck$1 as UserCheck, UserCheck$1 as UserCheckIcon, UserCog$1 as UserCog, UserCog$1 as UserCogIcon, User$1 as UserIcon, UserMinus$1 as UserMinus, UserMinus$1 as UserMinusIcon, UserPlus$1 as UserPlus, UserPlus$1 as UserPlusIcon, UserX$1 as UserX, UserX$1 as UserXIcon, Users$1 as Users, Users$1 as UsersIcon, Utensils$1 as Utensils, UtensilsCrossed$1 as UtensilsCrossed, UtensilsCrossed$1 as UtensilsCrossedIcon, Utensils$1 as UtensilsIcon, Vegan$1 as Vegan, Vegan$1 as VeganIcon, VenetianMask$1 as VenetianMask, VenetianMask$1 as VenetianMaskIcon, Verified$1 as Verified, Verified$1 as VerifiedIcon, Vibrate$1 as Vibrate, Vibrate$1 as VibrateIcon, VibrateOff$1 as VibrateOff, VibrateOff$1 as VibrateOffIcon, Video$1 as Video, Video$1 as VideoIcon, VideoOff$1 as VideoOff, VideoOff$1 as VideoOffIcon, View$1 as View, View$1 as ViewIcon, Voicemail$1 as Voicemail, Voicemail$1 as VoicemailIcon, Volume$1 as Volume, Volume1$1 as Volume1, Volume1$1 as Volume1Icon, Volume2$1 as Volume2, Volume2$1 as Volume2Icon, Volume$1 as VolumeIcon, VolumeX$1 as VolumeX, VolumeX$1 as VolumeXIcon, Wallet$1 as Wallet, Wallet$1 as WalletIcon, Wand$1 as Wand, Wand2$1 as Wand2, Wand2$1 as Wand2Icon, Wand$1 as WandIcon, Watch$1 as Watch, Watch$1 as WatchIcon, Waves$1 as Waves, Waves$1 as WavesIcon, Webcam$1 as Webcam, Webcam$1 as WebcamIcon, Webhook$1 as Webhook, Webhook$1 as WebhookIcon, Wheat$1 as Wheat, Wheat$1 as WheatIcon, WheatOff$1 as WheatOff, WheatOff$1 as WheatOffIcon, Wifi$1 as Wifi, Wifi$1 as WifiIcon, WifiOff$1 as WifiOff, WifiOff$1 as WifiOffIcon, Wind$1 as Wind, Wind$1 as WindIcon, Wine$1 as Wine, Wine$1 as WineIcon, WineOff$1 as WineOff, WineOff$1 as WineOffIcon, WrapText$1 as WrapText, WrapText$1 as WrapTextIcon, Wrench$1 as Wrench, Wrench$1 as WrenchIcon, X$1 as X, XCircle$1 as XCircle, XCircle$1 as XCircleIcon, X$1 as XIcon, XOctagon$1 as XOctagon, XOctagon$1 as XOctagonIcon, XSquare$1 as XSquare, XSquare$1 as XSquareIcon, Youtube$1 as Youtube, Youtube$1 as YoutubeIcon, Zap$1 as Zap, Zap$1 as ZapIcon, ZapOff$1 as ZapOff, ZapOff$1 as ZapOffIcon, ZoomIn$1 as ZoomIn, ZoomIn$1 as ZoomInIcon, ZoomOut$1 as ZoomOut, ZoomOut$1 as ZoomOutIcon, index as icons };
//# sourceMappingURL=lucide-solid.js.map
