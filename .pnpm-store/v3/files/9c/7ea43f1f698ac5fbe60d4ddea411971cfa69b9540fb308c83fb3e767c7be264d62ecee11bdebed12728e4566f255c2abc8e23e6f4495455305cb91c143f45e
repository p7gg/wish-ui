/*!
 * Portions of this file are based on code from react-spectrum.
 * Apache License Version 2.0, Copyright 2020 Adobe.
 *
 * Credits to the React Spectrum team:
 * https://github.com/adobe/react-spectrum/blob/15e101b74966bd5eb719c6529ce71ce57eaed430/packages/@react-stately/calendar/src/utils.ts
 * https://github.com/adobe/react-spectrum/blob/15e101b74966bd5eb719c6529ce71ce57eaed430/packages/@react-aria/calendar/src/utils.ts
 */
import { CalendarDate, DateDuration, DateFormatter } from "@internationalized/date";
import { LocalizedStringFormatter } from "@internationalized/string";
import { DateValue } from "./types";
export declare function isInvalid(date: DateValue, minValue?: DateValue, maxValue?: DateValue): boolean;
export declare function alignCenter(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue): CalendarDate;
export declare function alignStart(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue): CalendarDate;
export declare function alignEnd(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue): CalendarDate;
export declare function constrainStart(date: CalendarDate, aligned: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue): CalendarDate;
export declare function constrainValue(date: CalendarDate, minValue?: DateValue, maxValue?: DateValue): CalendarDate;
export declare function previousAvailableDate(date: CalendarDate, minValue: DateValue, isDateUnavailable?: (date: CalendarDate) => boolean): CalendarDate;
export declare function getEraFormat(date: CalendarDate): "short" | undefined;
export declare function formatRange(dateFormatter: DateFormatter, stringFormatter: LocalizedStringFormatter, start: CalendarDate, end: CalendarDate, timeZone: string): string;
export declare function unitDuration(duration: DateDuration): {
    years?: number;
    months?: number;
    weeks?: number;
    days?: number;
};
