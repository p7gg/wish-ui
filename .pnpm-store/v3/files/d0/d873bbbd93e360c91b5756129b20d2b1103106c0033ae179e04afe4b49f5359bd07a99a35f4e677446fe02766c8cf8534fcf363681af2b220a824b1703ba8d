import { ValidationState } from "@kobalte/utils";
import { Accessor } from "solid-js";
export interface SwitchDataSet {
    "data-valid": string | undefined;
    "data-invalid": string | undefined;
    "data-checked": string | undefined;
    "data-required": string | undefined;
    "data-disabled": string | undefined;
    "data-readonly": string | undefined;
    "data-hover": string | undefined;
    "data-focus": string | undefined;
    "data-focus-visible": string | undefined;
    "data-active": string | undefined;
}
export interface SwitchContextValue {
    name: Accessor<string | undefined>;
    value: Accessor<string>;
    dataset: Accessor<SwitchDataSet>;
    validationState: Accessor<ValidationState | undefined>;
    isChecked: Accessor<boolean>;
    isRequired: Accessor<boolean | undefined>;
    isDisabled: Accessor<boolean | undefined>;
    isReadOnly: Accessor<boolean | undefined>;
    generateId: (part: string) => string;
    setIsChecked: (isChecked: boolean) => void;
    setIsFocused: (isFocused: boolean) => void;
    setIsFocusVisible: (isFocusVisible: boolean) => void;
}
export declare const SwitchContext: import("solid-js").Context<SwitchContextValue>;
export declare function useSwitchContext(): SwitchContextValue;
