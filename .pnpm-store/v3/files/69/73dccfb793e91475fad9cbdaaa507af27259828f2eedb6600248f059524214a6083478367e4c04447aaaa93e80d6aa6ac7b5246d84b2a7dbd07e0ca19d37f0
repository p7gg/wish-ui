import { ValidationState } from "@kobalte/utils";
export interface TextFieldRootOptions {
    /** The controlled value of the textfield. */
    value?: string;
    /**
     * The default value when initially rendered.
     * Useful when you do not need to control the value.
     */
    defaultValue?: string;
    /** Event handler called when the value of the textfield changes. */
    onValueChange?: (value: string) => void;
    /**
     * A unique identifier for the component.
     * The id is used to generate id attributes for nested components.
     * If no id prop is provided, a generated id will be used.
     */
    id?: string;
    /**
     * The name of the textfield.
     * Submitted with its owning form as part of a name/value pair.
     */
    name?: string;
    /** Whether the textfield should display its "valid" or "invalid" visual styling. */
    validationState?: ValidationState;
    /** Whether the user must fill the textfield before the owning form can be submitted. */
    isRequired?: boolean;
    /** Whether the textfield is disabled. */
    isDisabled?: boolean;
    /** Whether the textfield is read only. */
    isReadOnly?: boolean;
}
/**
 * A text input that allow users to input custom text entries with a keyboard.
 */
export declare const TextFieldRoot: import("@kobalte/utils").PolymorphicComponent<"div", TextFieldRootOptions>;
