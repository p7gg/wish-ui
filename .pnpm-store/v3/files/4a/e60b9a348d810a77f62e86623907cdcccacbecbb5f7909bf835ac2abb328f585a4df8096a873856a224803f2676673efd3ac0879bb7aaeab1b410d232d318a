/*!
 * Portions of this file are based on code from react-spectrum.
 * Apache License Version 2.0, Copyright 2020 Adobe.
 *
 * Credits to the React Spectrum team:
 * https://github.com/solidjs-community/solid-aria/blob/2c5f54feb5cfea514b1ee0a52d0416878f882351/packages/utils/src/createGlobalListeners.ts
 */
import { onCleanup } from "solid-js";
export function createGlobalListeners() {
    const globalListeners = new Map();
    const addGlobalListener = (eventTarget, type, listener, options) => {
        // Make sure we remove the listener after it is called with the `once` option.
        const fn = options?.once
            ? (...args) => {
                globalListeners.delete(listener);
                listener(...args);
            }
            : listener;
        globalListeners.set(listener, { type, eventTarget, fn, options });
        eventTarget.addEventListener(type, listener, options);
    };
    const removeGlobalListener = (eventTarget, type, listener, options) => {
        const fn = globalListeners.get(listener)?.fn || listener;
        eventTarget.removeEventListener(type, fn, options);
        globalListeners.delete(listener);
    };
    const removeAllGlobalListeners = () => {
        globalListeners.forEach((value, key) => {
            removeGlobalListener(value.eventTarget, value.type, key, value.options);
        });
    };
    onCleanup(() => {
        removeAllGlobalListeners();
    });
    return { addGlobalListener, removeGlobalListener, removeAllGlobalListeners };
}
